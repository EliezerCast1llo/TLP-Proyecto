{"version":3,"file":"static\\development\\pages\\start.js","sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///../node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///../node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js","webpack:///./pages/App.js","webpack:///./pages/Components/Dfd.jsx","webpack:///./pages/Components/Navigation.js","webpack:///./pages/Components/Pestana.js","webpack:///./pages/Components/figure.js","webpack:///./pages/Components/functionsDfd.js","webpack:///./pages/Components/modelsDfd.js","webpack:///./pages/Components/nodeTemplate.js","webpack:///./pages/start.js","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"gojs\"","webpack:///external \"next/head\"","webpack:///external \"react\"","webpack:///external \"styled-jsx/style\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = require(\"core-js/library/fn/object/define-property\");","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","import React from 'react';\r\n//import './App.css';\r\n\r\nimport Navigation from './Components/Navigation';\r\nimport Pestana from './Components/Pestana';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navigation mainname=\"Archivo\" titulo=\"Nuevo\" titulo2=\"Guardar\" titulo3=\"Cerrar\" />\r\n      <Pestana n_file=\"archivo.algo\" contenido=\"Contenido...\" />\r\n\r\n      <style jsx global>{`\r\n    .App {\r\n      text-align: center;\r\n      background: #0F2027;\r\n      background: -webkit-linear-gradient(to right, #2C5364, #203A43, #0F2027);\r\n      background: linear-gradient(to left, #2C5364, #203A43, #0F2027);\r\n  }\r\n  \r\n  .App-logo {\r\n      height: 40vmin;\r\n  }\r\n  \r\n  .App-header {\r\n      min-height: 100vh;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: center;\r\n      font-size: calc(10px + 2vmin);\r\n      color: white;\r\n  }\r\n  \r\n  .App-link {\r\n      color: #09d3ac;\r\n  }\r\n\r\n  #blockWhites {\r\n    background: #373737;\r\n    width: 175px;\r\n    height: 100px;\r\n    z-index: 3;\r\n    display: block;\r\n    position: absolute;\r\n    margin-left: 15px;\r\n\r\n}\r\n    `}</style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport go from 'gojs';\r\n//import './App.css';\r\nimport './figure';\r\nimport dataModels from './modelsDfd'\r\nimport functionDfd from './functionsDfd'\r\nimport nodeTemplate from './nodeTemplate'\r\n\r\nconst $ = go.GraphObject.make;\r\nvar myDiagram, myPalette;\r\nexport default class GoJs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.renderCanvas = this.renderCanvas.bind(this);\r\n    this.state = { myModel: null, myDiagram: null }\r\n  }\r\n\r\n  renderCanvas() {\r\n    myDiagram = $(go.Diagram, this.refs.goJsDiv, {\r\n     /* grid: $(go.Panel, \"Grid\",\r\n        // $(go.Shape, \"LineH\", { stroke: \"transparent\", strokeWidth: .9 }),\r\n        $(go.Shape, \"LineH\", { stroke: \"gray\", strokeWidth: 0.3, interval: 2 }),\r\n        //$(go.Shape, \"LineV\", { stroke: \"transparent\", strokeWidth: .9 }),\r\n        $(go.Shape, \"LineV\", { stroke: \"gray\", strokeWidth: 0.3, interval: 2 })\r\n      ),*/\r\n      \"LinkDrawn\": functionDfd.showLinkLabel,  // this DiagramEvent listener is defined below\r\n      \"LinkRelinked\": functionDfd.showLinkLabel,\r\n      \"toolManager.mouseWheelBehavior\": go.ToolManager.WheelZoom,\r\n      \"draggingTool.isGridSnapEnabled\": true,\r\n      \"undoManager.isEnabled\": true  // enable undo & redo\r\n    }\r\n    );\r\n\r\n    // define the Node templates for regular nodes\r\n    myDiagram.nodeTemplateMap.add(\"\", nodeTemplate.defaultGraph());  // the default category\r\n    myDiagram.nodeTemplateMap.add(\"Conditional\", nodeTemplate.conditionalGraph());\r\n    myDiagram.nodeTemplateMap.add(\"Start\", nodeTemplate.startGraph());\r\n    myDiagram.nodeTemplateMap.add(\"Var\", nodeTemplate.varGraph());\r\n    myDiagram.nodeTemplateMap.add(\"If\", nodeTemplate.ifGraph());\r\n    myDiagram.nodeTemplateMap.add(\"case\", nodeTemplate.caseGraph());\r\n    myDiagram.nodeTemplateMap.add(\"switch\", nodeTemplate.switchGraph());\r\n    myDiagram.nodeTemplateMap.add(\"for\", nodeTemplate.forGraph());\r\n    myDiagram.nodeTemplateMap.add(\"End\", nodeTemplate.endGraph());\r\n    myDiagram.nodeTemplateMap.add(\"Comment\", nodeTemplate.commentGraph());\r\n\r\n    myDiagram.groupTemplate = nodeTemplate.groupGraph();\r\n\r\n    // replace the default Link template in the linkTemplateMap\r\n    myDiagram.linkTemplate = functionDfd.linkTemplate();\r\n\r\n    // temporary links used by LinkingTool and RelinkingTool are also orthogonal:\r\n    myDiagram.toolManager.linkingTool.temporaryLink.routing = go.Link.Orthogonal;\r\n    myDiagram.toolManager.relinkingTool.temporaryLink.routing = go.Link.Orthogonal;\r\n\r\n    // initialize the Palette that is on the left side of the page\r\n\r\n    myPalette = $(go.Palette, \"palette\")/*, // must name or refer to the DIV HTML element\r\n      {\r\n\r\n        nodeTemplateMap: myDiagram.nodeTemplateMap, // share the templates used by myDiagram\r\n        model: new go.GraphLinksModel(dataModels.modelsData(), dataModels.modelsLinks())\r\n      });*/\r\n\r\n    /*myPalette.nodeTemplateMap.add(\"Conditional\", nodeTemplate.conditionalGraph());\r\n    myPalette.nodeTemplateMap.add(\"Start\", nodeTemplate.startGraph());\r\n    myPalette.nodeTemplateMap.add(\"Var\", nodeTemplate.varGraph());\r\n    myPalette.nodeTemplateMap.add(\"If\", nodeTemplate.ifGraph());\r\n    myPalette.nodeTemplateMap.add(\"case\", nodeTemplate.caseGraph());\r\n    myPalette.nodeTemplateMap.add(\"switch\", nodeTemplate.switchGraph());\r\n    myPalette.nodeTemplateMap.add(\"for\", nodeTemplate.forGraph());\r\n    myPalette.nodeTemplateMap.add(\"End\", nodeTemplate.endGraph());\r\n    myPalette.nodeTemplateMap.add(\"Comment\", nodeTemplate.commentGraph());*/\r\n    myPalette.nodeTemplate = nodeTemplate.defaultGraph();\r\n    myPalette.model = new go.GraphLinksModel(dataModels.modelsData(), dataModels.modelsLinks());\r\n    myPalette.layout = $(go.GridLayout,\r\n      {\r\n        wrappingColumn: 2,\r\n        wrappingWidth: 400\r\n      });\r\n    // After the layout, output results:\r\n    myDiagram.addDiagramListener('TextEdited', function () {\r\n      console.info(\"CHANGE DIAGRAM \",myDiagram.model.toJSON());\r\n    });\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    //console.log('componentDidMount')\r\n    this.renderCanvas();\r\n  }\r\n\r\n\r\n  componentWillUpdate(prevProps) {\r\n    /*console.log(JSON.stringify(prevProps, null, 2))\r\n  if (this.props.data !== prevProps.data) {\r\n     console.log('Updating 2');\r\n     const model = this.state.myModel;\r\n     const diagram = this.state.myDiagram;\r\n     model.nodeDataArray = this.props.data;\r\n     diagram.model = model;\r\n     this.setState({ myModel: model, myDiagram: diagram });\r\n   }*/\r\n  }\r\n  onClickChange() {\r\n    console.log(myDiagram.model.toJson());\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='container-fluid'>\r\n        <div className='row'>\r\n          <div className='col-md-3' id='palette' style={{ 'backgroundColor': '#ECF6FF' }}></div>\r\n          <div className='col-md-9 row'>\r\n            <div id='blockWhite' ></div>\r\n            <div ref=\"goJsDiv\" id='goJsDiv' className='col-md-12' style={{ 'width': '500px', 'height': '700px', 'backgroundColor': '#ECF6FF' }}>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <button className='btn btn-primary' onClick={this.onClickChange}>Save</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nclass Navigation extends Component {\r\n  render() {\r\n    return (\r\n      <nav>\r\n        <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark\">\r\n\r\n          <a className=\"navbar-brand\" href=\"#\">IDE</a>\r\n\r\n\r\n          <ul className=\"navbar-nav\">\r\n\r\n            <li className=\"nav-item dropdown\">\r\n              <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbardrop\" data-toggle=\"dropdown\">\r\n                {this.props.mainname}\r\n              </a>\r\n              <div className=\"dropdown-menu\">\r\n                <a className=\"dropdown-item\" href=\"#\">{this.props.titulo}</a>\r\n                <a className=\"dropdown-item disabled\" href=\"#\">{this.props.titulo2}</a>\r\n                <a className=\"dropdown-item disabled\" href=\"#\">{this.props.titulo3}</a>\r\n              </div>\r\n            </li>\r\n\r\n            <li className=\"nav-item dropdown\">\r\n              <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbardrop\" data-toggle=\"dropdown\">\r\n                Editar\r\n      </a>\r\n              <div className=\"dropdown-menu\">\r\n                <a className=\"dropdown-item\" href=\"#\">Copiar</a>\r\n                <a className=\"dropdown-item\" href=\"#\">Pegar</a>\r\n                <a className=\"dropdown-item\" href=\"#\">Modificar</a>\r\n              </div>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">Ayuda</a>\r\n            </li>\r\n\r\n          </ul>\r\n        </nav>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\r\nimport GoJs from './Dfd.jsx';\r\n\r\nclass Pestana extends Component {\r\n  render() {\r\n    return (\r\n      <nav>\r\n\r\n        <nav>\r\n          <div className=\"nav nav-tabs bg-dark\" id=\"nav-tab\" role=\"tablist\">\r\n            <a className=\"nav-item nav-link active\" id=\"nav-home-tab\" data-toggle=\"tab\" href=\"#nav-home\" role=\"tab\" aria-controls=\"nav-home\" aria-selected=\"true\"> {this.props.n_file}</a>\r\n          </div>\r\n        </nav>\r\n        <div className=\"tab-content bg-dark text-white\" id=\"nav-tabContent\">\r\n          <div className=\"tab-pane fade show active\" id=\"nav-home\" role=\"tabpanel\" aria-labelledby=\"nav-home-tab\" >\r\n            <GoJs data={[{\r\n              category: \"Start\",\r\n              text: \"Start\",\r\n              color: '#DC3C00'\r\n            }, {\r\n              category: \"End\",\r\n              text: \"End\"\r\n            }]} />\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </nav>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Pestana;","/*\r\n *  Copyright (C) 1998-2019 by Northwoods Software Corporation. All Rights Reserved.\r\n */\r\n\r\n// This file holds definitions of all standard shape figures -- string values for Shape.figure.\r\n\r\n// The following functions and variables are used throughout this file:\r\nimport go from 'gojs';\r\n/**\r\n * @constructor\r\n * @param {string} name\r\n * @param {number} def\r\n * @param {number=} min defaults to zero\r\n * @param {number=} max defaults to Infinity\r\n * @class\r\n * This FigureParameter class describes various properties each parameter uses in figures.\r\n */\r\nfunction FigureParameter(name, def, min, max) {\r\n    if (min === undefined /*notpresent*/ ) min = 0.0;\r\n    if (max === undefined /*notpresent*/ ) max = Infinity;\r\n    /** @type {string} */\r\n    this._name = name;\r\n    /** @type {number} */\r\n    this._defaultValue = def;\r\n    /** @type {number} */\r\n    this._minimum = min;\r\n    /** @type {number} */\r\n    this._maximum = max;\r\n};\r\n\r\n// Public properties\r\n\r\n/**\r\n * Gets or sets the name of the figure.\r\n * @name FigureParamater#name\r\n * @function.\r\n * @return {string}\r\n */\r\nObject.defineProperty(FigureParameter.prototype, \"name\", {\r\n    get: function() { return this._name; },\r\n    set: function(val) {\r\n        if (typeof val !== \"string\" || val === \"\") throw new Error(\"Shape name must be a valid string.\");\r\n        this._name = val;\r\n    }\r\n});\r\n\r\n/**\r\n * Gets or sets the default value for the parameter.\r\n * @name FigureParameter#defaultValue\r\n * @function\r\n * @return {number}\r\n */\r\nObject.defineProperty(FigureParameter.prototype, \"defaultValue\", {\r\n    get: function() { return this._defaultValue; },\r\n    set: function(val) {\r\n        if (typeof val !== \"number\" || isNaN(val)) throw new Error(\"The default value must be a real number, not: \" + val);\r\n        this._defaultValue = val;\r\n    }\r\n});\r\n\r\n/**\r\n * Gets or sets the minimum value allowed for the figure parameter.\r\n * @name FigureParameter#minimum\r\n * @function.\r\n * @return {number}\r\n */\r\nObject.defineProperty(FigureParameter.prototype, \"minimum\", {\r\n    get: function() { return this._minimum; },\r\n    set: function(val) {\r\n        if (typeof val !== \"number\" || isNaN(val)) throw new Error(\"Minimum must be a real number, not: \" + val);\r\n        this._minimum = val;\r\n    }\r\n});\r\n\r\n/**\r\n * Gets or sets the maximum value allowed for the figure parameter.\r\n * @name FigureParameter#maximum\r\n * @function.\r\n * @return {number}\r\n */\r\nObject.defineProperty(FigureParameter.prototype, \"maximum\", {\r\n    get: function() { return this._maximum; },\r\n    set: function(val) {\r\n        if (typeof val !== \"number\" || isNaN(val)) throw new Error(\"Maximum must be a real number, not: \" + val);\r\n        this._maximum = val;\r\n    }\r\n});\r\n\r\n\r\ngo.Shape._FigureParameters = {};\r\n\r\n/*\r\n * This static function gets a FigureParameter for a particular figure name.\r\n * @param {String} figurename\r\n * @param {number} index, currently must be either 0 or 1\r\n * @return {FigureParameter}\r\n */\r\ngo.Shape.getFigureParameter = function(figurename, index) {\r\n    var arr = go.Shape._FigureParameters[figurename];\r\n    if (!arr) return null;\r\n    return /** @type {FigureParmeter} */ (arr[index]);\r\n};\r\n\r\n/*\r\n * This static function sets a FigureParameter for a particular figure name.\r\n * @param {String} figurename\r\n * @param {number} index, currently must be either 0 or 1\r\n * @param {FigureParameter} figparam\r\n */\r\ngo.Shape.setFigureParameter = function(figurename, index, figparam) {\r\n    if (!(figparam instanceof FigureParameter)) throw new Error(\"Third argument to Shape.setFigureParameter is not FigureParameter: \" + figparam);\r\n    if (figparam.defaultValue < figparam.minimum || figparam.defaultValue > figparam.maximum) throw new Error(\"defaultValue must be between minimum and maximum, not: \" + figparam.defaultValue);\r\n    var arr = go.Shape._FigureParameters[figurename];\r\n    if (!arr) {\r\n        arr = [];\r\n        go.Shape._FigureParameters[figurename] = arr;\r\n    }\r\n    arr[index] = figparam;\r\n};\r\n\r\n\r\n/** @ignore */\r\nvar _CachedPoints = [];\r\n\r\n/**\r\n * @ignore\r\n * @param {number} x\r\n * @param {number} y\r\n * @return {Point}\r\n */\r\nfunction tempPointAt(x, y) {\r\n    var temp = _CachedPoints.pop();\r\n    if (temp === undefined) return new go.Point(x, y);\r\n    temp.x = x;\r\n    temp.y = y;\r\n    return temp;\r\n};\r\n\r\n/**\r\n * @ignore\r\n * @return {Point}\r\n */\r\nfunction tempPoint() {\r\n    var temp = _CachedPoints.pop();\r\n    if (temp === undefined) return new go.Point();\r\n    return temp;\r\n};\r\n\r\n/**\r\n * @ignore\r\n * @param {Point} temp\r\n */\r\nfunction freePoint(temp) {\r\n    _CachedPoints.push(temp);\r\n};\r\n\r\n/**\r\n * @ignore\r\n * @param {number} p1x\r\n * @param {number} p1y\r\n * @param {number} p2x\r\n * @param {number} p2y\r\n * @param {number} q1x\r\n * @param {number} q1y\r\n * @param {number} q2x\r\n * @param {number} q2y\r\n * @param {Point} result\r\n * @return {Point}\r\n */\r\nfunction getIntersection(p1x, p1y, p2x, p2y, q1x, q1y, q2x, q2y, result) {\r\n    var dx1 = p1x - p2x;\r\n    var dx2 = q1x - q2x;\r\n    var x;\r\n    var y;\r\n\r\n    if (dx1 === 0 || dx2 === 0) {\r\n        if (dx1 === 0) {\r\n            var m2 = (q1y - q2y) / dx2;\r\n            var b2 = q1y - m2 * q1x;\r\n            x = p1x;\r\n            y = m2 * x + b2;\r\n        } else {\r\n            var m1 = (p1y - p2y) / dx1;\r\n            var b1 = p1y - m1 * p1x;\r\n            x = q1x;\r\n            y = m1 * x + b1;\r\n        }\r\n    } else {\r\n        let m1 = (p1y - p2y) / dx1;\r\n        let m2 = (q1y - q2y) / dx2;\r\n        let b1 = p1y - m1 * p1x;\r\n        let b2 = q1y - m2 * q1x;\r\n\r\n        x = (b2 - b1) / (m1 - m2);\r\n        y = m1 * x + b1;\r\n    }\r\n\r\n    result.x = x;\r\n    result.y = y;\r\n    return result;\r\n};\r\n\r\n/**\r\n * @ignore\r\n * @param {number} startx\r\n * @param {number} starty\r\n * @param {number} c1x\r\n * @param {number} c1y\r\n * @param {number} c2x\r\n * @param {number} c2y\r\n * @param {number} endx\r\n * @param {number} endy\r\n * @pararm {number} fraction\r\n * @param {Point} curve1cp1  // modified result control point\r\n * @param {Point} curve1cp2  // modified result control point\r\n * @param {Point} midpoint  // modified result\r\n * @param {Point} curve2cp1  // modified result control point\r\n * @param {Point} curve2cp2  // modified result control point\r\n */\r\nfunction breakUpBezier(startx, starty, c1x, c1y, c2x, c2y, endx, endy, fraction,\r\n    curve1cp1, curve1cp2, midpoint, curve2cp1, curve2cp2) {\r\n    var fo = 1 - fraction;\r\n    var so = fraction;\r\n    var m1x = (startx * fo + c1x * so);\r\n    var m1y = (starty * fo + c1y * so);\r\n    var m2x = (c1x * fo + c2x * so);\r\n    var m2y = (c1y * fo + c2y * so);\r\n    var m3x = (c2x * fo + endx * so);\r\n    var m3y = (c2y * fo + endy * so);\r\n    var m12x = (m1x * fo + m2x * so);\r\n    var m12y = (m1y * fo + m2y * so);\r\n    var m23x = (m2x * fo + m3x * so);\r\n    var m23y = (m2y * fo + m3y * so);\r\n    var m123x = (m12x * fo + m23x * so);\r\n    var m123y = (m12y * fo + m23y * so);\r\n\r\n    curve1cp1.x = m1x;\r\n    curve1cp1.y = m1y;\r\n\r\n    curve1cp2.x = m12x;\r\n    curve1cp2.y = m12y;\r\n\r\n    midpoint.x = m123x;\r\n    midpoint.y = m123y;\r\n\r\n    curve2cp1.x = m23x;\r\n    curve2cp1.y = m23y;\r\n\r\n    curve2cp2.x = m3x;\r\n    curve2cp2.y = m3y;\r\n};\r\n\r\nvar GeneratorEllipseSpot1 = new go.Spot(0.156, 0.156);\r\n\r\nvar GeneratorEllipseSpot2 = new go.Spot(0.844, 0.844);\r\n\r\nvar KAPPA = 4 * ((Math.sqrt(2) - 1) / 3);\r\n\r\n\r\n// PREDEFINED figures, built into the v2.0 library:\r\n\r\ngo.Shape.defineFigureGenerator(\"Rectangle\", function(shape, w, h) { // predefined in 2.0\r\n    let geo = new go.Geometry(go.Geometry.Rectangle);\r\n    geo.startX = 0;\r\n    geo.startY = 0;\r\n    geo.endX = w;\r\n    geo.endY = h;\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Square\", function(shape, w, h) { // predefined in 2.0\r\n    let geo = new go.Geometry(go.Geometry.Rectangle);\r\n    geo.startX = 0;\r\n    geo.startY = 0;\r\n    geo.endX = w;\r\n    geo.endY = h;\r\n    geo.defaultStretch = go.GraphObject.Uniform;\r\n    return geo;\r\n});\r\n\r\ngo.Shape.setFigureParameter(\"RoundedRectangle\", 0, new FigureParameter(\"CornerRounding\", 5));\r\ngo.Shape.defineFigureGenerator(\"RoundedRectangle\", function(shape, w, h) { // predefined in 2.0\r\n    var param1 = shape ? shape.parameter1 : NaN;\r\n    if (isNaN(param1) || param1 < 0) param1 = 5; // default corner\r\n    param1 = Math.min(param1, w / 3);\r\n    param1 = Math.min(param1, h / 3);\r\n\r\n    var cpOffset = param1 * KAPPA;\r\n    let geo = new go.Geometry()\r\n        .add(new go.PathFigure(param1, 0, true)\r\n            .add(new go.PathSegment(go.PathSegment.Line, w - param1, 0))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, w, param1, w - cpOffset, 0, w, cpOffset))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, h - param1))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, w - param1, h, w, h - cpOffset, w - cpOffset, h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, param1, h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, 0, h - param1, cpOffset, h, 0, h - cpOffset))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0, param1))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, param1, 0, 0, cpOffset, cpOffset, 0).close()));\r\n    if (cpOffset > 1) {\r\n        geo.spot1 = new go.Spot(0, 0, cpOffset, cpOffset);\r\n        geo.spot2 = new go.Spot(1, 1, -cpOffset, -cpOffset);\r\n    }\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Border\", \"RoundedRectangle\"); // predefined in 2.0\r\n\r\ngo.Shape.defineFigureGenerator(\"Ellipse\", function(shape, w, h) { // predefined in 2.0\r\n    let geo = new go.Geometry(go.Geometry.Ellipse);\r\n    geo.startX = 0;\r\n    geo.startY = 0;\r\n    geo.endX = w;\r\n    geo.endY = h;\r\n    geo.spot1 = GeneratorEllipseSpot1;\r\n    geo.spot2 = GeneratorEllipseSpot2;\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Circle\", function(shape, w, h) { // predefined in 2.0\r\n    let geo = new go.Geometry(go.Geometry.Ellipse);\r\n    geo.startX = 0;\r\n    geo.startY = 0;\r\n    geo.endX = w;\r\n    geo.endY = h;\r\n    geo.spot1 = GeneratorEllipseSpot1;\r\n    geo.spot2 = GeneratorEllipseSpot2;\r\n    geo.defaultStretch = go.GraphObject.Uniform;\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"TriangleRight\", function(shape, w, h) { // predefined in 2.0\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(0, 0)\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, 0.5 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0, h).close()))\r\n        .setSpots(0, 0.25, 0.5, 0.75);\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"TriangleDown\", function(shape, w, h) { // predefined in 2.0\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(0, 0)\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, 0))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, h).close()))\r\n        .setSpots(0.25, 0, 0.75, 0.5);\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"TriangleLeft\", function(shape, w, h) { // predefined in 2.0\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(w, h)\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0, 0.5 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, 0).close()))\r\n        .setSpots(0.5, 0.25, 1, 0.75);\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"TriangleUp\", function(shape, w, h) { // predefined in 2.0\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(w, h)\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0, h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, 0).close()))\r\n        .setSpots(0.25, 0.5, 0.75, 1);\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Triangle\", \"TriangleUp\"); // predefined in 2.0\r\n\r\ngo.Shape.defineFigureGenerator(\"Diamond\", function(shape, w, h) { // predefined in 2.0\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(0.5 * w, 0)\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0, 0.5 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, 0.5 * h).close()))\r\n        .setSpots(0.25, 0.25, 0.75, 0.75);\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"LineH\", function(shape, w, h) { // predefined in 2.0\r\n    let geo = new go.Geometry(go.Geometry.Line);\r\n    geo.startX = 0;\r\n    geo.startY = h / 2;\r\n    geo.endX = w;\r\n    geo.endY = h / 2;\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"LineV\", function(shape, w, h) { // predefined in 2.0\r\n    let geo = new go.Geometry(go.Geometry.Line);\r\n    geo.startX = w / 2;\r\n    geo.startY = 0;\r\n    geo.endX = w / 2;\r\n    geo.endY = h;\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"BarH\", \"Rectangle\"); // predefined in 2.0\r\ngo.Shape.defineFigureGenerator(\"BarV\", \"Rectangle\"); // predefined in 2.0\r\ngo.Shape.defineFigureGenerator(\"MinusLine\", \"LineH\"); // predefined in 2.0\r\n\r\ngo.Shape.defineFigureGenerator(\"PlusLine\", function(shape, w, h) { // predefined in 2.0\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(0, h / 2, false)\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, h / 2))\r\n            .add(new go.PathSegment(go.PathSegment.Move, w / 2, 0))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w / 2, h)));\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"XLine\", function(shape, w, h) { // predefined in 2.0\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(0, h, false)\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, 0))\r\n            .add(new go.PathSegment(go.PathSegment.Move, 0, 0))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, h)));\r\n});\r\n\r\n\r\n// OPTIONAL figures, not predefined in the v2.0 library:\r\n\r\ngo.Shape.defineFigureGenerator(\"AsteriskLine\", function(shape, w, h) {\r\n    var offset = .2 / Math.SQRT2;\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(offset * w, (1 - offset) * h, false)\r\n            .add(new go.PathSegment(go.PathSegment.Line, (1 - offset) * w, offset * h))\r\n            .add(new go.PathSegment(go.PathSegment.Move, offset * w, offset * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, (1 - offset) * w, (1 - offset) * h))\r\n            .add(new go.PathSegment(go.PathSegment.Move, 0, h / 2))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, h / 2))\r\n            .add(new go.PathSegment(go.PathSegment.Move, w / 2, 0))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w / 2, h)));\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"CircleLine\", function(shape, w, h) {\r\n    var rad = w / 2;\r\n    let geo = new go.Geometry()\r\n        .add(new go.PathFigure(w, w / 2, false) // clockwise\r\n            .add(new go.PathSegment(go.PathSegment.Arc, 0, 360, rad, rad, rad, rad).close()));\r\n    geo.spot1 = GeneratorEllipseSpot1;\r\n    geo.spot2 = GeneratorEllipseSpot2;\r\n    geo.defaultStretch = go.GraphObject.Uniform;\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Line1\", function(shape, w, h) {\r\n    let geo = new go.Geometry(go.Geometry.Line);\r\n    geo.startX = 0;\r\n    geo.startY = 0;\r\n    geo.endX = w;\r\n    geo.endY = h;\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Line2\", function(shape, w, h) {\r\n    let geo = new go.Geometry(go.Geometry.Line);\r\n    geo.startX = w;\r\n    geo.startY = 0;\r\n    geo.endX = 0;\r\n    geo.endY = h;\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Curve1\", function(shape, w, h) {\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(0, 0, false)\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, w, h, KAPPA * w, 0, w, (1 - KAPPA) * h)));\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Curve2\", function(shape, w, h) {\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(0, 0, false)\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, w, h, 0, KAPPA * h, (1 - KAPPA) * w, h)));\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Curve3\", function(shape, w, h) {\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(w, 0, false)\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, 0, h, w, KAPPA * h, KAPPA * w, h)));\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Curve4\", function(shape, w, h) {\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(w, 0, false)\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, 0, h, (1 - KAPPA) * w, 0, 0, (1 - KAPPA) * h)));\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"TriangleDownLeft\", function(shape, w, h) {\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(0, 0, true)\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0, h).close()))\r\n        .setSpots(0, 0.5, 0.5, 1);\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"TriangleDownRight\", function(shape, w, h) {\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(w, 0, true)\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0, h).close()))\r\n        .setSpots(0.5, 0.5, 1, 1);\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"TriangleUpLeft\", function(shape, w, h) {\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(0, 0, true)\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, 0))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0, h).close()))\r\n        .setSpots(0, 0, 0.5, 0.5);\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"TriangleUpRight\", function(shape, w, h) {\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(0, 0, true)\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, 0))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, h).close()))\r\n        .setSpots(0.5, 0, 1, 0.5);\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"RightTriangle\", \"TriangleDownLeft\");\r\n\r\ngo.Shape.setFigureParameter(\"Parallelogram1\", 0, new FigureParameter(\"Indent\", .1, -.99, .99));\r\ngo.Shape.defineFigureGenerator(\"Parallelogram1\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN; // indent's percent distance\r\n    if (isNaN(param1)) param1 = 0.1;\r\n    else if (param1 < -1) param1 = -1;\r\n    else if (param1 > 1) param1 = 1;\r\n    var indent = Math.abs(param1) * w;\r\n\r\n\r\n    if (param1 === 0) {\r\n        let geo = new go.Geometry(go.Geometry.Rectangle);\r\n        geo.startX = 0;\r\n        geo.startY = 0;\r\n        geo.endX = w;\r\n        geo.endY = h;\r\n        return geo;\r\n    } else {\r\n        let geo = new go.Geometry();\r\n        if (param1 > 0) {\r\n            geo.add(new go.PathFigure(indent, 0)\r\n                .add(new go.PathSegment(go.PathSegment.Line, w, 0))\r\n                .add(new go.PathSegment(go.PathSegment.Line, w - indent, h))\r\n                .add(new go.PathSegment(go.PathSegment.Line, 0, h).close()));\r\n        } else { // param1 < 0\r\n            geo.add(new go.PathFigure(0, 0)\r\n                .add(new go.PathSegment(go.PathSegment.Line, w - indent, 0))\r\n                .add(new go.PathSegment(go.PathSegment.Line, w, h))\r\n                .add(new go.PathSegment(go.PathSegment.Line, indent, h).close()));\r\n        }\r\n        if (indent < w / 2) {\r\n            geo.setSpots(indent / w, 0, (w - indent) / w, 1);\r\n        }\r\n        return geo;\r\n    }\r\n});\r\ngo.Shape.defineFigureGenerator(\"Parallelogram\", \"Parallelogram1\"); // alias\r\n\r\n// Parallelogram with absolutes instead of scaling\r\ngo.Shape.setFigureParameter(\"Parallelogram2\", 0, new FigureParameter(\"Indent\", 10, -Infinity, Infinity));\r\ngo.Shape.defineFigureGenerator(\"Parallelogram2\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN; // indent's x distance\r\n    if (isNaN(param1)) param1 = 10;\r\n    else if (param1 < -w) param1 = -w;\r\n    else if (param1 > w) param1 = w;\r\n    var indent = Math.abs(param1);\r\n\r\n    if (param1 === 0) {\r\n        let geo = new go.Geometry(go.Geometry.Rectangle);\r\n        geo.startX = 0;\r\n        geo.startY = 0;\r\n        geo.endX = w;\r\n        geo.endY = h;\r\n        return geo;\r\n    } else {\r\n        let geo = new go.Geometry();\r\n        if (param1 > 0) {\r\n            geo.add(new go.PathFigure(indent, 0)\r\n                .add(new go.PathSegment(go.PathSegment.Line, w, 0))\r\n                .add(new go.PathSegment(go.PathSegment.Line, w - indent, h))\r\n                .add(new go.PathSegment(go.PathSegment.Line, 0, h).close()));\r\n        } else { // param1 < 0\r\n            geo.add(new go.PathFigure(0, 0)\r\n                .add(new go.PathSegment(go.PathSegment.Line, w - indent, 0))\r\n                .add(new go.PathSegment(go.PathSegment.Line, w, h))\r\n                .add(new go.PathSegment(go.PathSegment.Line, indent, h).close()));\r\n        }\r\n        if (indent < w / 2) {\r\n            geo.setSpots(indent / w, 0, (w - indent) / w, 1);\r\n        }\r\n        return geo;\r\n    }\r\n});\r\n\r\ngo.Shape.setFigureParameter(\"Trapezoid1\", 0, new FigureParameter(\"Indent\", .2, -.99, .99));\r\ngo.Shape.defineFigureGenerator(\"Trapezoid1\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN; // indent's percent distance\r\n    if (isNaN(param1)) param1 = 0.2;\r\n    else if (param1 < 0.5) param1 = -0.5;\r\n    else if (param1 > 0.5) param1 = 0.5;\r\n    var indent = Math.abs(param1) * w;\r\n\r\n    if (param1 === 0) {\r\n        let geo = new go.Geometry(go.Geometry.Rectangle);\r\n        geo.startX = 0;\r\n        geo.startY = 0;\r\n        geo.endX = w;\r\n        geo.endY = h;\r\n        return geo;\r\n    } else {\r\n        let geo = new go.Geometry();\r\n        if (param1 > 0) {\r\n            geo.add(new go.PathFigure(indent, 0)\r\n                .add(new go.PathSegment(go.PathSegment.Line, w - indent, 0))\r\n                .add(new go.PathSegment(go.PathSegment.Line, w, h))\r\n                .add(new go.PathSegment(go.PathSegment.Line, 0, h).close()));\r\n        } else { // param1 < 0\r\n            geo.add(new go.PathFigure(0, 0)\r\n                .add(new go.PathSegment(go.PathSegment.Line, w, 0))\r\n                .add(new go.PathSegment(go.PathSegment.Line, w - indent, h))\r\n                .add(new go.PathSegment(go.PathSegment.Line, indent, h).close()));\r\n        }\r\n        if (indent < w / 2) {\r\n            geo.setSpots(indent / w, 0, (w - indent) / w, 1);\r\n        }\r\n        return geo;\r\n    }\r\n});\r\ngo.Shape.defineFigureGenerator(\"Trapezoid\", \"Trapezoid1\"); // alias\r\n\r\n// Trapezoid with absolutes instead of scaling\r\ngo.Shape.setFigureParameter(\"Trapezoid2\", 0, new FigureParameter(\"Indent\", 20, -Infinity, Infinity));\r\ngo.Shape.defineFigureGenerator(\"Trapezoid2\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN; // indent's x distance\r\n    if (isNaN(param1)) param1 = 20; // default value\r\n    else if (param1 < -w) param1 = -w / 2;\r\n    else if (param1 > w) param1 = w / 2;\r\n    var indent = Math.abs(param1);\r\n\r\n\r\n    if (param1 === 0) {\r\n        let geo = new go.Geometry(go.Geometry.Rectangle);\r\n        geo.startX = 0;\r\n        geo.startY = 0;\r\n        geo.endX = w;\r\n        geo.endY = h;\r\n        return geo;\r\n    } else {\r\n        let geo = new go.Geometry();\r\n        if (param1 > 0) {\r\n            geo.add(new go.PathFigure(indent, 0)\r\n                .add(new go.PathSegment(go.PathSegment.Line, w - indent, 0))\r\n                .add(new go.PathSegment(go.PathSegment.Line, w, h))\r\n                .add(new go.PathSegment(go.PathSegment.Line, 0, h).close()));\r\n        } else { // param1 < 0\r\n            geo.add(new go.PathFigure(0, 0)\r\n                .add(new go.PathSegment(go.PathSegment.Line, w, 0))\r\n                .add(new go.PathSegment(go.PathSegment.Line, w - indent, h))\r\n                .add(new go.PathSegment(go.PathSegment.Line, indent, h).close()));\r\n        }\r\n        if (indent < w / 2) {\r\n            geo.setSpots(indent / w, 0, (w - indent) / w, 1);\r\n        }\r\n        return geo;\r\n    }\r\n});\r\n\r\ngo.Shape.setFigureParameter(\"ManualOperation\", 0, new FigureParameter(\"Indent\", 10, -Infinity, Infinity));\r\ngo.Shape.defineFigureGenerator(\"ManualOperation\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN;\r\n    // Distance from topleft of bounding rectangle,\r\n    // in % of the total width, of the topleft corner\r\n    if (isNaN(param1)) param1 = 10; // default value\r\n    else if (param1 < -w) param1 = -w / 2;\r\n    else if (param1 > w) param1 = w / 2;\r\n    var indent = Math.abs(param1);\r\n\r\n    if (param1 === 0) {\r\n        let geo = new go.Geometry(go.Geometry.Rectangle);\r\n        geo.startX = 0;\r\n        geo.startY = 0;\r\n        geo.endX = w;\r\n        geo.endY = h;\r\n        return geo;\r\n    } else {\r\n        let geo = new go.Geometry();\r\n        if (param1 > 0) {\r\n            geo.add(new go.PathFigure(0, 0)\r\n                .add(new go.PathSegment(go.PathSegment.Line, w, 0))\r\n                .add(new go.PathSegment(go.PathSegment.Line, w - indent, h))\r\n                .add(new go.PathSegment(go.PathSegment.Line, indent, h).close()));\r\n        } else { // param1 < 0\r\n            geo.add(new go.PathFigure(indent, 0)\r\n                .add(new go.PathSegment(go.PathSegment.Line, w - indent, 0))\r\n                .add(new go.PathSegment(go.PathSegment.Line, w, h))\r\n                .add(new go.PathSegment(go.PathSegment.Line, 0, h).close()));\r\n        }\r\n        if (indent < w / 2) {\r\n            geo.setSpots(indent / w, 0, (w - indent) / w, 1);\r\n        }\r\n        return geo;\r\n    }\r\n});\r\n\r\n\r\n// The following functions are used by a group of regular figures that are defined below:\r\n\r\n/** @ignore */\r\nvar _CachedArrays = [];\r\n\r\n/**\r\n * @ignore\r\n * @return {Array}\r\n */\r\nfunction tempArray() {\r\n    var temp = _CachedArrays.pop();\r\n    if (temp === undefined) return [];\r\n    return temp;\r\n};\r\n\r\n/**\r\n * @ignore\r\n * @param {Array} a\r\n */\r\nfunction freeArray(a) {\r\n    a.length = 0; // clear any references to objects\r\n    _CachedArrays.push(a);\r\n};\r\n\r\n\r\n/**\r\n * @ignore\r\n * This allocates a temporary Array that should be freeArray()'ed by the caller.\r\n * @param {number} sides\r\n * @return {Array}\r\n */\r\nfunction createPolygon(sides) {\r\n    // Point[] points = new Point[sides + 1];\r\n    var points = tempArray();\r\n    var radius = .5;\r\n    var center = .5;\r\n    var offsetAngle = Math.PI * 1.5;\r\n    var angle = 0;\r\n\r\n    // Loop through each side of the polygon\r\n    for (var i = 0; i < sides; i++) {\r\n        angle = 2 * Math.PI / sides * i + offsetAngle;\r\n        points[i] = new go.Point((center + radius * Math.cos(angle)), (center + radius * Math.sin(angle)));\r\n    }\r\n\r\n    // Add the last line\r\n    // points[points.length - 1] = points[0];\r\n    points.push(points[0]);\r\n    return points;\r\n};\r\n\r\n/**\r\n * @ignore\r\n * This allocates a temporary Array that should be freeArray()'ed by the caller.\r\n * @param {number} points\r\n * @return {Array}\r\n */\r\nfunction createBurst(points) {\r\n    var star = createStar(points);\r\n    var pts = tempArray(); // new Point[points * 3 + 1];\r\n\r\n    pts[0] = star[0];\r\n    for (var i = 1, count = 1; i < star.length; i += 2, count += 3) {\r\n        pts[count] = star[i];\r\n        pts[count + 1] = star[i];\r\n        pts[count + 2] = star[i + 1];\r\n    }\r\n\r\n    freeArray(star);\r\n    return pts;\r\n};\r\n\r\n/**\r\n * @ignore\r\n * This allocates a temporary Array that should be freeArray()'ed by the caller.\r\n * @param {number} points\r\n * @return {Array}\r\n */\r\nfunction createStar(points) {\r\n    // First, create a regular polygon\r\n    var polygon = createPolygon(points);\r\n    // Calculate the points inbetween\r\n    var pts = tempArray(); // new Point[points * 2 + 1];\r\n\r\n    var half = Math.floor(polygon.length / 2);\r\n    var count = polygon.length - 1;\r\n    var offset = (points % 2 === 0) ? 2 : 1;\r\n\r\n    for (var i = 0; i < count; i++) {\r\n        // Get the intersection of two lines\r\n        var p0 = polygon[i];\r\n        var p1 = polygon[i + 1];\r\n        var q21 = polygon[(half + i - 1) % count];\r\n        var q2off = polygon[(half + i + offset) % count];\r\n        pts[i * 2] = p0;\r\n        pts[i * 2 + 1] = getIntersection(p0.x, p0.y,\r\n            q21.x, q21.y,\r\n            p1.x, p1.y,\r\n            q2off.x, q2off.y, new go.Point()); // ?? not currently managed\r\n    }\r\n\r\n    pts[pts.length] = pts[0];\r\n\r\n    freeArray(polygon);\r\n    return pts;\r\n};\r\n\r\n\r\ngo.Shape.defineFigureGenerator(\"Pentagon\", function(shape, w, h) {\r\n    var points = createPolygon(5);\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(points[0].x * w, points[0].y * h, true);\r\n    geo.add(fig);\r\n\r\n    for (var i = 1; i < 5; i++) {\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, points[i].x * w, points[i].y * h));\r\n    }\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, points[0].x * w, points[0].y * h).close());\r\n    freeArray(points);\r\n    geo.spot1 = new go.Spot(.2, .22);\r\n    geo.spot2 = new go.Spot(.8, .9);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Hexagon\", function(shape, w, h) {\r\n    var points = createPolygon(6);\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(points[0].x * w, points[0].y * h, true);\r\n    geo.add(fig);\r\n\r\n    for (var i = 1; i < 6; i++) {\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, points[i].x * w, points[i].y * h));\r\n    }\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, points[0].x * w, points[0].y * h).close());\r\n    freeArray(points);\r\n    geo.spot1 = new go.Spot(.07, .25);\r\n    geo.spot2 = new go.Spot(.93, .75);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Heptagon\", function(shape, w, h) {\r\n    var points = createPolygon(7);\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(points[0].x * w, points[0].y * h, true);\r\n    geo.add(fig);\r\n\r\n    for (var i = 1; i < 7; i++) {\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, points[i].x * w, points[i].y * h));\r\n    }\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, points[0].x * w, points[0].y * h).close());\r\n    freeArray(points);\r\n    geo.spot1 = new go.Spot(.2, .15);\r\n    geo.spot2 = new go.Spot(.8, .85);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Octagon\", function(shape, w, h) {\r\n    var points = createPolygon(8);\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(points[0].x * w, points[0].y * h, true);\r\n    geo.add(fig);\r\n\r\n    for (var i = 1; i < 8; i++) {\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, points[i].x * w, points[i].y * h));\r\n    }\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, points[0].x * w, points[0].y * h).close());\r\n    freeArray(points);\r\n    geo.spot1 = new go.Spot(.15, .15);\r\n    geo.spot2 = new go.Spot(.85, .85);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Nonagon\", function(shape, w, h) {\r\n    var points = createPolygon(9);\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(points[0].x * w, points[0].y * h, true);\r\n    geo.add(fig);\r\n\r\n    for (var i = 1; i < 9; i++) {\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, points[i].x * w, points[i].y * h));\r\n    }\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, points[0].x * w, points[0].y * h).close());\r\n    freeArray(points);\r\n    geo.spot1 = new go.Spot(.17, .13);\r\n    geo.spot2 = new go.Spot(.82, .82);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Decagon\", function(shape, w, h) {\r\n    var points = createPolygon(10);\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(points[0].x * w, points[0].y * h, true);\r\n    geo.add(fig);\r\n\r\n    for (var i = 1; i < 10; i++) {\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, points[i].x * w, points[i].y * h));\r\n    }\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, points[0].x * w, points[0].y * h).close());\r\n    freeArray(points);\r\n    geo.spot1 = new go.Spot(.16, .16);\r\n    geo.spot2 = new go.Spot(.84, .84);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Dodecagon\", function(shape, w, h) {\r\n    var points = createPolygon(12);\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(points[0].x * w, points[0].y * h, true);\r\n    geo.add(fig);\r\n\r\n    for (var i = 1; i < 12; i++) {\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, points[i].x * w, points[i].y * h));\r\n    }\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, points[0].x * w, points[0].y * h).close());\r\n    freeArray(points);\r\n    geo.spot1 = new go.Spot(.16, .16);\r\n    geo.spot2 = new go.Spot(.84, .84);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"FivePointedStar\", function(shape, w, h) {\r\n    var starPoints = createStar(5);\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(starPoints[0].x * w, starPoints[0].y * h, true);\r\n    geo.add(fig);\r\n\r\n    for (var i = 1; i < 10; i++) {\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, starPoints[i].x * w, starPoints[i].y * h));\r\n    }\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, starPoints[0].x * w, starPoints[0].y * h).close());\r\n    freeArray(starPoints);\r\n    geo.spot1 = new go.Spot(.266, .333);\r\n    geo.spot2 = new go.Spot(.733, .733);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"SixPointedStar\", function(shape, w, h) {\r\n    var starPoints = createStar(6);\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(starPoints[0].x * w, starPoints[0].y * h, true);\r\n    geo.add(fig);\r\n\r\n    for (var i = 1; i < 12; i++) {\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, starPoints[i].x * w, starPoints[i].y * h));\r\n    }\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, starPoints[0].x * w, starPoints[0].y * h).close());\r\n    freeArray(starPoints);\r\n    geo.spot1 = new go.Spot(.17, .25);\r\n    geo.spot2 = new go.Spot(.83, .75);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"SevenPointedStar\", function(shape, w, h) {\r\n    var starPoints = createStar(7);\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(starPoints[0].x * w, starPoints[0].y * h, true);\r\n    geo.add(fig);\r\n\r\n    for (var i = 1; i < 14; i++) {\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, starPoints[i].x * w, starPoints[i].y * h));\r\n    }\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, starPoints[0].x * w, starPoints[0].y * h).close());\r\n    freeArray(starPoints);\r\n    geo.spot1 = new go.Spot(.222, .277);\r\n    geo.spot2 = new go.Spot(.777, .666);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"EightPointedStar\", function(shape, w, h) {\r\n    var starPoints = createStar(8);\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(starPoints[0].x * w, starPoints[0].y * h, true);\r\n    geo.add(fig);\r\n\r\n    for (var i = 1; i < 16; i++) {\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, starPoints[i].x * w, starPoints[i].y * h));\r\n    }\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, starPoints[0].x * w, starPoints[0].y * h).close());\r\n    freeArray(starPoints);\r\n    geo.spot1 = new go.Spot(.25, .25);\r\n    geo.spot2 = new go.Spot(.75, .75);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"NinePointedStar\", function(shape, w, h) {\r\n    var starPoints = createStar(9);\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(starPoints[0].x * w, starPoints[0].y * h, true);\r\n    geo.add(fig);\r\n\r\n    for (var i = 1; i < 18; i++) {\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, starPoints[i].x * w, starPoints[i].y * h));\r\n    }\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, starPoints[0].x * w, starPoints[0].y * h).close());\r\n    freeArray(starPoints);\r\n    geo.spot1 = new go.Spot(.222, .277);\r\n    geo.spot2 = new go.Spot(.777, .666);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"TenPointedStar\", function(shape, w, h) {\r\n    var starPoints = createStar(10);\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(starPoints[0].x * w, starPoints[0].y * h, true);\r\n    geo.add(fig);\r\n\r\n    for (var i = 1; i < 20; i++) {\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, starPoints[i].x * w, starPoints[i].y * h));\r\n    }\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, starPoints[0].x * w, starPoints[0].y * h).close());\r\n    freeArray(starPoints);\r\n    geo.spot1 = new go.Spot(.281, .261);\r\n    geo.spot2 = new go.Spot(.723, .748);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"FivePointedBurst\", function(shape, w, h) {\r\n    var burstPoints = createBurst(5);\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(burstPoints[0].x * w, burstPoints[0].y * h, true);\r\n    geo.add(fig);\r\n\r\n    for (var i = 1; i < burstPoints.length; i += 3) {\r\n        fig.add(new go.PathSegment(go.PathSegment.Bezier, burstPoints[i + 2].x * w,\r\n            burstPoints[i + 2].y * h, burstPoints[i].x * w,\r\n            burstPoints[i].y * h, burstPoints[i + 1].x * w,\r\n            burstPoints[i + 1].y * h));\r\n    }\r\n    fig.segments.last().close();\r\n    freeArray(burstPoints);\r\n    geo.spot1 = new go.Spot(.222, .277);\r\n    geo.spot2 = new go.Spot(.777, .777);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"SixPointedBurst\", function(shape, w, h) {\r\n    var burstPoints = createBurst(6);\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(burstPoints[0].x * w, burstPoints[0].y * h, true);\r\n    geo.add(fig);\r\n\r\n    for (var i = 1; i < burstPoints.length; i += 3) {\r\n        fig.add(new go.PathSegment(go.PathSegment.Bezier, burstPoints[i + 2].x * w,\r\n            burstPoints[i + 2].y * h, burstPoints[i].x * w,\r\n            burstPoints[i].y * h, burstPoints[i + 1].x * w,\r\n            burstPoints[i + 1].y * h));\r\n    }\r\n    fig.segments.last().close();\r\n    freeArray(burstPoints);\r\n    geo.spot1 = new go.Spot(.170, .222);\r\n    geo.spot2 = new go.Spot(.833, .777);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"SevenPointedBurst\", function(shape, w, h) {\r\n    var burstPoints = createBurst(7);\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(burstPoints[0].x * w, burstPoints[0].y * h, true);\r\n    geo.add(fig);\r\n\r\n    for (var i = 1; i < burstPoints.length; i += 3) {\r\n        fig.add(new go.PathSegment(go.PathSegment.Bezier, burstPoints[i + 2].x * w,\r\n            burstPoints[i + 2].y * h, burstPoints[i].x * w,\r\n            burstPoints[i].y * h, burstPoints[i + 1].x * w,\r\n            burstPoints[i + 1].y * h));\r\n    }\r\n    fig.segments.last().close();\r\n    freeArray(burstPoints);\r\n    geo.spot1 = new go.Spot(.222, .222);\r\n    geo.spot2 = new go.Spot(.777, .777);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"EightPointedBurst\", function(shape, w, h) {\r\n    var burstPoints = createBurst(8);\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(burstPoints[0].x * w, burstPoints[0].y * h, true);\r\n    geo.add(fig);\r\n\r\n    for (var i = 1; i < burstPoints.length; i += 3) {\r\n        fig.add(new go.PathSegment(go.PathSegment.Bezier, burstPoints[i + 2].x * w,\r\n            burstPoints[i + 2].y * h, burstPoints[i].x * w,\r\n            burstPoints[i].y * h, burstPoints[i + 1].x * w,\r\n            burstPoints[i + 1].y * h));\r\n    }\r\n    fig.segments.last().close();\r\n    freeArray(burstPoints);\r\n    geo.spot1 = new go.Spot(.222, .222);\r\n    geo.spot2 = new go.Spot(.777, .777);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"NinePointedBurst\", function(shape, w, h) {\r\n    var burstPoints = createBurst(9);\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(burstPoints[0].x * w, burstPoints[0].y * h, true);\r\n    geo.add(fig);\r\n\r\n    for (var i = 1; i < burstPoints.length; i += 3) {\r\n        fig.add(new go.PathSegment(go.PathSegment.Bezier, burstPoints[i + 2].x * w,\r\n            burstPoints[i + 2].y * h, burstPoints[i].x * w,\r\n            burstPoints[i].y * h, burstPoints[i + 1].x * w,\r\n            burstPoints[i + 1].y * h));\r\n    }\r\n    fig.segments.last().close();\r\n    freeArray(burstPoints);\r\n    geo.spot1 = new go.Spot(.222, .222);\r\n    geo.spot2 = new go.Spot(.777, .777);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"TenPointedBurst\", function(shape, w, h) {\r\n    var burstPoints = createBurst(10);\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(burstPoints[0].x * w, burstPoints[0].y * h, true);\r\n    geo.add(fig);\r\n\r\n    for (var i = 1; i < burstPoints.length; i += 3) {\r\n        fig.add(new go.PathSegment(go.PathSegment.Bezier, burstPoints[i + 2].x * w,\r\n            burstPoints[i + 2].y * h, burstPoints[i].x * w,\r\n            burstPoints[i].y * h, burstPoints[i + 1].x * w,\r\n            burstPoints[i + 1].y * h));\r\n    }\r\n    fig.segments.last().close();\r\n    freeArray(burstPoints);\r\n    geo.spot1 = new go.Spot(.222, .222);\r\n    geo.spot2 = new go.Spot(.777, .777);\r\n    return geo;\r\n});\r\n\r\n\r\n\r\ngo.Shape.setFigureParameter(\"FramedRectangle\", 0, new FigureParameter(\"ThicknessX\", 8));\r\ngo.Shape.setFigureParameter(\"FramedRectangle\", 1, new FigureParameter(\"ThicknessY\", 8));\r\ngo.Shape.defineFigureGenerator(\"FramedRectangle\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN;\r\n    var param2 = shape ? shape.parameter2 : NaN;\r\n    if (isNaN(param1)) param1 = 8; // default values PARAMETER 1 is for WIDTH\r\n    if (isNaN(param2)) param2 = 8; // default values PARAMETER 2 is for HEIGHT\r\n\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n    // outer rectangle, clockwise\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\r\n    if (param1 < w / 2 && param2 < h / 2) {\r\n        // inner rectangle, counter-clockwise\r\n        fig.add(new go.PathSegment(go.PathSegment.Move, param1, param2)); // subpath\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, param1, h - param2));\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, w - param1, h - param2));\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, w - param1, param2).close());\r\n    }\r\n    geo.setSpots(0, 0, 1, 1, param1, param2, -param1, -param2);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.setFigureParameter(\"Ring\", 0, new FigureParameter(\"Thickness\", 8));\r\ngo.Shape.defineFigureGenerator(\"Ring\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN;\r\n    if (isNaN(param1) || param1 < 0) param1 = 8;\r\n\r\n    var rad = w / 2;\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w, w / 2, true); // clockwise\r\n    geo.add(fig);\r\n    fig.add(new go.PathSegment(go.PathSegment.Arc, 0, 360, rad, rad, rad, rad).close());\r\n\r\n    var rad2 = Math.max(rad - param1, 0);\r\n    if (rad2 > 0) { // counter-clockwise\r\n        fig.add(new go.PathSegment(go.PathSegment.Move, w / 2 + rad2, w / 2))\r\n        fig.add(new go.PathSegment(go.PathSegment.Arc, 0, -360, rad, rad, rad2, rad2).close());\r\n    }\r\n    geo.spot1 = GeneratorEllipseSpot1;\r\n    geo.spot2 = GeneratorEllipseSpot2;\r\n    geo.defaultStretch = go.GraphObject.Uniform;\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Cloud\", function(shape, w, h) {\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(.08034461 * w, .1944299 * h, true)\r\n            .add(new go.PathSegment(go.PathSegment.Bezier,\r\n                .2008615 * w, .05349299 * h, -.09239631 * w, .07836421 * h, .1406031 * w, -.0542823 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier,\r\n                .4338609 * w, .074219 * h, .2450511 * w, -.00697547 * h, .3776197 * w, -.01112067 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier,\r\n                .6558228 * w, .07004196 * h, .4539471 * w, 0, .6066018 * w, -.02526587 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier,\r\n                .8921095 * w, .08370865 * h, .6914277 * w, -.01904177 * h, .8921095 * w, -.01220843 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier,\r\n                .9147671 * w, .3194596 * h, 1.036446 * w, .04105738 * h, 1.020377 * w, .3022052 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier,\r\n                .9082935 * w, .562044 * h, 1.04448 * w, .360238 * h, .992256 * w, .5219009 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier,\r\n                .9212406 * w, .8217117 * h, 1.032337 * w, .5771781 * h, 1.018411 * w, .8120651 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier,\r\n                .7592566 * w, .9156953 * h, 1.028411 * w, .9571472 * h, .8556702 * w, 1.052487 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier,\r\n                .5101666 * w, .9310455 * h, .7431877 * w, 1.009325 * h, .5624123 * w, 1.021761 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier,\r\n                .2609328 * w, .9344623 * h, .4820677 * w, 1.031761 * h, .3030112 * w, 1.002796 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier,\r\n                .08034461 * w, .870098 * h, .2329994 * w, 1.01518 * h, .03213784 * w, 1.01518 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier,\r\n                .06829292 * w, .6545475 * h, -.02812061 * w, .9032597 * h, -.01205169 * w, .6835638 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier,\r\n                .06427569 * w, .4265613 * h, -.01812061 * w, .6089503 * h, -.00606892 * w, .4555777 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier,\r\n                .08034461 * w, .1944299 * h, -.01606892 * w, .3892545 * h, -.01205169 * w, .1944299 * h)))\r\n        .setSpots(.1, .1, .9, .9);\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"StopSign\", function(shape, w, h) {\r\n    var part = 1 / (Math.SQRT2 + 2);\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(part * w, 0, true)\r\n            .add(new go.PathSegment(go.PathSegment.Line, (1 - part) * w, 0))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, part * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, (1 - part) * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, (1 - part) * w, h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, part * w, h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0, (1 - part) * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0, part * h).close()))\r\n        .setSpots(part / 2, part / 2, 1 - part / 2, 1 - part / 2);\r\n});\r\n\r\ngo.Shape.setFigureParameter(\"Pie\", 0, new FigureParameter(\"Start\", 0, -360, 360));\r\ngo.Shape.setFigureParameter(\"Pie\", 1, new FigureParameter(\"Sweep\", 315, -360, 360));\r\ngo.Shape.defineFigureGenerator(\"Pie\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN;\r\n    var param2 = shape ? shape.parameter2 : NaN;\r\n    if (isNaN(param1)) param1 = 0; // default values PARAMETER 1 is for Start Angle\r\n    if (isNaN(param2)) param2 = 315; // default values PARAMETER 2 is for Sweep Angle\r\n\r\n    var start = param1 % 360;\r\n    if (start < 0) start += 360;\r\n    var sweep = param2 % 360;\r\n    var rad = Math.min(w, h) / 2;\r\n\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(rad, rad) // start point\r\n            .add(new go.PathSegment(go.PathSegment.Arc,\r\n                    start, sweep, // angles\r\n                    rad, rad, // center\r\n                    rad, rad) // radius\r\n                .close()));\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"PiePiece\", function(shape, w, h) {\r\n    var factor = KAPPA / Math.SQRT2 * .5;\r\n    var x1 = Math.SQRT2 / 2;\r\n    var y1 = 1 - Math.SQRT2 / 2;\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(w, h, true)\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, x1 * w, y1 * h, w, (1 - factor) * h, (x1 + factor) * w, (y1 + factor) * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0, h).close()));\r\n});\r\n\r\ngo.Shape.setFigureParameter(\"ThickCross\", 0, new FigureParameter(\"Thickness\", 30));\r\ngo.Shape.defineFigureGenerator(\"ThickCross\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN;\r\n    if (isNaN(param1) || param1 < 0) param1 = 30;\r\n\r\n    var t = Math.min(param1, w) / 2;\r\n    var mx = w / 2;\r\n    var my = h / 2;\r\n\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(mx - t, 0, true)\r\n            .add(new go.PathSegment(go.PathSegment.Line, mx + t, 0))\r\n            .add(new go.PathSegment(go.PathSegment.Line, mx + t, my - t))\r\n\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, my - t))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, my + t))\r\n            .add(new go.PathSegment(go.PathSegment.Line, mx + t, my + t))\r\n\r\n            .add(new go.PathSegment(go.PathSegment.Line, mx + t, h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, mx - t, h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, mx - t, my + t))\r\n\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0, my + t))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0, my - t))\r\n            .add(new go.PathSegment(go.PathSegment.Line, mx - t, my - t).close()));\r\n});\r\n\r\ngo.Shape.setFigureParameter(\"ThinCross\", 0, new FigureParameter(\"Thickness\", 10));\r\ngo.Shape.defineFigureGenerator(\"ThinCross\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN;\r\n    if (isNaN(param1) || param1 < 0) param1 = 10;\r\n\r\n    var t = Math.min(param1, w) / 2;\r\n    var mx = w / 2;\r\n    var my = h / 2;\r\n\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(mx - t, 0, true)\r\n            .add(new go.PathSegment(go.PathSegment.Line, mx + t, 0))\r\n            .add(new go.PathSegment(go.PathSegment.Line, mx + t, my - t))\r\n\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, my - t))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, my + t))\r\n            .add(new go.PathSegment(go.PathSegment.Line, mx + t, my + t))\r\n\r\n            .add(new go.PathSegment(go.PathSegment.Line, mx + t, h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, mx - t, h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, mx - t, my + t))\r\n\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0, my + t))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0, my - t))\r\n            .add(new go.PathSegment(go.PathSegment.Line, mx - t, my - t).close()));\r\n});\r\n\r\n\r\ngo.Shape.setFigureParameter(\"ThickX\", 0, new FigureParameter(\"Thickness\", 30));\r\ngo.Shape.defineFigureGenerator(\"ThickX\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN;\r\n    if (isNaN(param1) || param1 < 0) param1 = 30;\r\n    if (w === 0 || h === 0) {\r\n        let geo = new go.Geometry(go.Geometry.Rectangle);\r\n        geo.startX = 0;\r\n        geo.startY = 0;\r\n        geo.endX = w;\r\n        geo.endY = h;\r\n        return geo;\r\n    } else {\r\n        var w2 = w / 2;\r\n        var h2 = h / 2;\r\n        var a2 = Math.atan2(h, w);\r\n        var dx = param1 - Math.min(Math.cos(a2) * param1 / 2, w2);\r\n        var dy = param1 - Math.min(Math.sin(a2) * param1 / 2, h2);\r\n\r\n        let geo = new go.Geometry();\r\n        var fig = new go.PathFigure(dx, 0, true);\r\n        geo.add(fig);\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, w2, .2 * h));\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, w - dx, 0));\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, w, dy));\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, .8 * w, h2));\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, w, h - dy));\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, w - dx, h));\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, w2, .8 * h));\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, dx, h));\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, 0, h - dy));\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, h2));\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, 0, dy).close());\r\n        return geo;\r\n    }\r\n});\r\n\r\ngo.Shape.setFigureParameter(\"ThinX\", 0, new FigureParameter(\"Thickness\", 10));\r\ngo.Shape.defineFigureGenerator(\"ThinX\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN;\r\n    if (isNaN(param1) || param1 < 0) param1 = 10;\r\n\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(.1 * w, 0, true);\r\n    geo.add(fig);\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .4 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .9 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .1 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .6 * w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .9 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .9 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .6 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .1 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, .9 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .4 * w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, .1 * h).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.setFigureParameter(\"SquareIBeam\", 0, new FigureParameter(\"BeamWidth\", 0.2, 0.1, 0.9));\r\ngo.Shape.defineFigureGenerator(\"SquareIBeam\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN; // width of the ibeam in % of the total width\r\n    if (isNaN(param1)) param1 = .2;\r\n\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, param1 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, (.5 + param1 / 2) * w, param1 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, (.5 + param1 / 2) * w, (1 - param1) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, (1 - param1) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, (1 - param1) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, (.5 - param1 / 2) * w, (1 - param1) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, (.5 - param1 / 2) * w, param1 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, param1 * h).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.setFigureParameter(\"RoundedIBeam\", 0, new FigureParameter(\"Curviness\", .5, .05, .65));\r\ngo.Shape.defineFigureGenerator(\"RoundedIBeam\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN; // curviness of the ibeam relative to total width\r\n    if (isNaN(param1)) param1 = .5;\r\n\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, w, h, Math.abs((1 - param1)) * w, .25 * h, Math.abs((1 - param1)) * w, .75 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, 0, param1 * w, .75 * h,\r\n        param1 * w, .25 * h).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"HalfEllipse\", function(shape, w, h) {\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(0, 0, true)\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, w, .5 * h, KAPPA * w, 0, w, (.5 - KAPPA / 2) * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, 0, h, w, (.5 + KAPPA / 2) * h, KAPPA * w, h).close()))\r\n        .setSpots(0, 0.156, 0.844, 0.844);\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Crescent\", function(shape, w, h) {\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(0, 0, true)\r\n            .add(new go.PathSegment(go.PathSegment.Bezier,\r\n                0, h, w, 0, w, h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier,\r\n                0, 0, 0.5 * w, 0.75 * h, 0.5 * w, 0.25 * h).close()))\r\n        .setSpots(.311, 0.266, 0.744, 0.744);\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Heart\", function(shape, w, h) {\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(.5 * w, h, true)\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, 0, .3 * h, .1 * w, .8 * h, 0, .5 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, .3 * h, 0, 0, .45 * w, 0))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, w, .3 * h, .55 * w, 0, w, 0))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, h, w, .5 * h, .9 * w, .8 * h).close()))\r\n        .setSpots(.14, .29, .86, .78);\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Spade\", function(shape, w, h) {\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(.5 * w, 0, true)\r\n            .add(new go.PathSegment(go.PathSegment.Line, .51 * w, .01 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, w, .5 * h, .6 * w, .2 * h, w, .25 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, .55 * w, .7 * h, w, .8 * h, .6 * w, .8 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, .75 * w, h, .5 * w, .75 * h, .55 * w, .95 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, .25 * w, h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, .45 * w, .7 * h, .45 * w, .95 * h, .5 * w, .75 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, 0, .5 * h, .4 * w, .8 * h, 0, .8 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, .49 * w, .01 * h, 0, .25 * h, .4 * w, .2 * h).close()))\r\n        .setSpots(.14, .26, .86, .78);\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Club\", function(shape, w, h) {\r\n    let geo = new go.Geometry()\r\n    var fig = new go.PathFigure(.4 * w, .6 * h, true);\r\n    geo.add(fig);\r\n    // Start the base\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .15 * w, h, .5 * w, .75 * h, .45 * w, .95 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .85 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .6 * w, .6 * h, .55 * w, .95 * h, .5 * w, .75 * h));\r\n    // First circle:\r\n    var r = .2; // radius\r\n    var cx = .3; // offset from Center x\r\n    var cy = 0; // offset from Center y\r\n    var d = r * KAPPA;\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (.5 + cx) * w, (.5 + r + cy) * h,\r\n        (.5 - r + cx) * w, (.5 + d + cy) * h,\r\n        (.5 - d + cx) * w, (.5 + r + cy) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (1 - .5 + r + cx) * w, (.5 + cy) * h,\r\n        (.5 + d + cx) * w, (.5 + r + cy) * h,\r\n        (.5 + r + cx) * w, (.5 + d + cy) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (.5 + cx) * w, (.5 - r + cy) * h,\r\n        (1 - .5 + r + cx) * w, (.5 - d + cy) * h,\r\n        (.5 + d + cx) * w, (.5 - r + cy) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (.65) * w, (0.36771243) * h,\r\n        (.5 - d + cx) * w, (.5 - r + cy) * h,\r\n        (.5 - r + cx + .05) * w, (.5 - d + cy - .02) * h));\r\n    r = .2; // radius\r\n    cx = 0; // offset from Center x\r\n    cy = -.3; // offset from Center y\r\n    d = r * KAPPA;\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (1 - .5 + r + cx) * w, (.5 + cy) * h,\r\n        (.5 + d + cx) * w, (.5 + r + cy) * h,\r\n        (.5 + r + cx) * w, (.5 + d + cy) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (.5 + cx) * w, (.5 - r + cy) * h,\r\n        (1 - .5 + r + cx) * w, (.5 - d + cy) * h,\r\n        (.5 + d + cx) * w, (.5 - r + cy) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (.5 - r + cx) * w, (.5 + cy) * h,\r\n        (.5 - d + cx) * w, (.5 - r + cy) * h,\r\n        (.5 - r + cx) * w, (.5 - d + cy) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (.5 - d + cx) * w, (.5 + r + cy) * h,\r\n        (.5 - r + cx) * w, (.5 + d + cy) * h,\r\n        (.5 - d + cx) * w, (.5 + r + cy) * h));\r\n    r = .2; // radius\r\n    cx = -.3; // offset from Center x\r\n    cy = 0; // offset from Center y\r\n    d = r * KAPPA;\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (.5 + cx) * w, (.5 - r + cy) * h,\r\n        (1 - .5 + r + cx - .05) * w, (.5 - d + cy - .02) * h,\r\n        (.5 + d + cx) * w, (.5 - r + cy) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (.5 - r + cx) * w, (.5 + cy) * h,\r\n        (.5 - d + cx) * w, (.5 - r + cy) * h,\r\n        (.5 - r + cx) * w, (.5 - d + cy) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (.5 + cx) * w, (.5 + r + cy) * h,\r\n        (.5 - r + cx) * w, (.5 + d + cy) * h,\r\n        (.5 - d + cx) * w, (.5 + r + cy) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .4 * w, .6 * h,\r\n        (.5 + d + cx) * w, (.5 + r + cy) * h,\r\n        (.5 + r + cx) * w, (.5 + d + cy) * h).close());\r\n    geo.setSpots(.06, .33, .93, .68);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"YinYang\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w * 0.5, 0, true);\r\n    geo.add(fig);\r\n    // Right semi-circle\r\n    fig.add(new go.PathSegment(go.PathSegment.Arc, 270, 180, w * 0.5, w * 0.5, w * 0.5, w * 0.5));\r\n    // bottom semi-circle\r\n    fig.add(new go.PathSegment(go.PathSegment.Arc, 90, -180, w * 0.5, w * 0.75, w * 0.25, w * 0.25));\r\n    // top semi-circle\r\n    fig.add(new go.PathSegment(go.PathSegment.Arc, 90, 180, w * 0.5, w * 0.25, w * 0.25, w * 0.25));\r\n    var radius = .1; // of the small circles\r\n    var centerx = .5;\r\n    var centery = .25;\r\n    // Top small circle, goes counter-clockwise\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, (centerx + radius) * w, (centery) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Arc, 0, -360, w * centerx, h * centery, radius * w, radius * w).close()); // Right semi-circle\r\n    // Left semi-circle\r\n    fig = new go.PathFigure(w * 0.5, 0, false);\r\n    geo.add(fig);\r\n    fig.add(new go.PathSegment(go.PathSegment.Arc, 270, -180, w * 0.5, w * 0.5, w * 0.5, w * 0.5));\r\n    centery = .75;\r\n    // Bottom small circle\r\n    fig = new go.PathFigure((centerx + radius) * w, (centery) * h, true); // Not a subpath\r\n    geo.add(fig);\r\n    fig.add(new go.PathSegment(go.PathSegment.Arc, 0, 360, w * centerx, h * centery, radius * w, radius * w).close()); // Right semi-circle\r\n    geo.defaultStretch = go.GraphObject.Uniform;\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Peace\", function(shape, w, h) {\r\n    var a = 1.0 - 0.1464466094067262; // at 45 degrees\r\n    var w2 = 0.5 * w;\r\n    var h2 = 0.5 * h;\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(w2, 0, false)\r\n            .add(new go.PathSegment(go.PathSegment.Arc, 270, 360, w2, h2, w2, h2))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w2, h))\r\n            .add(new go.PathSegment(go.PathSegment.Move, w2, h2))\r\n            .add(new go.PathSegment(go.PathSegment.Line, (1.0 - a) * w, a * h))\r\n            .add(new go.PathSegment(go.PathSegment.Move, w2, h2))\r\n            .add(new go.PathSegment(go.PathSegment.Line, a * w, a * h)));\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"NotAllowed\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var cpOffset = KAPPA * .5;\r\n    var radius = .5;\r\n    var centerx = .5;\r\n    var centery = .5;\r\n    var fig = new go.PathFigure(centerx * w, (centery - radius) * h);\r\n    geo.add(fig);\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery - radius) * h,\r\n        (centerx - radius) * w, (centery - cpOffset) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx - radius) * w, (centery + cpOffset) * h,\r\n        (centerx - cpOffset) * w, (centery + radius) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery + radius) * h,\r\n        (centerx + radius) * w, (centery + cpOffset) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx + radius) * w, (centery - cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery - radius) * h));\r\n    // Inner circle, composed of two parts, separated by\r\n    // a beam across going from top-right to bottom-left.\r\n    radius = .40;\r\n    cpOffset = KAPPA * .40;\r\n    // First we cut up the top right 90 degree curve into two smaller\r\n    // curves.\r\n    // Since its clockwise, StartOfArrow is the first of the two points\r\n    // on the circle. EndOfArrow is the other one.\r\n    var startOfArrowc1 = tempPoint();\r\n    var startOfArrowc2 = tempPoint();\r\n    var startOfArrow = tempPoint();\r\n    var unused = tempPoint();\r\n    breakUpBezier(centerx, centery - radius,\r\n        centerx + cpOffset, centery - radius,\r\n        centerx + radius, centery - cpOffset,\r\n        centerx + radius, centery, .42, startOfArrowc1,\r\n        startOfArrowc2, startOfArrow, unused, unused);\r\n    var endOfArrowc1 = tempPoint();\r\n    var endOfArrowc2 = tempPoint();\r\n    var endOfArrow = tempPoint();\r\n    breakUpBezier(centerx, centery - radius,\r\n        centerx + cpOffset, centery - radius,\r\n        centerx + radius, centery - cpOffset,\r\n        centerx + radius, centery, .58, unused,\r\n        unused, endOfArrow, endOfArrowc1, endOfArrowc2);\r\n    // Cut up the bottom left 90 degree curve into two smaller curves.\r\n    var startOfArrow2c1 = tempPoint();\r\n    var startOfArrow2c2 = tempPoint();\r\n    var startOfArrow2 = tempPoint();\r\n    breakUpBezier(centerx, centery + radius,\r\n        centerx - cpOffset, centery + radius,\r\n        centerx - radius, centery + cpOffset,\r\n        centerx - radius, centery, .42, startOfArrow2c1,\r\n        startOfArrow2c2, startOfArrow2, unused, unused);\r\n    var endOfArrow2c1 = tempPoint();\r\n    var endOfArrow2c2 = tempPoint();\r\n    var endOfArrow2 = tempPoint();\r\n    breakUpBezier(centerx, centery + radius,\r\n        centerx - cpOffset, centery + radius,\r\n        centerx - radius, centery + cpOffset,\r\n        centerx - radius, centery, .58, unused,\r\n        unused, endOfArrow2, endOfArrow2c1, endOfArrow2c2);\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, endOfArrow2.x * w, endOfArrow2.y * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, endOfArrow2c1.x * w, endOfArrow2c1.y * h,\r\n        endOfArrow2c2.x * w, endOfArrow2c2.y * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h,\r\n        (centerx - cpOffset) * w, (centery - radius) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, startOfArrow.x * w, startOfArrow.y * h, startOfArrowc1.x * w, startOfArrowc1.y * h,\r\n        startOfArrowc2.x * w, startOfArrowc2.y * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, endOfArrow2.x * w, endOfArrow2.y * h).close());\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, startOfArrow2.x * w, startOfArrow2.y * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, endOfArrow.x * w, endOfArrow.y * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, endOfArrowc1.x * w, endOfArrowc1.y * h,\r\n        endOfArrowc2.x * w, endOfArrowc2.y * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery + radius) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, startOfArrow2.x * w, startOfArrow2.y * h, startOfArrow2c1.x * w, startOfArrow2c1.y * h,\r\n        startOfArrow2c2.x * w, startOfArrow2c2.y * h).close());\r\n    freePoint(startOfArrowc1);\r\n    freePoint(startOfArrowc2);\r\n    freePoint(startOfArrow);\r\n    freePoint(unused);\r\n    freePoint(endOfArrowc1);\r\n    freePoint(endOfArrowc2);\r\n    freePoint(endOfArrow);\r\n    freePoint(startOfArrow2c1);\r\n    freePoint(startOfArrow2c2);\r\n    freePoint(startOfArrow2);\r\n    freePoint(endOfArrow2c1);\r\n    freePoint(endOfArrow2c2);\r\n    freePoint(endOfArrow2);\r\n    geo.defaultStretch = go.GraphObject.Uniform;\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Fragile\", function(shape, w, h) {\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(0, 0, true)\r\n            .add(new go.PathSegment(go.PathSegment.Line, .25 * w, 0))\r\n            .add(new go.PathSegment(go.PathSegment.Line, .2 * w, .15 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, .3 * w, .25 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, .29 * w, .33 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, .35 * w, .25 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, .3 * w, .15 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, .4 * w, 0))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, 0))\r\n            // Left Side\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, .55 * w, .5 * h, w, .25 * h, .75 * w, .5 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, .55 * w, .9 * h))\r\n            // The base\r\n            .add(new go.PathSegment(go.PathSegment.Line, .7 * w, .9 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, .7 * w, h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, .3 * w, h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, .3 * w, .9 * h))\r\n            // Right side\r\n            .add(new go.PathSegment(go.PathSegment.Line, .45 * w, .9 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, .45 * w, .5 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, 0, 0, .25 * w, .5 * h, 0, .25 * h).close()));\r\n});\r\n\r\ngo.Shape.setFigureParameter(\"HourGlass\", 0, new FigureParameter(\"Thickness\", 30));\r\ngo.Shape.defineFigureGenerator(\"HourGlass\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN; // width at middle of hourglass\r\n    if (isNaN(param1) || param1 < 0) param1 = 30;\r\n    if (param1 > w) param1 = w;\r\n    var x1 = (w - param1) / 2;\r\n    var x2 = x1 + param1;\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(x2, 0.5 * h)\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0, h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, x1, 0.5 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0, 0))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, 0).close()));\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Lightning\", function(shape, w, h) {\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(0, 0.55 * h)\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.6 * w, 0))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.3 * w, 0.45 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, 0.45 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.4 * w, h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.7 * w, 0.55 * h).close()));\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"GenderMale\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var cpOffset = KAPPA * .4;\r\n    var radius = .4;\r\n    var centerx = .5;\r\n    var centery = .5;\r\n    var unused = tempPoint();\r\n    var mid = tempPoint();\r\n    var c1 = tempPoint();\r\n    var c2 = tempPoint();\r\n    var fig = new go.PathFigure((centerx - radius) * w, centery * h, false);\r\n    geo.add(fig);\r\n\r\n    // Outer circle\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h,\r\n        (centerx - cpOffset) * w, (centery - radius) * h));\r\n    breakUpBezier(centerx, centery - radius,\r\n        centerx + cpOffset, centery - radius,\r\n        centerx + radius, centery - cpOffset,\r\n        centerx + radius, centery, .44, c1,\r\n        c2, mid, unused, unused);\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, mid.x * w, mid.y * h, c1.x * w, c1.y * h, c2.x * w, c2.y * h));\r\n    var startOfArrow = tempPointAt(mid.x, mid.y);\r\n    breakUpBezier(centerx, centery - radius,\r\n        centerx + cpOffset, centery - radius,\r\n        centerx + radius, centery - cpOffset,\r\n        centerx + radius, centery, .56, unused,\r\n        unused, mid, c1, c2);\r\n    var endOfArrow = tempPointAt(mid.x, mid.y);\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, (startOfArrow.x * .1 + .95 * .9) * w,\r\n        (startOfArrow.y * .1) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .85 * w, (startOfArrow.y * .1) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .85 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .15 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, (endOfArrow.x * .1 + .9) * w, .15 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, (endOfArrow.x * .1 + .9) * w,\r\n        (endOfArrow.y * .1 + .05 * .9) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, endOfArrow.x * w, endOfArrow.y * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, c1.x * w, c1.y * h, c2.x * w, c2.y * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery + radius) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h,\r\n        (centerx - radius) * w, (centery + cpOffset) * h));\r\n    // Inner circle\r\n    radius = .35;\r\n    cpOffset = KAPPA * .35;\r\n    var fig2 = new go.PathFigure(centerx * w, (centery - radius) * h, false);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery - radius) * h,\r\n        (centerx - radius) * w, (centery - cpOffset) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx - radius) * w, (centery + cpOffset) * h,\r\n        (centerx - cpOffset) * w, (centery + radius) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery + radius) * h,\r\n        (centerx + radius) * w, (centery + cpOffset) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx + radius) * w, (centery - cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery - radius) * h));\r\n    var fig3 = new go.PathFigure((centerx - radius) * w, centery * h, false);\r\n    geo.add(fig3);\r\n    freePoint(unused);\r\n    freePoint(mid);\r\n    freePoint(c1);\r\n    freePoint(c2);\r\n    freePoint(startOfArrow);\r\n    freePoint(endOfArrow);\r\n    geo.spot1 = new go.Spot(.202, .257);\r\n    geo.spot2 = new go.Spot(.792, .739);\r\n    geo.defaultStretch = go.GraphObject.Uniform;\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"GenderFemale\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    // Outer Circle\r\n    var r = .375; // radius\r\n    var cx = 0; // offset from Center x\r\n    var cy = -.125; // offset from Center y\r\n    var d = r * KAPPA;\r\n    let fig = new go.PathFigure((.525 + cx) * w, (.5 + r + cy) * h, false);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (1 - .5 + r + cx) * w, (.5 + cy) * h, (.5 + d + cx) * w, (.5 + r + cy) * h,\r\n        (.5 + r + cx) * w, (.5 + d + cy) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (.5 + cx) * w, (.5 - r + cy) * h, (1 - .5 + r + cx) * w, (.5 - d + cy) * h,\r\n        (.5 + d + cx) * w, (.5 - r + cy) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (.5 - r + cx) * w, (.5 + cy) * h, (.5 - d + cx) * w, (.5 - r + cy) * h,\r\n        (.5 - r + cx) * w, (.5 - d + cy) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (.475 + cx) * w, (.5 + r + cy) * h, (.5 - r + cx) * w, (.5 + d + cy) * h,\r\n        (.5 - d + cx) * w, (.5 + r + cy) * h));\r\n    // Legs\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .475 * w, .85 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .425 * w, .85 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .425 * w, .9 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .475 * w, .9 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .475 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .525 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .525 * w, .9 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .575 * w, .9 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .575 * w, .85 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .525 * w, .85 * h).close());\r\n    // Inner circle\r\n    r = .325; // radius\r\n    cx = 0; // offset from Center x\r\n    cy = -.125; // offset from Center y\r\n    d = r * KAPPA;\r\n    fig = new go.PathFigure((1 - .5 + r + cx) * w, (.5 + cy) * h, false);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (.5 + cx) * w, (.5 + r + cy) * h, (.5 + r + cx) * w, (.5 + d + cy) * h,\r\n        (.5 + d + cx) * w, (.5 + r + cy) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (.5 - r + cx) * w, (.5 + cy) * h, (.5 - d + cx) * w, (.5 + r + cy) * h,\r\n        (.5 - r + cx) * w, (.5 + d + cy) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (.5 + cx) * w, (.5 - r + cy) * h, (.5 - r + cx) * w, (.5 - d + cy) * h,\r\n        (.5 - d + cx) * w, (.5 - r + cy) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (1 - .5 + r + cx) * w, (.5 + cy) * h, (.5 + d + cx) * w, (.5 - r + cy) * h,\r\n        (1 - .5 + r + cx) * w, (.5 - d + cy) * h));\r\n    fig = new go.PathFigure((.525 + cx) * w, (.5 + r + cy) * h, false);\r\n    geo.add(fig);\r\n    geo.spot1 = new go.Spot(.232, .136);\r\n    geo.spot2 = new go.Spot(.682, .611);\r\n    geo.defaultStretch = go.GraphObject.Uniform;\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"LogicImplies\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN;\r\n    if (isNaN(param1)) param1 = .2; // Distance the arrow folds from the right\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure((1 - param1) * w, 0, false)\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, .5 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, (1 - param1) * w, h))\r\n            .add(new go.PathSegment(go.PathSegment.Move, 0, .5 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, .5 * h)))\r\n        .setSpots(0, 0, 0.8, 0.5);\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"LogicIff\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN;\r\n    if (isNaN(param1)) param1 = .2; // Distance the arrow folds from the right\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure((1 - param1) * w, 0, false)\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, .5 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, (1 - param1) * w, h))\r\n            .add(new go.PathSegment(go.PathSegment.Move, 0, .5 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, .5 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Move, param1 * w, 0))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0, .5 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, param1 * w, h)))\r\n        .setSpots(0.2, 0, 0.8, 0.5);\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"LogicNot\", function(shape, w, h) {\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(0, 0, false)\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, 0))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, h)));\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"LogicAnd\", function(shape, w, h) {\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(0, h, false)\r\n            .add(new go.PathSegment(go.PathSegment.Line, .5 * w, 0))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, h)))\r\n        .setSpots(0.25, 0.5, 0.75, 1);\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"LogicOr\", function(shape, w, h) {\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(0, 0, false)\r\n            .add(new go.PathSegment(go.PathSegment.Line, .5 * w, h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, 0)))\r\n        .setSpots(0.219, 0, 0.78, 0.409);\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"LogicXor\", function(shape, w, h) {\r\n    let geo = new go.Geometry()\r\n        .add(new go.PathFigure(.5 * w, 0, false)\r\n            .add(new go.PathSegment(go.PathSegment.Line, .5 * w, h))\r\n            .add(new go.PathSegment(go.PathSegment.Move, 0, .5 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, .5 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Arc, 0, 360, .5 * w, .5 * h, .5 * w, .5 * h)));\r\n    geo.defaultStretch = go.GraphObject.Uniform;\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"LogicTruth\", function(shape, w, h) {\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(0, 0, false)\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, 0))\r\n            .add(new go.PathSegment(go.PathSegment.Move, .5 * w, 0))\r\n            .add(new go.PathSegment(go.PathSegment.Line, .5 * w, h)));\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"LogicFalsity\", function(shape, w, h) {\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(0, h, false)\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, h))\r\n            .add(new go.PathSegment(go.PathSegment.Move, .5 * w, h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, .5 * w, 0)));\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"LogicThereExists\", function(shape, w, h) {\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(0, 0, false)\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, 0))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, .5 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0, .5 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Move, w, .5 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0, h)));\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"LogicForAll\", function(shape, w, h) {\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(0, 0, false)\r\n            .add(new go.PathSegment(go.PathSegment.Line, .5 * w, h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, 0))\r\n            .add(new go.PathSegment(go.PathSegment.Move, .25 * w, .5 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, .75 * w, .5 * h)))\r\n        .setSpots(0.25, 0, 0.75, 0.5);\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"LogicIsDefinedAs\", function(shape, w, h) {\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(0, 0, false)\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, 0))\r\n            .add(new go.PathSegment(go.PathSegment.Move, 0, .5 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, .5 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Move, 0, h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, h)))\r\n        .setSpots(0.01, 0.01, 0.99, 0.49);\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"LogicIntersect\", function(shape, w, h) {\r\n    var radius = 0.5;\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(0, h, false)\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0, radius * h))\r\n            .add(new go.PathSegment(go.PathSegment.Arc, 180, 180, radius * w, radius * h, radius * w, radius * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, h)))\r\n        .setSpots(0, 0.5, 1, 1);\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"LogicUnion\", function(shape, w, h) {\r\n    var radius = 0.5;\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(w, 0, false)\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, radius * h))\r\n            .add(new go.PathSegment(go.PathSegment.Arc, 0, 180, radius * w, radius * h, radius * w, radius * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0, 0)))\r\n        .setSpots(0, 0, 1, 0.5);\r\n});\r\n\r\ngo.Shape.setFigureParameter(\"Arrow\", 0, new FigureParameter(\"ArrowheadWidth\", .3, .01, .99));\r\ngo.Shape.setFigureParameter(\"Arrow\", 1, new FigureParameter(\"TailHeight\", .3, .01, .99));\r\ngo.Shape.defineFigureGenerator(\"Arrow\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN; // % width of arrowhead\r\n    if (isNaN(param1)) param1 = .3;\r\n    var param2 = shape ? shape.parameter2 : NaN; // % height of tail\r\n    if (isNaN(param2)) param2 = .3;\r\n\r\n    var x = (1 - param1) * w;\r\n    var y1 = (.5 - param2 / 2) * h;\r\n    var y2 = (.5 + param2 / 2) * h;\r\n\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, y1, true);\r\n    geo.add(fig);\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, x, y1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, x, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, x, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, x, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, x, y2));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, y2).close());\r\n    geo.spot1 = new go.Spot(0, y1 / h);\r\n    var temp = getIntersection(0, y2 / h,\r\n        1, y2 / h,\r\n        x / w, 1,\r\n        1, .5,\r\n        tempPoint());\r\n    geo.spot2 = new go.Spot(temp.x, temp.y);\r\n    freePoint(temp);\r\n    return geo;\r\n});\r\n\r\n// Arrow with absolutes instead of scaling\r\ngo.Shape.setFigureParameter(\"Arrow2\", 0, new FigureParameter(\"ArrowheadWidth\", 30));\r\ngo.Shape.setFigureParameter(\"Arrow2\", 0, new FigureParameter(\"TailHeight\", 30));\r\ngo.Shape.defineFigureGenerator(\"Arrow2\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN; // width of arrowhead\r\n    if (isNaN(param1)) param1 = 30;\r\n    if (param1 > w) param1 = w;\r\n    var param2 = shape ? shape.parameter2 : NaN; // height of tail\r\n    if (isNaN(param2)) param2 = 30;\r\n    param2 = Math.min(param2, h / 2);\r\n\r\n    var x = w - param1;\r\n    var y1 = (h - param2) / 2;\r\n    var y2 = y1 + param2;\r\n\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, y1, true);\r\n    geo.add(fig);\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, x, y1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, x, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, x, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, x, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, x, y2));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, y2).close());\r\n    geo.spot1 = new go.Spot(0, y1 / h);\r\n    var temp = getIntersection(0, y2 / h,\r\n        1, y2 / h,\r\n        x / w, 1,\r\n        1, .5,\r\n        tempPoint());\r\n    geo.spot2 = new go.Spot(temp.x, temp.y);\r\n    freePoint(temp);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Chevron\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .5 * h).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"DoubleArrow\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, 0.214 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 1.0 * w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, 1.0 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, 0.786 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 1.0 * h).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.setFigureParameter(\"DoubleEndArrow\", 0, new FigureParameter(\"ConnecterHeight\", .3, .01, .99));\r\ngo.Shape.defineFigureGenerator(\"DoubleEndArrow\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN; // height of midsection\r\n    if (isNaN(param1)) param1 = .3;\r\n\r\n    var y1 = (.5 - param1 / 2) * h;\r\n    var y2 = (.5 + param1 / 2) * h;\r\n\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w, .5 * h, true);\r\n    geo.add(fig);\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y2));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, y2));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, y1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, 0).close());\r\n    var temp = getIntersection(0, .5,\r\n        .3, 0,\r\n        0, y1 / h,\r\n        .1, y1 / h,\r\n        tempPoint());\r\n    geo.spot1 = new go.Spot(temp.x, temp.y);\r\n    temp = getIntersection(.7, 1,\r\n        1, .5,\r\n        0, y2 / h,\r\n        1, y2 / h,\r\n        temp);\r\n    geo.spot2 = new go.Spot(temp.x, temp.y);\r\n    freePoint(temp);\r\n    return geo;\r\n});\r\n\r\n// DoubleEndArrow with absolutes instead of scaling\r\ngo.Shape.setFigureParameter(\"DoubleEndArrow2\", 0, new FigureParameter(\"ConnecterHeight\", 40));\r\ngo.Shape.setFigureParameter(\"DoubleEndArrow2\", 1, new FigureParameter(\"ArrowHeight\", 100));\r\ngo.Shape.defineFigureGenerator(\"DoubleEndArrow2\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN; // height of midsection\r\n    if (isNaN(param1)) param1 = 40;\r\n    var param2 = shape ? shape.parameter2 : NaN; // height of arrows\r\n    if (isNaN(param2)) param2 = 100;\r\n\r\n    /*\r\n      y1outer\r\n        /|     |\\\r\n       / |     | \\\r\n      /  y1----   \\\r\n     /             \\\r\n     \\             /\r\n      \\  y2----   /\r\n       \\ |     | /\r\n        \\|     |/\r\n      y2outer\r\n    */\r\n    var y1 = (h - param1) / 2;\r\n    var y2 = y1 + param1;\r\n    var y1outer = (h - param2) / 2;\r\n    var y2outer = y1outer + param2;\r\n    if (param1 > h || param2 > h) {\r\n        if (param2 > param1) {\r\n            param1 = param1 * h / param2; // use similar ratio\r\n            y1 = (h - param1) / 2;\r\n            y2 = y1 + param1;\r\n            y1outer = 0;\r\n            y2outer = h;\r\n        } else {\r\n            y1 = 0;\r\n            y2 = h;\r\n            y1outer = 0;\r\n            y2outer = h;\r\n        }\r\n    }\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w, .5 * h, true);\r\n    geo.add(fig);\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y2outer));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y2));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, y2));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, y2outer));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, y1outer));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, y1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y1outer).close());\r\n    var temp = getIntersection(0, .5,\r\n        .3, y1outer / h,\r\n        0, y1 / h,\r\n        1, y1 / h,\r\n        tempPoint());\r\n    geo.spot1 = new go.Spot(temp.x, temp.y);\r\n    temp = getIntersection(.7, y2outer / h,\r\n        1, .5,\r\n        0, y2 / h,\r\n        1, y2 / h,\r\n        temp);\r\n    geo.spot2 = new go.Spot(temp.x, temp.y);\r\n    freePoint(temp);\r\n\r\n    return geo;\r\n});\r\n\r\ngo.Shape.setFigureParameter(\"IBeamArrow\", 0, new FigureParameter(\"ConnectorHeight\", .7, .51, .97));\r\ngo.Shape.defineFigureGenerator(\"IBeamArrow\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN; // height of midsection\r\n    if (isNaN(param1)) param1 = .3;\r\n\r\n    var y1 = (.5 - param1 / 2) * h;\r\n    var y2 = (.5 + param1 / 2) * h;\r\n\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w, .5 * h, true);\r\n    geo.add(fig);\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y2));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, y2));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, y1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, 0).close());\r\n    geo.spot1 = new go.Spot(0, y1 / h);\r\n    var temp = getIntersection(.7, 1,\r\n        1, .5,\r\n        0, y2 / h,\r\n        1, y2 / h,\r\n        tempPoint());\r\n    geo.spot2 = new go.Spot(temp.x, temp.y);\r\n    freePoint(temp);\r\n    return geo;\r\n});\r\n\r\n// IBeamArrow with absolutes instead of scaling\r\ngo.Shape.setFigureParameter(\"IBeamArrow2\", 0, new FigureParameter(\"ConnectorHeight\", 40));\r\ngo.Shape.setFigureParameter(\"IBeamArrow2\", 1, new FigureParameter(\"BeamArrowHeight\", 100));\r\ngo.Shape.defineFigureGenerator(\"IBeamArrow2\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN; // height of midsection\r\n    if (isNaN(param1)) param1 = 40;\r\n    var param2 = shape ? shape.parameter2 : NaN; // height of beam and arrow\r\n    if (isNaN(param2)) param2 = 100;\r\n\r\n    var y1 = (h - param1) / 2;\r\n    var y2 = y1 + param1;\r\n    var y1outer = (h - param2) / 2;\r\n    var y2outer = y1outer + param2;\r\n    if (param1 > h || param2 > h) {\r\n        if (param2 > param1) {\r\n            param1 = param1 * h / param2; // use similar ratio\r\n            y1 = (h - param1) / 2;\r\n            y2 = y1 + param1;\r\n            y1outer = 0;\r\n            y2outer = h;\r\n        } else {\r\n            y1 = 0;\r\n            y2 = h;\r\n            y1outer = 0;\r\n            y2outer = h;\r\n        }\r\n    }\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w, .5 * h, true);\r\n    geo.add(fig);\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y2outer));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y2));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, y2));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, y2outer));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, y2outer));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, y1outer));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, y1outer));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, y1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y1outer).close());\r\n    geo.spot1 = new go.Spot(0, y1 / h);\r\n    var temp = getIntersection(.7, y2outer / h,\r\n        1, .5,\r\n        0, y2 / h,\r\n        1, y2 / h,\r\n        tempPoint());\r\n    geo.spot2 = new go.Spot(temp.x, temp.y);\r\n    freePoint(temp);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.setFigureParameter(\"Pointer\", 0, new FigureParameter(\"BackPoint\", .1, 0, .2));\r\ngo.Shape.defineFigureGenerator(\"Pointer\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN; // how much the back of the pointer comes in\r\n    if (isNaN(param1)) param1 = .1;\r\n\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w, .5 * h, true);\r\n    geo.add(fig);\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, param1 * w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0).close());\r\n    geo.spot1 = new go.Spot(param1, .35);\r\n    var temp = getIntersection(.2, .65, 1, .65, 0, 1, 1, .5, tempPoint()); // ?? constant\r\n    geo.spot2 = new go.Spot(temp.x, temp.y);\r\n    freePoint(temp);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.setFigureParameter(\"RoundedPointer\", 0, new FigureParameter(\"RoundedEdge\", .3, 0, .5));\r\ngo.Shape.defineFigureGenerator(\"RoundedPointer\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN; // how much the curved back of the pointer comes in\r\n    if (isNaN(param1)) param1 = .3;\r\n\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w, .5 * h, true);\r\n    geo.add(fig);\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, 0, param1 * w, .75 * h,\r\n        param1 * w, .25 * h).close());\r\n    geo.spot1 = new go.Spot(param1, .35);\r\n    var temp = getIntersection(0, .65, 1, .65, 0, 1, 1, .5, tempPoint()); // ?? constant\r\n    geo.spot2 = new go.Spot(temp.x, temp.y);\r\n    freePoint(temp);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.setFigureParameter(\"SplitEndArrow\", 0, new FigureParameter(\"TailHeight\", 0.4, 0.01, .99));\r\ngo.Shape.defineFigureGenerator(\"SplitEndArrow\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN; // % height of arrow tail\r\n    if (isNaN(param1)) param1 = .4;\r\n\r\n    var y1 = (.5 - param1 / 2) * h;\r\n    var y2 = (.5 + param1 / 2) * h;\r\n\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w, .5 * h, true);\r\n    geo.add(fig);\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y2));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, y2));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, y1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, 0).close());\r\n    geo.spot1 = new go.Spot(.2, .3);\r\n    var temp = getIntersection(.7, 1,\r\n        1, .5,\r\n        0, y2 / h,\r\n        1, y2 / h,\r\n        tempPoint());\r\n    geo.spot2 = new go.Spot(temp.x, temp.y);\r\n    freePoint(temp);\r\n    return geo;\r\n});\r\n\r\n// SplitEndArrow with absolutes instead of scaling\r\ngo.Shape.setFigureParameter(\"SplitEndArrow2\", 0, new FigureParameter(\"TailThickness\", 50));\r\ngo.Shape.defineFigureGenerator(\"SplitEndArrow2\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN; // height of arrow tail\r\n    if (isNaN(param1)) param1 = 50;\r\n\r\n    var y1 = (h - param1) / 2;\r\n    var y2 = y1 + param1;\r\n    if (param1 > h) {\r\n        y1 = 0;\r\n        y2 = h;\r\n    }\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w, .5 * h, true);\r\n    geo.add(fig);\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y2));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, y2));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, y1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, y1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, 0).close());\r\n    geo.spot1 = new go.Spot(.2, y1 / h);\r\n    var temp = getIntersection(.7, 1,\r\n        1, .5,\r\n        0, y2 / h,\r\n        1, y2 / h,\r\n        tempPoint());\r\n    geo.spot2 = new go.Spot(temp.x, temp.y);\r\n    freePoint(temp);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.setFigureParameter(\"SquareArrow\", 0, new FigureParameter(\"ArrowPoint\", .7, .2, .9));\r\ngo.Shape.defineFigureGenerator(\"SquareArrow\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN; // pointiness of arrow, lower is more pointy\r\n    if (isNaN(param1)) param1 = .7;\r\n\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w, .5 * h, true);\r\n    geo.add(fig);\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, param1 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, param1 * w, 0).close());\r\n    geo.spot1 = go.Spot.TopLeft;\r\n    geo.spot2 = new go.Spot(param1, 1);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Cone1\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var cpxOffset = KAPPA * .5;\r\n    var cpyOffset = KAPPA * .1;\r\n    var fig = new go.PathFigure(0, .9 * h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .9 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, h, w, (.9 + cpyOffset) * h,\r\n        (.5 + cpxOffset) * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, .9 * h, (.5 - cpxOffset) * w, h,\r\n        0, (.9 + cpyOffset) * h).close());\r\n    geo.spot1 = new go.Spot(.25, .5);\r\n    geo.spot2 = new go.Spot(.75, .97);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Cone2\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, .9 * h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, w, .9 * h, (1 - .85 / .9) * w, h,\r\n        (.85 / .9) * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, .9 * h).close());\r\n    var fig2 = new go.PathFigure(0, .9 * h, false);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, w, .9 * h, (1 - .85 / .9) * w, .8 * h,\r\n        (.85 / .9) * w, .8 * h));\r\n    geo.spot1 = new go.Spot(.25, .5);\r\n    geo.spot2 = new go.Spot(.75, .82);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Cube1\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(.5 * w, h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .85 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .15 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, .15 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, .85 * h).close());\r\n    var fig2 = new go.PathFigure(.5 * w, h, false);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .3 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0, .15 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, .5 * w, .3 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w, .15 * h));\r\n    geo.spot1 = new go.Spot(0, .3);\r\n    geo.spot2 = new go.Spot(.5, .85);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Cube2\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, .3 * h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .7 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, 0).close());\r\n    var fig2 = new go.PathFigure(0, .3 * h, false);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .7 * w, .3 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, .7 * w, .3 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .7 * w, h));\r\n    geo.spot1 = new go.Spot(0, .3);\r\n    geo.spot2 = new go.Spot(.7, 1);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Cylinder1\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN; // half the height of the ellipse\r\n    if (isNaN(param1)) param1 = 5; // default value\r\n    param1 = Math.min(param1, h / 3);\r\n\r\n    let geo = new go.Geometry();\r\n    var cpxOffset = KAPPA * .5;\r\n    var fig = new go.PathFigure(0, param1, true);\r\n    geo.add(fig);\r\n    // The base (top)\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, 0, 0, KAPPA * param1,\r\n        (.5 - cpxOffset) * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 1.0 * w, param1, (.5 + cpxOffset) * w, 0,\r\n        1.0 * w, KAPPA * param1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h - param1));\r\n    // Bottom curve\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, 1.0 * h, 1.0 * w, h - KAPPA * param1,\r\n        (.5 + cpxOffset) * w, 1.0 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, h - param1, (.5 - cpxOffset) * w, 1.0 * h,\r\n        0, h - KAPPA * param1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, param1));\r\n\r\n    var fig2 = new go.PathFigure(w, param1, false);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, 2 * param1, 1.0 * w, 2 * param1 - KAPPA * param1,\r\n        (.5 + cpxOffset) * w, 2 * param1));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, 0, param1, (.5 - cpxOffset) * w, 2 * param1,\r\n        0, 2 * param1 - KAPPA * param1));\r\n\r\n    geo.spot1 = new go.Spot(0, 0, 0, 2 * param1);\r\n    geo.spot2 = new go.Spot(1, 1);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Cylinder2\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN; // half the height of the ellipse\r\n    if (isNaN(param1)) param1 = 5; // default value\r\n    param1 = Math.min(param1, h / 3);\r\n\r\n    let geo = new go.Geometry();\r\n    var cpxOffset = KAPPA * .5;\r\n    var fig = new go.PathFigure(0, h - param1, true);\r\n    geo.add(fig);\r\n    // The body, starting and ending bottom left\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, param1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, 0, 0, KAPPA * param1,\r\n        (.5 - cpxOffset) * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, w, param1, (.5 + cpxOffset) * w, 0,\r\n        w, KAPPA * param1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h - param1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, h, w, h - KAPPA * param1,\r\n        (.5 + cpxOffset) * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, h - param1, (.5 - cpxOffset) * w, h,\r\n        0, h - KAPPA * param1));\r\n\r\n    var fig2 = new go.PathFigure(0, h - param1, false);\r\n    geo.add(fig2);\r\n    // The base (bottom)\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, h - 2 * param1, 0, h - param1 - KAPPA * param1,\r\n        (.5 - cpxOffset) * w, h - 2 * param1));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, w, h - param1, (.5 + cpxOffset) * w, h - 2 * param1,\r\n        w, h - param1 - KAPPA * param1));\r\n\r\n    geo.spot1 = new go.Spot(0, 0);\r\n    geo.spot2 = new go.Spot(1, 1, 0, -2 * param1);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Cylinder3\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN; // half the width of the ellipse\r\n    if (isNaN(param1)) param1 = 5; // default value\r\n    param1 = Math.min(param1, w / 3);\r\n\r\n    let geo = new go.Geometry();\r\n    var cpyOffset = KAPPA * .5;\r\n    var fig = new go.PathFigure(param1, 0, true);\r\n    geo.add(fig);\r\n    // The body, starting and ending top left\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w - param1, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, w, .5 * h, w - KAPPA * param1, 0,\r\n        w, (.5 - cpyOffset) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, w - param1, h, w, (.5 + cpyOffset) * h,\r\n        w - KAPPA * param1, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, param1, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, .5 * h, KAPPA * param1, h,\r\n        0, (.5 + cpyOffset) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, param1, 0, 0, (.5 - cpyOffset) * h,\r\n        KAPPA * param1, 0));\r\n\r\n    var fig2 = new go.PathFigure(param1, 0, false);\r\n    geo.add(fig2);\r\n    // Cylinder line (left)\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, 2 * param1, .5 * h, param1 + KAPPA * param1, 0,\r\n        2 * param1, (.5 - cpyOffset) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, param1, h, 2 * param1, (.5 + cpyOffset) * h,\r\n        param1 + KAPPA * param1, h));\r\n\r\n    geo.spot1 = new go.Spot(0, 0, 2 * param1, 0);\r\n    geo.spot2 = new go.Spot(1, 1);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Cylinder4\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN; // half the width of the ellipse\r\n    if (isNaN(param1)) param1 = 5; // default value\r\n    param1 = Math.min(param1, w / 3);\r\n\r\n    let geo = new go.Geometry();\r\n    var cpyOffset = KAPPA * .5;\r\n    var fig = new go.PathFigure(w - param1, 0, true);\r\n    geo.add(fig);\r\n    // The body, starting and ending top right\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, w, .5 * h, w - KAPPA * param1, 0,\r\n        w, (.5 - cpyOffset) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, w - param1, h, w, (.5 + cpyOffset) * h,\r\n        w - KAPPA * param1, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, param1, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, .5 * h, KAPPA * param1, h,\r\n        0, (.5 + cpyOffset) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, param1, 0, 0, (.5 - cpyOffset) * h,\r\n        KAPPA * param1, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w - param1, 0));\r\n\r\n    var fig2 = new go.PathFigure(w - param1, 0, false);\r\n    geo.add(fig2);\r\n    // Cylinder line (right)\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, w - 2 * param1, .5 * h, w - param1 - KAPPA * param1, 0,\r\n        w - 2 * param1, (.5 - cpyOffset) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, w - param1, h, w - 2 * param1, (.5 + cpyOffset) * h,\r\n        w - param1 - KAPPA * param1, h));\r\n\r\n    geo.spot1 = new go.Spot(0, 0);\r\n    geo.spot2 = new go.Spot(1, 1, -2 * param1, 0);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Prism1\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(.25 * w, .25 * h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\r\n    var fig2 = new go.PathFigure(.25 * w, .25 * h, false);\r\n    geo.add(fig2);\r\n    // Inner prism line\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .5 * w, h));\r\n    geo.spot1 = new go.Spot(.408, .172);\r\n    geo.spot2 = new go.Spot(.833, .662);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Prism2\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, .25 * h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, .75 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\r\n    var fig2 = new go.PathFigure(0, h, false);\r\n    geo.add(fig2);\r\n    // Inner prism lines\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .25 * w, .5 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, 0, .25 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .25 * w, .5 * h));\r\n    geo.spot1 = new go.Spot(.25, .5);\r\n    geo.spot2 = new go.Spot(.75, .75);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Pyramid1\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(.5 * w, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .75 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, .75 * h).close());\r\n    var fig2 = new go.PathFigure(.5 * w, 0, false);\r\n    geo.add(fig2);\r\n    // Inner pyramind line\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .5 * w, h));\r\n    geo.spot1 = new go.Spot(.25, .367);\r\n    geo.spot2 = new go.Spot(.75, .875);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Pyramid2\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(.5 * w, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .85 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, .85 * h).close());\r\n    var fig2 = new go.PathFigure(.5 * w, 0, false);\r\n    geo.add(fig2);\r\n    // Inner pyramid lines\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .7 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0, .85 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, .5 * w, .7 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w, .85 * h));\r\n    geo.spot1 = new go.Spot(.25, .367);\r\n    geo.spot2 = new go.Spot(.75, .875);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Actor\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var radiusw = .2;\r\n    var radiush = .1;\r\n    var offsetw = KAPPA * radiusw;\r\n    var offseth = KAPPA * radiush;\r\n    var centerx = .5;\r\n    var centery = .1;\r\n    var fig = new go.PathFigure(centerx * w, (centery + radiush) * h, true);\r\n    geo.add(fig);\r\n\r\n    // Head\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radiusw) * w, centery * h, (centerx - offsetw) * w, (centery + radiush) * h,\r\n        (centerx - radiusw) * w, (centery + offseth) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radiush) * h, (centerx - radiusw) * w, (centery - offseth) * h,\r\n        (centerx - offsetw) * w, (centery - radiush) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radiusw) * w, centery * h, (centerx + offsetw) * w, (centery - radiush) * h,\r\n        (centerx + radiusw) * w, (centery - offseth) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radiush) * h, (centerx + radiusw) * w, (centery + offseth) * h,\r\n        (centerx + offsetw) * w, (centery + radiush) * h));\r\n    var r = .05;\r\n    var cpOffset = KAPPA * r;\r\n    centerx = .05;\r\n    centery = .25;\r\n    var fig2 = new go.PathFigure(.5 * w, .2 * h, true);\r\n    geo.add(fig2);\r\n    // Body\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .95 * w, .2 * h));\r\n    centerx = .95;\r\n    centery = .25;\r\n    // Right arm\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + r) * w, centery * h, (centerx + cpOffset) * w, (centery - r) * h,\r\n        (centerx + r) * w, (centery - cpOffset) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w, .6 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .85 * w, .6 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .85 * w, .35 * h));\r\n    r = .025;\r\n    cpOffset = KAPPA * r;\r\n    centerx = .825;\r\n    centery = .35;\r\n    // Right under arm\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - r) * h, (centerx + r) * w, (centery - cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery - r) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - r) * w, centery * h, (centerx - cpOffset) * w, (centery - r) * h,\r\n        (centerx - r) * w, (centery - cpOffset) * h));\r\n    // Right side/leg\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .8 * w, h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .55 * w, h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .55 * w, .7 * h));\r\n    // Right in between\r\n    r = .05;\r\n    cpOffset = KAPPA * r;\r\n    centerx = .5;\r\n    centery = .7;\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - r) * h, (centerx + r) * w, (centery - cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery - r) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - r) * w, centery * h, (centerx - cpOffset) * w, (centery - r) * h,\r\n        (centerx - r) * w, (centery - cpOffset) * h));\r\n    // Left side/leg\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .45 * w, h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .2 * w, h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .2 * w, .35 * h));\r\n    r = .025;\r\n    cpOffset = KAPPA * r;\r\n    centerx = .175;\r\n    centery = .35;\r\n    // Left under arm\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - r) * h, (centerx + r) * w, (centery - cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery - r) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - r) * w, centery * h, (centerx - cpOffset) * w, (centery - r) * h,\r\n        (centerx - r) * w, (centery - cpOffset) * h));\r\n    // Left arm\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .15 * w, .6 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0, .6 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0, .25 * h));\r\n    r = .05;\r\n    cpOffset = KAPPA * r;\r\n    centerx = .05;\r\n    centery = .25;\r\n    // Left shoulder\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - r) * h, (centerx - r) * w, (centery - cpOffset) * h,\r\n        (centerx - cpOffset) * w, (centery - r) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .2 * h));\r\n    geo.spot1 = new go.Spot(.2, .2);\r\n    geo.spot2 = new go.Spot(.8, .65);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.setFigureParameter(\"Card\", 0, new FigureParameter(\"CornerCutoutSize\", .2, .1, .9));\r\ngo.Shape.defineFigureGenerator(\"Card\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN; // size of corner cutout\r\n    if (isNaN(param1)) param1 = .2;\r\n\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w, 0, true);\r\n    geo.add(fig);\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, param1 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, param1 * w, 0).close());\r\n    geo.spot1 = new go.Spot(0, param1);\r\n    geo.spot2 = go.Spot.BottomRight;\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Collate\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(.5 * w, .5 * h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .5 * h));\r\n    var fig2 = new go.PathFigure(.5 * w, .5 * h, true);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .5 * h));\r\n    geo.spot1 = new go.Spot(.25, 0);\r\n    geo.spot2 = new go.Spot(.75, .25);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"CreateRequest\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var param1 = shape ? shape.parameter1 : NaN;\r\n    if (isNaN(param1)) param1 = .1;\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n\r\n    // Body\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\r\n    var fig2 = new go.PathFigure(0, param1 * h, false);\r\n    geo.add(fig2);\r\n    // Inside lines\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w, param1 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, 0, (1 - param1) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w, (1 - param1) * h));\r\n    //??? geo.spot1 = new go.Spot(0, param1);\r\n    //??? geo.spot2 = new go.Spot(1, 1 - param1);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Database\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var cpxOffset = KAPPA * .5;\r\n    var cpyOffset = KAPPA * .1;\r\n    var fig = new go.PathFigure(w, .1 * h, true);\r\n    geo.add(fig);\r\n\r\n    // Body\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .9 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, h, w, (.9 + cpyOffset) * h,\r\n        (.5 + cpxOffset) * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, .9 * h, (.5 - cpxOffset) * w, h,\r\n        0, (.9 + cpyOffset) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, .1 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, 0, 0, (.1 - cpyOffset) * h,\r\n        (.5 - cpxOffset) * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, w, .1 * h, (.5 + cpxOffset) * w, 0,\r\n        w, (.1 - cpyOffset) * h));\r\n    var fig2 = new go.PathFigure(w, .1 * h, false);\r\n    geo.add(fig2);\r\n    // Rings\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, .2 * h, w, (.1 + cpyOffset) * h,\r\n        (.5 + cpxOffset) * w, .2 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, 0, .1 * h, (.5 - cpxOffset) * w, .2 * h,\r\n        0, (.1 + cpyOffset) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, w, .2 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, .3 * h, w, (.2 + cpyOffset) * h,\r\n        (.5 + cpxOffset) * w, .3 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, 0, .2 * h, (.5 - cpxOffset) * w, .3 * h,\r\n        0, (.2 + cpyOffset) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, w, .3 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, .4 * h, w, (.3 + cpyOffset) * h,\r\n        (.5 + cpxOffset) * w, .4 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, 0, .3 * h, (.5 - cpxOffset) * w, .4 * h,\r\n        0, (.3 + cpyOffset) * h));\r\n    geo.spot1 = new go.Spot(0, .4);\r\n    geo.spot2 = new go.Spot(1, .9);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"DataStorage\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .75 * w, h, w, 0, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, 0, .25 * w, .9 * h, .25 * w, .1 * h).close());\r\n    geo.spot1 = new go.Spot(.226, 0);\r\n    geo.spot2 = new go.Spot(.81, 1);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"DiskStorage\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var cpxOffset = KAPPA * .5;\r\n    var cpyOffset = KAPPA * .1;\r\n    var fig = new go.PathFigure(w, .1 * h, true);\r\n    geo.add(fig);\r\n\r\n    // Body\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .9 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, h, w, (.9 + cpyOffset) * h,\r\n        (.5 + cpxOffset) * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, .9 * h, (.5 - cpxOffset) * w, h,\r\n        0, (.9 + cpyOffset) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, .1 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, 0, 0, (.1 - cpyOffset) * h,\r\n        (.5 - cpxOffset) * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, w, .1 * h, (.5 + cpxOffset) * w, 0,\r\n        w, (.1 - cpyOffset) * h));\r\n    var fig2 = new go.PathFigure(w, .1 * h, false);\r\n    geo.add(fig2);\r\n    // Rings\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, .2 * h, w, (.1 + cpyOffset) * h,\r\n        (.5 + cpxOffset) * w, .2 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, 0, .1 * h, (.5 - cpxOffset) * w, .2 * h,\r\n        0, (.1 + cpyOffset) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, w, .2 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, .3 * h, w, (.2 + cpyOffset) * h,\r\n        (.5 + cpxOffset) * w, .3 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, 0, .2 * h, (.5 - cpxOffset) * w, .3 * h,\r\n        0, (.2 + cpyOffset) * h));\r\n    geo.spot1 = new go.Spot(0, .3);\r\n    geo.spot2 = new go.Spot(1, .9);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Display\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(.25 * w, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .75 * w, h, w, 0, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .25 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, .5 * h).close());\r\n    geo.spot1 = new go.Spot(.25, 0);\r\n    geo.spot2 = new go.Spot(.75, 1);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"DividedEvent\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var param1 = shape ? shape.parameter1 : NaN;\r\n    if (isNaN(param1)) param1 = .2;\r\n    else if (param1 < .15) param1 = .15; // Minimum\r\n    var cpOffset = KAPPA * .2;\r\n    var fig = new go.PathFigure(0, .2 * h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .2 * w, 0, 0, (.2 - cpOffset) * h,\r\n        (.2 - cpOffset) * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .8 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, w, .2 * h, (.8 + cpOffset) * w, 0,\r\n        w, (.2 - cpOffset) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .8 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .8 * w, h, w, (.8 + cpOffset) * h,\r\n        (.8 + cpOffset) * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, .8 * h, (.2 - cpOffset) * w, h,\r\n        0, (.8 + cpOffset) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, .2 * h));\r\n    var fig2 = new go.PathFigure(0, param1 * h, false);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w, param1 * h));\r\n    //??? geo.spot1 = new go.Spot(0, param1);\r\n    //??? geo.spot2 = new go.Spot(1, 1 - param1);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"DividedProcess\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var param1 = shape ? shape.parameter1 : NaN;\r\n    if (isNaN(param1) || param1 < .1) param1 = .1; // Minimum\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\r\n    var fig2 = new go.PathFigure(0, param1 * h, false);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w, param1 * h));\r\n    //??? geo.spot1 = new go.Spot(0, param1);\r\n    //??? geo.spot2 = go.Spot.BottomRight;\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Document\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    h = h / .8;\r\n    var fig = new go.PathFigure(0, .7 * h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .7 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, .7 * h, .5 * w, .4 * h, .5 * w, h).close());\r\n    geo.spot1 = go.Spot.TopLeft;\r\n    geo.spot2 = new go.Spot(1, .6);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"ExternalOrganization\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var param1 = shape ? shape.parameter1 : NaN;\r\n    if (isNaN(param1) || param1 < .2) param1 = .2; // Minimum\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n\r\n    // Body\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\r\n    var fig2 = new go.PathFigure(param1 * w, 0, false);\r\n    geo.add(fig2);\r\n    // Top left triangle\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0, param1 * h));\r\n    // Top right triangle\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, w, param1 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, (1 - param1) * w, 0));\r\n    // Bottom left triangle\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, 0, (1 - param1) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, param1 * w, h));\r\n    // Bottom right triangle\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, (1 - param1) * w, h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w, (1 - param1) * h));\r\n    //??? geo.spot1 = new go.Spot(param1 / 2, param1 / 2);\r\n    //??? geo.spot2 = new go.Spot(1 - param1 / 2, 1 - param1 / 2);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"ExternalProcess\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(.5 * w, 0, true);\r\n    geo.add(fig);\r\n\r\n    // Body\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, .5 * h).close());\r\n    var fig2 = new go.PathFigure(.1 * w, .4 * h, false);\r\n    geo.add(fig2);\r\n    // Top left triangle\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .1 * w, .6 * h));\r\n    // Top right triangle\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, .9 * w, .6 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .9 * w, .4 * h));\r\n    // Bottom left triangle\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, .6 * w, .1 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .4 * w, .1 * h));\r\n    // Bottom right triangle\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, .4 * w, .9 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .6 * w, .9 * h));\r\n    geo.spot1 = new go.Spot(.25, .25);\r\n    geo.spot2 = new go.Spot(.75, .75);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"File\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0, true); // starting point\r\n    geo.add(fig);\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\r\n    var fig2 = new go.PathFigure(.75 * w, 0, false);\r\n    geo.add(fig2);\r\n    // The Fold\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .75 * w, .25 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));\r\n    geo.spot1 = new go.Spot(0, .25);\r\n    geo.spot2 = go.Spot.BottomRight;\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Interrupt\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w, .5 * h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\r\n    var fig2 = new go.PathFigure(w, .5 * h, false);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    var fig3 = new go.PathFigure(w, .5 * h, false);\r\n    geo.add(fig3);\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    geo.spot1 = new go.Spot(0, .25);\r\n    geo.spot2 = new go.Spot(.5, .75);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"InternalStorage\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var param1 = shape ? shape.parameter1 : NaN;\r\n    var param2 = shape ? shape.parameter2 : NaN;\r\n    if (isNaN(param1)) param1 = .1; // Distance from left\r\n    if (isNaN(param2)) param2 = .1; // Distance from top\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n\r\n    // The main body\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\r\n    var fig2 = new go.PathFigure(param1 * w, 0, false);\r\n    geo.add(fig2);\r\n    // Two lines\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, param1 * w, h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, 0, param2 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w, param2 * h));\r\n    //??? geo.spot1 = new go.Spot(param1, param2);\r\n    //??? geo.spot2 = go.Spot.BottomRight;\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Junction\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var dist = (1 / Math.SQRT2);\r\n    var small = ((1 - 1 / Math.SQRT2) / 2);\r\n    var cpOffset = KAPPA * .5;\r\n    var radius = .5;\r\n    var fig = new go.PathFigure(w, radius * h, true);\r\n    geo.add(fig);\r\n\r\n    // Circle\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, radius * w, h, w, (radius + cpOffset) * h,\r\n        (radius + cpOffset) * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, radius * h, (radius - cpOffset) * w, h,\r\n        0, (radius + cpOffset) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, radius * w, 0, 0, (radius - cpOffset) * h,\r\n        (radius - cpOffset) * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, w, radius * h, (radius + cpOffset) * w, 0,\r\n        w, (radius - cpOffset) * h));\r\n    var fig2 = new go.PathFigure((small + dist) * w, (small + dist) * h, false);\r\n    geo.add(fig2);\r\n    // X\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, small * w, small * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, small * w, (small + dist) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, (small + dist) * w, small * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"LinedDocument\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    h = h / .8;\r\n    var fig = new go.PathFigure(0, .7 * h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .7 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, .7 * h, .5 * w, .4 * h, .5 * w, h).close());\r\n    var fig2 = new go.PathFigure(.1 * w, 0, false);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .1 * w, .75 * h));\r\n    geo.spot1 = new go.Spot(.1, 0);\r\n    geo.spot2 = new go.Spot(1, .6);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"LoopLimit\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, .25 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .25 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h).close());\r\n    geo.spot1 = new go.Spot(0, .25);\r\n    geo.spot2 = go.Spot.BottomRight;\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"MagneticTape\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var cpOffset = KAPPA * .5;\r\n    var radius = .5;\r\n    var fig = new go.PathFigure(.5 * w, h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, radius * h, (radius - cpOffset) * w, h,\r\n        0, (radius + cpOffset) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, radius * w, 0, 0, (radius - cpOffset) * h,\r\n        (radius - cpOffset) * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, w, radius * h, (radius + cpOffset) * w, 0,\r\n        w, (radius - cpOffset) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (radius + .1) * w, .9 * h, w, (radius + cpOffset) * h,\r\n        (radius + cpOffset) * w, .9 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .9 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, h));\r\n    geo.spot1 = new go.Spot(.15, .15);\r\n    geo.spot2 = new go.Spot(.85, .8);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"ManualInput\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, .25 * h).close());\r\n    geo.spot1 = new go.Spot(0, .25);\r\n    geo.spot2 = go.Spot.BottomRight;\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"MessageFromUser\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var param1 = shape ? shape.parameter1 : NaN;\r\n    if (isNaN(param1)) param1 = .7; // How far from the right the point is\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, param1 * w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\r\n    geo.spot1 = go.Spot.TopLeft;\r\n    //??? geo.spot2 = new go.Spot(param1, 1);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"MicroformProcessing\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var param1 = shape ? shape.parameter1 : NaN;\r\n    if (isNaN(param1)) param1 = .25; // How far from the top/bottom the points are\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, param1 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, (1 - param1) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\r\n    //??? geo.spot1 = new go.Spot(0, param1);\r\n    //??? geo.spot2 = new go.Spot(1, 1 - param1);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"MicroformRecording\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, .25 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .15 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .85 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, .75 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\r\n    geo.spot1 = new go.Spot(0, .25);\r\n    geo.spot2 = new go.Spot(1, .75);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"MultiDocument\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    h = h / .8;\r\n    var fig = new go.PathFigure(w, 0, true);\r\n    geo.add(fig);\r\n\r\n    // Outline\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .9 * w, .44 * h, .96 * w, .47 * h, .93 * w, .45 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .9 * w, .6 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .8 * w, .54 * h, .86 * w, .57 * h, .83 * w, .55 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .8 * w, .7 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, .7 * h, .4 * w, .4 * h, .4 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, .2 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .1 * w, .2 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .1 * w, .1 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, .1 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, 0).close());\r\n    var fig2 = new go.PathFigure(.1 * w, .2 * h, false);\r\n    geo.add(fig2);\r\n    // Inside lines\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .8 * w, .2 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .8 * w, .54 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, .2 * w, .1 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .9 * w, .1 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .9 * w, .44 * h));\r\n    geo.spot1 = new go.Spot(0, .25);\r\n    geo.spot2 = new go.Spot(.8, .77);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"MultiProcess\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(.1 * w, .1 * h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, .1 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .8 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .9 * w, .8 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .9 * w, .9 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .8 * w, .9 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .8 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, .2 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .1 * w, .2 * h).close());\r\n    var fig2 = new go.PathFigure(.2 * w, .1 * h, false);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .9 * w, .1 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .9 * w, .8 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, .1 * w, .2 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .8 * w, .2 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .8 * w, .9 * h));\r\n    geo.spot1 = new go.Spot(0, .2);\r\n    geo.spot2 = new go.Spot(.8, 1);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"OfflineStorage\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var param1 = shape ? shape.parameter1 : NaN;\r\n    if (isNaN(param1)) param1 = .1; // Distance between 2 top lines\r\n    //let l = 1 - param1; // Length of the top line\r\n    let fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, h).close());\r\n    var fig2 = new go.PathFigure(.5 * param1 * w, param1 * h, false);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, (1 - .5 * param1) * w, param1 * h));\r\n    //??? geo.spot1 = new go.Spot(l / 4 + .5 * param1, param1);\r\n    //??? geo.spot2 = new go.Spot(3 * l / 4 + .5 * param1, param1 + .5 * l);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"OffPageConnector\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\r\n    geo.spot1 = go.Spot.TopLeft;\r\n    geo.spot2 = new go.Spot(.75, 1);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Or\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var cpOffset = KAPPA * .5;\r\n    var radius = .5;\r\n    var fig = new go.PathFigure(w, radius * h, true);\r\n    geo.add(fig);\r\n\r\n    // Circle\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, radius * w, h, w, (radius + cpOffset) * h,\r\n        (radius + cpOffset) * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, radius * h, (radius - cpOffset) * w, h,\r\n        0, (radius + cpOffset) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, radius * w, 0, 0, (radius - cpOffset) * h,\r\n        (radius - cpOffset) * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, w, radius * h, (radius + cpOffset) * w, 0,\r\n        w, (radius - cpOffset) * h));\r\n    var fig2 = new go.PathFigure(w, .5 * h, false);\r\n    geo.add(fig2);\r\n    // +\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0, .5 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, .5 * w, h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .5 * w, 0));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"PaperTape\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    h = h / .8;\r\n    var fig = new go.PathFigure(0, .7 * h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, .3 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, w, .3 * h, .5 * w, .6 * h,\r\n        .5 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .7 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, .7 * h, .5 * w, .4 * h,\r\n        .5 * w, h).close());\r\n    geo.spot1 = new go.Spot(0, .49);\r\n    geo.spot2 = new go.Spot(1, .75);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"PrimitiveFromCall\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var param1 = shape ? shape.parameter1 : NaN;\r\n    var param2 = shape ? shape.parameter2 : NaN;\r\n    if (isNaN(param1)) param1 = .1; // Distance of left line from left\r\n    if (isNaN(param2)) param2 = .3; // Distance of point from right\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, (1 - param2) * w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\r\n    //??? geo.spot1 = new go.Spot(param1, 0);\r\n    //??? geo.spot2 = new go.Spot(1 - param2, 1);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"PrimitiveToCall\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var param1 = shape ? shape.parameter1 : NaN;\r\n    var param2 = shape ? shape.parameter2 : NaN;\r\n    if (isNaN(param1)) param1 = .1; // Distance of left line from left\r\n    if (isNaN(param2)) param2 = .3; // Distance of top and bottom right corners from right\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, (1 - param2) * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, (1 - param2) * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\r\n    //??? geo.spot1 = new go.Spot(param1, 0);\r\n    //??? geo.spot2 = new go.Spot(1 - param2, 1);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Procedure\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var param1 = shape ? shape.parameter1 : NaN;\r\n    // Distance of left  and right lines from edge\r\n    if (isNaN(param1)) param1 = .1;\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\r\n    var fig2 = new go.PathFigure((1 - param1) * w, 0, false);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, (1 - param1) * w, h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, param1 * w, 0));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, param1 * w, h));\r\n    //??? geo.spot1 = new go.Spot(param1, 0);\r\n    //??? geo.spot2 = new go.Spot(1 - param1, 1);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Process\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var param1 = shape ? shape.parameter1 : NaN;\r\n    if (isNaN(param1)) param1 = .1; // Distance of left  line from left edge\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\r\n    var fig2 = new go.PathFigure(param1 * w, 0, false);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, param1 * w, h));\r\n    //??? geo.spot1 = new go.Spot(param1, 0);\r\n    geo.spot2 = go.Spot.BottomRight;\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Sort\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(.5 * w, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, .5 * h).close());\r\n    var fig2 = new go.PathFigure(0, .5 * h, false);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\r\n    geo.spot1 = new go.Spot(.25, .25);\r\n    geo.spot2 = new go.Spot(.75, .5);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Start\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var param1 = shape ? shape.parameter1 : NaN;\r\n    if (isNaN(param1)) param1 = 0.25;\r\n    var fig = new go.PathFigure(param1 * w, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Arc, 270, 180, .75 * w, 0.5 * h, .25 * w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Arc, 90, 180, .25 * w, 0.5 * h, .25 * w, .5 * h));\r\n    var fig2 = new go.PathFigure(param1 * w, 0, false);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, param1 * w, h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, (1 - param1) * w, 0));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, (1 - param1) * w, h));\r\n    geo.spot1 = new go.Spot(param1, 0);\r\n    geo.spot2 = new go.Spot((1 - param1), 1);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Terminator\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(.25 * w, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Arc, 270, 180, .75 * w, 0.5 * h, .25 * w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Arc, 90, 180, .25 * w, 0.5 * h, .25 * w, .5 * h));\r\n    geo.spot1 = new go.Spot(.23, 0);\r\n    geo.spot2 = new go.Spot(.77, 1);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"TransmittalTape\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var param1 = shape ? shape.parameter1 : NaN;\r\n    if (isNaN(param1)) param1 = .1; // Bottom line's distance from the point on the triangle\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, (1 - param1) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, (1 - param1) * h).close());\r\n    geo.spot1 = go.Spot.TopLeft;\r\n    //??? geo.spot2 = new go.Spot(1, 1 - param1);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"AndGate\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var cpOffset = KAPPA * .5;\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n\r\n    // The gate body\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, w, .5 * h, (.5 + cpOffset) * w, 0,\r\n        w, (.5 - cpOffset) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, h, w, (.5 + cpOffset) * h,\r\n        (.5 + cpOffset) * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\r\n    geo.spot1 = go.Spot.TopLeft;\r\n    geo.spot2 = new go.Spot(.55, 1);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Buffer\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\r\n    geo.spot1 = new go.Spot(0, .25);\r\n    geo.spot2 = new go.Spot(.5, .75);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Clock\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var cpOffset = KAPPA * .5;\r\n    var radius = .5;\r\n    var fig = new go.PathFigure(w, radius * h, true);\r\n    geo.add(fig);\r\n\r\n    // Ellipse\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, radius * w, h, w, (radius + cpOffset) * h,\r\n        (radius + cpOffset) * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, radius * h, (radius - cpOffset) * w, h,\r\n        0, (radius + cpOffset) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, radius * w, 0, 0, (radius - cpOffset) * h,\r\n        (radius - cpOffset) * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, w, radius * h, (radius + cpOffset) * w, 0,\r\n        w, (radius - cpOffset) * h));\r\n    var fig2 = new go.PathFigure(w, radius * h, false);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w, radius * h));\r\n    var fig3 = new go.PathFigure(.8 * w, .75 * h, false);\r\n    geo.add(fig3);\r\n    // Inside clock\r\n    // This first line solves a GDI+ graphical error with\r\n    // more complex gradient brushes\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, .8 * w, .25 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, .6 * w, .25 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, .6 * w, .75 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, .4 * w, .75 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, .4 * w, .25 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, .2 * w, .25 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, .2 * w, .75 * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Ground\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(.5 * w, 0, false);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .4 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, .2 * w, .6 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .8 * w, .6 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, .3 * w, .8 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, .8 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, .4 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .6 * w, h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Inverter\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var cpOffset = KAPPA * .1;\r\n    var radius = .1;\r\n    var centerx = .9;\r\n    var centery = .5;\r\n    var fig = new go.PathFigure(.8 * w, .5 * h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .8 * w, .5 * h));\r\n    var fig2 = new go.PathFigure((centerx + radius) * w, centery * h, true);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery + radius) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h,\r\n        (centerx - radius) * w, (centery + cpOffset) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h,\r\n        (centerx - cpOffset) * w, (centery - radius) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h,\r\n        (centerx + radius) * w, (centery - cpOffset) * h));\r\n    geo.spot1 = new go.Spot(0, .25);\r\n    geo.spot2 = new go.Spot(.4, .75);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"NandGate\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var cpxOffset = KAPPA * .5;\r\n    var cpyOffset = KAPPA * .4;\r\n    var cpOffset = KAPPA * .1;\r\n    var radius = .1;\r\n    var centerx = .9;\r\n    var centery = .5;\r\n    var fig = new go.PathFigure(.8 * w, .5 * h, true);\r\n    geo.add(fig);\r\n\r\n    // The gate body\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .4 * w, h, .8 * w, (.5 + cpyOffset) * h,\r\n        (.4 + cpxOffset) * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .4 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .8 * w, .5 * h, (.4 + cpxOffset) * w, 0,\r\n        .8 * w, (.5 - cpyOffset) * h));\r\n    var fig2 = new go.PathFigure((centerx + radius) * w, centery * h, true);\r\n    geo.add(fig2);\r\n    // Inversion\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery + radius) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h,\r\n        (centerx - radius) * w, (centery + cpOffset) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h,\r\n        (centerx - cpOffset) * w, (centery - radius) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, (centery) * h, (centerx + cpOffset) * w, (centery - radius) * h,\r\n        (centerx + radius) * w, (centery - cpOffset) * h));\r\n    geo.spot1 = new go.Spot(0, .05);\r\n    geo.spot2 = new go.Spot(.55, .95);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"NorGate\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var radius = .5;\r\n    var cpOffset = KAPPA * radius;\r\n    var centerx = 0;\r\n    var centery = .5;\r\n    var fig = new go.PathFigure(.8 * w, .5 * h, true);\r\n    geo.add(fig);\r\n\r\n    // Normal\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, h, .7 * w, (centery + cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery + radius) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, 0, .25 * w, .75 * h,\r\n        .25 * w, .25 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .8 * w, .5 * h, (centerx + cpOffset) * w, (centery - radius) * h,\r\n        .7 * w, (centery - cpOffset) * h));\r\n    radius = .1;\r\n    cpOffset = KAPPA * .1;\r\n    centerx = .9;\r\n    centery = .5;\r\n    var fig2 = new go.PathFigure((centerx - radius) * w, centery * h, true);\r\n    geo.add(fig2);\r\n    // Inversion\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h,\r\n        (centerx - cpOffset) * w, (centery - radius) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h,\r\n        (centerx + radius) * w, (centery - cpOffset) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery + radius) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h,\r\n        (centerx - radius) * w, (centery + cpOffset) * h));\r\n    geo.spot1 = new go.Spot(.2, .25);\r\n    geo.spot2 = new go.Spot(.6, .75);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"OrGate\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var radius = .5;\r\n    var cpOffset = KAPPA * radius;\r\n    var centerx = 0;\r\n    var centery = .5;\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, w, .5 * h, (centerx + cpOffset + cpOffset) * w, (centery - radius) * h,\r\n        .8 * w, (centery - cpOffset) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, h, .8 * w, (centery + cpOffset) * h,\r\n        (centerx + cpOffset + cpOffset) * w, (centery + radius) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, 0, .25 * w, .75 * h, .25 * w, .25 * h).close());\r\n    geo.spot1 = new go.Spot(.2, .25);\r\n    geo.spot2 = new go.Spot(.75, .75);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"XnorGate\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var radius = .5;\r\n    var cpOffset = KAPPA * radius;\r\n    var centerx = .2;\r\n    var centery = .5;\r\n    var fig = new go.PathFigure(.1 * w, 0, false);\r\n    geo.add(fig);\r\n\r\n    // Normal\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .1 * w, h, .35 * w, .25 * h, .35 * w, .75 * h));\r\n    var fig2 = new go.PathFigure(.8 * w, .5 * h, true);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, .2 * w, h, .7 * w, (centery + cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery + radius) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, .2 * w, 0, .45 * w, .75 * h, .45 * w, .25 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, .8 * w, .5 * h, (centerx + cpOffset) * w, (centery - radius) * h,\r\n        .7 * w, (centery - cpOffset) * h));\r\n    radius = .1;\r\n    cpOffset = KAPPA * .1;\r\n    centerx = .9;\r\n    centery = .5;\r\n    var fig3 = new go.PathFigure((centerx - radius) * w, centery * h, true);\r\n    geo.add(fig3);\r\n    // Inversion\r\n    fig3.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h,\r\n        (centerx - cpOffset) * w, (centery - radius) * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h,\r\n        (centerx + radius) * w, (centery - cpOffset) * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery + radius) * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h,\r\n        (centerx - radius) * w, (centery + cpOffset) * h));\r\n    geo.spot1 = new go.Spot(.4, .25);\r\n    geo.spot2 = new go.Spot(.65, .75);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"XorGate\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var radius = .5;\r\n    var cpOffset = KAPPA * radius;\r\n    var centerx = .2;\r\n    var centery = .5;\r\n    var fig = new go.PathFigure(.1 * w, 0, false);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .1 * w, h, .35 * w, .25 * h, .35 * w, .75 * h));\r\n    var fig2 = new go.PathFigure(.2 * w, 0, true);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, w, .5 * h, (centerx + cpOffset) * w, (centery - radius) * h,\r\n        .9 * w, (centery - cpOffset) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, .2 * w, h, .9 * w, (centery + cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery + radius) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, .2 * w, 0, .45 * w, .75 * h, .45 * w, .25 * h).close());\r\n    geo.spot1 = new go.Spot(.4, .25);\r\n    geo.spot2 = new go.Spot(.8, .75);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Capacitor\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0, false);\r\n    geo.add(fig);\r\n\r\n    // Two vertical lines\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Resistor\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, .5 * h, false);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .1 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .4 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .6 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, .5 * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Inductor\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var cpOffset = KAPPA * .1;\r\n    let radius = .1;\r\n    let centerx = .1;\r\n    // let centery = .5;\r\n    // Up\r\n    var fig = new go.PathFigure((centerx - cpOffset * .5) * w, h, false);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, 0, (centerx - cpOffset) * w, h, (centerx - radius) * w, 0));\r\n    // Down up\r\n    centerx = .3;\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, h, (centerx + radius) * w, 0, (centerx + cpOffset) * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, 0, (centerx - cpOffset) * w, h, (centerx - radius) * w, 0));\r\n    // Down up\r\n    centerx = .5;\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, h, (centerx + radius) * w, 0, (centerx + cpOffset) * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, 0, (centerx - cpOffset) * w, h, (centerx - radius) * w, 0));\r\n    // Down up\r\n    centerx = .7;\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, h, (centerx + radius) * w, 0, (centerx + cpOffset) * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, 0, (centerx - cpOffset) * w, h, (centerx - radius) * w, 0));\r\n    // Down up\r\n    centerx = .9;\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + cpOffset * .5) * w, h, (centerx + radius) * w, 0, (centerx + cpOffset) * w, h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"ACvoltageSource\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var cpOffset = KAPPA * .5;\r\n    var radius = .5;\r\n    var centerx = .5;\r\n    var centery = .5;\r\n    var fig = new go.PathFigure((centerx - radius) * w, centery * h, false);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h,\r\n        (centerx - cpOffset) * w, (centery - radius) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h,\r\n        (centerx + radius) * w, (centery - cpOffset) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery + radius) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h,\r\n        (centerx - radius) * w, (centery + cpOffset) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, (centerx - radius + .1) * w, centery * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius - .1) * w, centery * h, centerx * w, (centery - radius) * h,\r\n        centerx * w, (centery + radius) * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"DCvoltageSource\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, .75 * h, false);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, .25 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Diode\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w, 0, false);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    geo.spot1 = new go.Spot(0, .25);\r\n    geo.spot2 = new go.Spot(.5, .75);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Wifi\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var origw = w;\r\n    var origh = h;\r\n    w = w * .38;\r\n    h = h * .6;\r\n    var cpOffset = KAPPA * .8;\r\n    var radius = .8;\r\n    var centerx = 0;\r\n    var centery = .5;\r\n    var xOffset = (origw - w) / 2;\r\n    var yOffset = (origh - h) / 2;\r\n    var fig = new go.PathFigure(centerx * w + xOffset, (centery + radius) * h + yOffset, true);\r\n    geo.add(fig);\r\n\r\n    // Left curves\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w + xOffset,\r\n        centery * h + yOffset, (centerx - cpOffset) * w + xOffset,\r\n        (centery + radius) * h + yOffset,\r\n        (centerx - radius) * w + xOffset,\r\n        (centery + cpOffset) * h + yOffset));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w + xOffset,\r\n        (centery - radius) * h + yOffset, (centerx - radius) * w + xOffset,\r\n        (centery - cpOffset) * h + yOffset,\r\n        (centerx - cpOffset) * w + xOffset,\r\n        (centery - radius) * h + yOffset));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius + cpOffset * .5) * w + xOffset,\r\n        centery * h + yOffset, centerx * w + xOffset,\r\n        (centery - radius) * h + yOffset,\r\n        (centerx - radius + cpOffset * .5) * w + xOffset,\r\n        (centery - cpOffset) * h + yOffset));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w + xOffset,\r\n        (centery + radius) * h + yOffset, (centerx - radius + cpOffset * .5) * w + xOffset,\r\n        (centery + cpOffset) * h + yOffset,\r\n        centerx * w + xOffset,\r\n        (centery + radius) * h + yOffset).close());\r\n    cpOffset = KAPPA * .4;\r\n    radius = .4;\r\n    centerx = .2;\r\n    centery = .5;\r\n    var fig2 = new go.PathFigure(centerx * w + xOffset, (centery + radius) * h + yOffset, true);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w + xOffset,\r\n        centery * h + yOffset, (centerx - cpOffset) * w + xOffset,\r\n        (centery + radius) * h + yOffset,\r\n        (centerx - radius) * w + xOffset,\r\n        (centery + cpOffset) * h + yOffset));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w + xOffset,\r\n        (centery - radius) * h + yOffset, (centerx - radius) * w + xOffset,\r\n        (centery - cpOffset) * h + yOffset,\r\n        (centerx - cpOffset) * w + xOffset,\r\n        (centery - radius) * h + yOffset));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius + cpOffset * .5) * w + xOffset,\r\n        centery * h + yOffset, centerx * w + xOffset,\r\n        (centery - radius) * h + yOffset,\r\n        (centerx - radius + cpOffset * .5) * w + xOffset,\r\n        (centery - cpOffset) * h + yOffset));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w + xOffset,\r\n        (centery + radius) * h + yOffset, (centerx - radius + cpOffset * .5) * w + xOffset,\r\n        (centery + cpOffset) * h + yOffset,\r\n        centerx * w + xOffset,\r\n        (centery + radius) * h + yOffset).close());\r\n    cpOffset = KAPPA * .2;\r\n    radius = .2;\r\n    centerx = .5;\r\n    centery = .5;\r\n    var fig3 = new go.PathFigure((centerx - radius) * w + xOffset, centery * h + yOffset, true);\r\n    geo.add(fig3);\r\n    // Center circle\r\n    fig3.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w + xOffset,\r\n        (centery - radius) * h + yOffset, (centerx - radius) * w + xOffset,\r\n        (centery - cpOffset) * h + yOffset,\r\n        (centerx - cpOffset) * w + xOffset,\r\n        (centery - radius) * h + yOffset));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w + xOffset,\r\n        centery * h + yOffset, (centerx + cpOffset) * w + xOffset,\r\n        (centery - radius) * h + yOffset,\r\n        (centerx + radius) * w + xOffset,\r\n        (centery - cpOffset) * h + yOffset));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w + xOffset,\r\n        (centery + radius) * h + yOffset, (centerx + radius) * w + xOffset,\r\n        (centery + cpOffset) * h + yOffset,\r\n        (centerx + cpOffset) * w + xOffset,\r\n        (centery + radius) * h + yOffset));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w + xOffset,\r\n        centery * h + yOffset, (centerx - cpOffset) * w + xOffset,\r\n        (centery + radius) * h + yOffset,\r\n        (centerx - radius) * w + xOffset,\r\n        (centery + cpOffset) * h + yOffset));\r\n    cpOffset = KAPPA * .4;\r\n    radius = .4;\r\n    centerx = .8;\r\n    centery = .5;\r\n    var fig4 = new go.PathFigure(centerx * w + xOffset, (centery - radius) * h + yOffset, true);\r\n    geo.add(fig4);\r\n    // Right curves\r\n    fig4.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w + xOffset,\r\n        centery * h + yOffset, (centerx + cpOffset) * w + xOffset,\r\n        (centery - radius) * h + yOffset,\r\n        (centerx + radius) * w + xOffset,\r\n        (centery - cpOffset) * h + yOffset));\r\n    fig4.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w + xOffset,\r\n        (centery + radius) * h + yOffset, (centerx + radius) * w + xOffset,\r\n        (centery + cpOffset) * h + yOffset,\r\n        (centerx + cpOffset) * w + xOffset,\r\n        (centery + radius) * h + yOffset));\r\n    fig4.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius - cpOffset * .5) * w + xOffset,\r\n        centery * h + yOffset, centerx * w + xOffset,\r\n        (centery + radius) * h + yOffset,\r\n        (centerx + radius - cpOffset * .5) * w + xOffset,\r\n        (centery + cpOffset) * h + yOffset));\r\n    fig4.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w + xOffset,\r\n        (centery - radius) * h + yOffset, (centerx + radius - cpOffset * .5) * w + xOffset,\r\n        (centery - cpOffset) * h + yOffset,\r\n        centerx * w + xOffset,\r\n        (centery - radius) * h + yOffset).close());\r\n    cpOffset = KAPPA * .8;\r\n    radius = .8;\r\n    centerx = 1;\r\n    centery = .5;\r\n    var fig5 = new go.PathFigure(centerx * w + xOffset, (centery - radius) * h + yOffset, true);\r\n    geo.add(fig5);\r\n    fig5.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w + xOffset,\r\n        centery * h + yOffset, (centerx + cpOffset) * w + xOffset,\r\n        (centery - radius) * h + yOffset,\r\n        (centerx + radius) * w + xOffset,\r\n        (centery - cpOffset) * h + yOffset));\r\n    fig5.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w + xOffset,\r\n        (centery + radius) * h + yOffset, (centerx + radius) * w + xOffset,\r\n        (centery + cpOffset) * h + yOffset,\r\n        (centerx + cpOffset) * w + xOffset,\r\n        (centery + radius) * h + yOffset));\r\n    fig5.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius - cpOffset * .5) * w + xOffset,\r\n        centery * h + yOffset, centerx * w + xOffset,\r\n        (centery + radius) * h + yOffset,\r\n        (centerx + radius - cpOffset * .5) * w + xOffset,\r\n        (centery + cpOffset) * h + yOffset));\r\n    fig5.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w + xOffset,\r\n        (centery - radius) * h + yOffset, (centerx + radius - cpOffset * .5) * w + xOffset,\r\n        (centery - cpOffset) * h + yOffset,\r\n        centerx * w + xOffset,\r\n        (centery - radius) * h + yOffset).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Email\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0).close());\r\n    var fig2 = new go.PathFigure(0, 0, false);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .6 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, 0, h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .45 * w, .54 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, w, h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .55 * w, .54 * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Ethernet\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(.35 * w, 0, true);\r\n    geo.add(fig);\r\n    // Boxes above the wire\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .65 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .65 * w, .4 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .35 * w, .4 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .35 * w, 0).close());\r\n    var fig2 = new go.PathFigure(.10 * w, h, true, true);\r\n    geo.add(fig2);\r\n    // Boxes under the wire\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .40 * w, h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .40 * w, .6 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .10 * w, .6 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .10 * w, h).close());\r\n    var fig3 = new go.PathFigure(.60 * w, h, true, true);\r\n    geo.add(fig3);\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, .90 * w, h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, .90 * w, .6 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, .60 * w, .6 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, .60 * w, h).close());\r\n    var fig4 = new go.PathFigure(0, .5 * h, false);\r\n    geo.add(fig4);\r\n    // Wire\r\n    fig4.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\r\n    fig4.add(new go.PathSegment(go.PathSegment.Move, .5 * w, .5 * h));\r\n    fig4.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .4 * h));\r\n    fig4.add(new go.PathSegment(go.PathSegment.Move, .75 * w, .5 * h));\r\n    fig4.add(new go.PathSegment(go.PathSegment.Line, .75 * w, .6 * h));\r\n    fig4.add(new go.PathSegment(go.PathSegment.Move, .25 * w, .5 * h));\r\n    fig4.add(new go.PathSegment(go.PathSegment.Line, .25 * w, .6 * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Power\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var cpOffset = KAPPA * .4;\r\n    var radius = .4;\r\n    var centerx = .5;\r\n    var centery = .5;\r\n    var unused = tempPoint();\r\n    var mid = tempPoint();\r\n    var c1 = tempPoint();\r\n    var c2 = tempPoint();\r\n    // Find the 45 degree midpoint for the first bezier\r\n    breakUpBezier(centerx, centery - radius,\r\n        centerx + cpOffset, centery - radius,\r\n        centerx + radius, centery - cpOffset,\r\n        centerx + radius, centery, .5, unused,\r\n        unused, mid, c1, c2);\r\n    var start = tempPointAt(mid.x, mid.y);\r\n    let fig = new go.PathFigure(mid.x * w, mid.y * h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, c1.x * w, c1.y * h, c2.x * w, c2.y * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery + radius) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h,\r\n        (centerx - radius) * w, (centery + cpOffset) * h));\r\n    // Find the 45 degree midpoint of for the fourth bezier\r\n    breakUpBezier(centerx - radius, centery,\r\n        centerx - radius, centery - cpOffset,\r\n        centerx - cpOffset, centery - radius,\r\n        centerx, centery - radius, .5, c1,\r\n        c2, mid, unused, unused);\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, mid.x * w, mid.y * h, c1.x * w, c1.y * h,\r\n        c2.x * w, c2.y * h));\r\n    // now make a smaller circle\r\n    cpOffset = KAPPA * .3;\r\n    radius = .3;\r\n    // Find the 45 degree midpoint for the first bezier\r\n    breakUpBezier(centerx - radius, centery,\r\n        centerx - radius, centery - cpOffset,\r\n        centerx - cpOffset, centery - radius,\r\n        centerx, centery - radius, .5, c1,\r\n        c2, mid, unused, unused);\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, mid.x * w, mid.y * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, c2.x * w, c2.y * h, c1.x * w, c1.y * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx - radius) * w, (centery + cpOffset) * h,\r\n        (centerx - cpOffset) * w, (centery + radius) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery + radius) * h,\r\n        (centerx + radius) * w, (centery + cpOffset) * h));\r\n    // Find the 45 degree midpoint for the fourth bezier\r\n    breakUpBezier(centerx, centery - radius,\r\n        centerx + cpOffset, centery - radius,\r\n        centerx + radius, centery - cpOffset,\r\n        centerx + radius, centery, .5, unused,\r\n        unused, mid, c1, c2);\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, mid.x * w, mid.y * h, c2.x * w, c2.y * h, c1.x * w, c1.y * h).close());\r\n    fig = new go.PathFigure(.45 * w, 0, true);\r\n    geo.add(fig);\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .45 * w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .55 * w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .55 * w, 0).close());\r\n    freePoint(unused);\r\n    freePoint(mid);\r\n    freePoint(c1);\r\n    freePoint(c2);\r\n    freePoint(start);\r\n    geo.spot1 = new go.Spot(.25, .45);\r\n    geo.spot2 = new go.Spot(.75, .8);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Fallout\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, h / 2, true);\r\n    geo.add(fig);\r\n\r\n    // Containing circle\r\n    fig.add(new go.PathSegment(go.PathSegment.Arc, 180, 360, w / 2, h / 2, w / 2, h / 2))\r\n\r\n    function drawTriangle(fig, offsetx, offsety) {\r\n        fig.add(new go.PathSegment(go.PathSegment.Move, (.3 + offsetx) * w, (.8 + offsety) * h));\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, (.5 + offsetx) * w, (.5 + offsety) * h));\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, (.1 + offsetx) * w, (.5 + offsety) * h));\r\n        fig.add(new go.PathSegment(go.PathSegment.Line, (.3 + offsetx) * w, (.8 + offsety) * h).close());\r\n    }\r\n\r\n    // Triangles\r\n    drawTriangle(fig, 0, 0);\r\n    drawTriangle(fig, 0.4, 0);\r\n    drawTriangle(fig, 0.2, -0.3);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"IrritationHazard\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(.2 * w, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .3 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .8 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .2 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .8 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .8 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .7 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .2 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, .8 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, .2 * h).close());\r\n    geo.spot1 = new go.Spot(.3, .3);\r\n    geo.spot2 = new go.Spot(.7, .7);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"ElectricalHazard\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(.37 * w, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .11 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .77 * w, .04 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .33 * w, .49 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .37 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .63 * w, .86 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .77 * w, .91 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .34 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .34 * w, .78 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .44 * w, .8 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .65 * w, .56 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, .68 * h).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"FireHazard\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(.1 * w, h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .29 * w, 0, -.25 * w, .63 * h,\r\n        .45 * w, .44 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .51 * w, .42 * h, .48 * w, .17 * h,\r\n        .54 * w, .35 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .59 * w, .18 * h, .59 * w, .29 * h,\r\n        .58 * w, .28 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .75 * w, .6 * h, .8 * w, .34 * h,\r\n        .88 * w, .43 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .88 * w, .31 * h, .87 * w, .48 * h,\r\n        .88 * w, .43 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .9 * w, h, 1.17 * w, .76 * h,\r\n        .82 * w, .8 * h).close());\r\n    geo.spot1 = new go.Spot(.07, .445);\r\n    geo.spot2 = new go.Spot(.884, .958);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"BpmnActivityLoop\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var r = .5;\r\n    var cx = 0; // offset from Center x\r\n    var cy = 0; // offset from Center y\r\n    var d = r * KAPPA;\r\n    var mx1 = (.4 * Math.SQRT2 / 2 + .5);\r\n    var my1 = (.5 - .5 * Math.SQRT2 / 2);\r\n    var x1 = 1;\r\n    var y1 = .5;\r\n    var x2 = .5;\r\n    var y2 = 0;\r\n    var fig = new go.PathFigure(mx1 * w, (1 - my1) * h, false);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, x1 * w, y1 * h, x1 * w, .7 * h,\r\n        x1 * w, y1 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (x2 + cx) * w, (y2 + cx) * h, (.5 + r + cx) * w, (.5 - d + cx) * h,\r\n        (.5 + d + cx) * w, (.5 - r + cx) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (.5 - r + cx) * w, (.5 + cy) * h, (.5 - d + cx) * w, (.5 - r + cy) * h,\r\n        (.5 - r + cx) * w, (.5 - d + cy) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (.35 + cx) * w, .9 * h, (.5 - r + cx) * w, (.5 + d + cy) * h,\r\n        (.5 - d + cx) * w, .9 * h));\r\n    // Arrowhead\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, (.25 + cx) * w, 0.8 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, (.35 + cx) * w, 0.9 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, (.20 + cx) * w, 0.95 * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"BpmnActivityParallel\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0, false);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, .5 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"BpmnActivitySequential\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0, false);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, 0, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"BpmnActivityAdHoc\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0, false);\r\n    geo.add(fig);\r\n\r\n    var fig2 = new go.PathFigure(w, h, false);\r\n    geo.add(fig2);\r\n    var fig3 = new go.PathFigure(0, .5 * h, false);\r\n    geo.add(fig3);\r\n    fig3.add(new go.PathSegment(go.PathSegment.Bezier, .5 * w, .5 * h, .2 * w, .35 * h,\r\n        .3 * w, .35 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Bezier, w, .5 * h, .7 * w, .65 * h,\r\n        .8 * w, .65 * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"BpmnActivityCompensation\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, .5 * h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, h).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"BpmnTaskMessage\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    let fig = new go.PathFigure(0, .2 * h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .2 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .8 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, .8 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, .8 * h).close());\r\n    fig = new go.PathFigure(0, .2 * h, false);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, .2 * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"BpmnTaskScript\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(.7 * w, h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .3 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.3 * w, 0, .6 * w, .5 * h,\r\n        0, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .7 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, .7 * w, h, .4 * w, .5 * h,\r\n        w, .5 * h).close());\r\n    var fig2 = new go.PathFigure(.45 * w, .73 * h, false);\r\n    geo.add(fig2);\r\n    // Lines on script\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .7 * w, .73 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, .38 * w, .5 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .63 * w, .5 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, .31 * w, .27 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .56 * w, .27 * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"BpmnTaskUser\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0, false);\r\n    geo.add(fig);\r\n\r\n    var fig2 = new go.PathFigure(.335 * w, (1 - .555) * h, true);\r\n    geo.add(fig2);\r\n    // Shirt\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .335 * w, (1 - .405) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, (1 - .335) * w, (1 - .405) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, (1 - .335) * w, (1 - .555) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, w, .68 * h, (1 - .12) * w, .46 * h,\r\n        (1 - .02) * w, .54 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0, .68 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, .335 * w, (1 - .555) * h, .02 * w, .54 * h,\r\n        .12 * w, .46 * h));\r\n    // Start of neck\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .365 * w, (1 - .595) * h));\r\n    var radiushead = .5 - .285;\r\n    var centerx = .5;\r\n    var centery = radiushead;\r\n    var alpha2 = Math.PI / 4;\r\n    var KAPPA = ((4 * (1 - Math.cos(alpha2))) / (3 * Math.sin(alpha2)));\r\n    // let cpOffset = KAPPA * .5;\r\n    var radiusw = radiushead;\r\n    var radiush = radiushead;\r\n    var offsetw = KAPPA * radiusw;\r\n    var offseth = KAPPA * radiush;\r\n    // Circle (head)\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radiusw) * w, centery * h, (centerx - ((offsetw + radiusw) / 2)) * w, (centery + ((radiush + offseth) / 2)) * h,\r\n        (centerx - radiusw) * w, (centery + offseth) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radiush) * h, (centerx - radiusw) * w, (centery - offseth) * h,\r\n        (centerx - offsetw) * w, (centery - radiush) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radiusw) * w, centery * h, (centerx + offsetw) * w, (centery - radiush) * h,\r\n        (centerx + radiusw) * w, (centery - offseth) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, (1 - .365) * w, (1 - .595) * h, (centerx + radiusw) * w, (centery + offseth) * h,\r\n        (centerx + ((offsetw + radiusw) / 2)) * w, (centery + ((radiush + offseth) / 2)) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, (1 - .365) * w, (1 - .595) * h));\r\n    // Neckline\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, (1 - .335) * w, (1 - .555) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, (1 - .335) * w, (1 - .405) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .335 * w, (1 - .405) * h));\r\n    var fig3 = new go.PathFigure(.2 * w, h, false);\r\n    geo.add(fig3);\r\n    // Arm lines\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, .2 * w, .8 * h));\r\n    var fig4 = new go.PathFigure(.8 * w, h, false);\r\n    geo.add(fig4);\r\n    fig4.add(new go.PathSegment(go.PathSegment.Line, .8 * w, .8 * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"BpmnEventConditional\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(.1 * w, 0, true);\r\n    geo.add(fig);\r\n\r\n    // Body\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .9 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .9 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .1 * w, h).close());\r\n    var fig2 = new go.PathFigure(.2 * w, .2 * h, false);\r\n    geo.add(fig2);\r\n    // Inside lines\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .8 * w, .2 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, .2 * w, .4 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .8 * w, .4 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, .2 * w, .6 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .8 * w, .6 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, .2 * w, .8 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .8 * w, .8 * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"BpmnEventError\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .33 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .66 * w, .50 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .66 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .33 * w, .50 * h).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"BpmnEventEscalation\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0, false);\r\n    geo.add(fig);\r\n    // Set dimensions\r\n    var fig2 = new go.PathFigure(w, h, false);\r\n    geo.add(fig2);\r\n    var fig3 = new go.PathFigure(.1 * w, h, true);\r\n    geo.add(fig3);\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, .5 * w, 0));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, .9 * w, h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, .5 * w, .5 * h).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Caution\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0.05 * w, h, true);\r\n    geo.add(fig);\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.1 * w, .8 * h, 0, h, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.45 * w, .1 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.55 * w, .1 * h, 0.5 * w, 0, 0.5 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.95 * w, 0.9 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.9 * w, h, w, h, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.05 * w, h));\r\n    var radius = 0.05;\r\n    // Bottom circle of exclamation point\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, (0.5 - radius) * w, 0.875 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Arc, 180, -360, 0.5 * w, 0.875 * h, radius * w, radius * h));\r\n    // Upper rectangle of exclamation point\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, 0.5 * w, 0.75 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.5 * w, 0.325 * h, 0.575 * w, 0.725 * h, 0.625 * w, 0.375 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.5 * w, 0.75 * h, 0.375 * w, 0.375 * h, 0.425 * w, 0.725 * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Recycle\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0.45 * w, 0.95 * h, false);\r\n    geo.add(fig);\r\n\r\n    // Bottom left arrow\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.2 * w, 0.95 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.185 * w, 0.85 * h, 0.17 * w, 0.95 * h, 0.15 * w, 0.9 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.235 * w, 0.75 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.30 * w, 0.625 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.35 * w, 0.65 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.275 * w, 0.45 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.05 * w, 0.45 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.1 * w, 0.5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.05 * w, 0.575 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.1875 * w, 0.95 * h, 0, 0.675 * h, 0, 0.7 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, 0.45 * w, 0.95 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.45 * w, 0.775 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.22 * w, 0.775 * h));\r\n    var fig2 = new go.PathFigure(0.475 * w, 0.2 * h, false);\r\n    geo.add(fig2);\r\n    // Top arrow\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0.4 * w, 0.4 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0.225 * w, 0.3 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0.275 * w, 0.175 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0.325 * w, 0.05 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, 0.4 * w, 0.05 * h, 0.35 * w, 0, 0.375 * w, 0));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0.575 * w, 0.375 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0.525 * w, 0.4 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0.75 * w, 0.475 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0.85 * w, 0.315 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0.8 * w, 0.32 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0.65 * w, 0.05 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, 0.575 * w, 0, 0.65 * w, 0.05 * h, 0.625 * w, 0));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0.38 * w, 0.0105 * h));\r\n    var fig3 = new go.PathFigure(0.675 * w, 0.575 * h, false);\r\n    geo.add(fig3);\r\n    // Bottom right arrow\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, 0.875 * w, 0.525 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, w, 0.775 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Bezier, 0.85 * w, 0.95 * h, w, 0.8 * h, w, 0.85 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, 0.65 * w, 0.95 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, 0.65 * w, h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, 0.55 * w, 0.85 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, 0.65 * w, 0.725 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, 0.65 * w, 0.775 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, 0.7 * w, 0.775 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, w, 0.775 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Move, 0.675 * w, 0.575 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, 0.775 * w, 0.775 * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"BpmnEventTimer\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var radius = .5;\r\n    var cpOffset = KAPPA * .5;\r\n    var fig = new go.PathFigure(w, radius * h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, radius * w, h, w, (radius + cpOffset) * h,\r\n        (radius + cpOffset) * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, radius * h, (radius - cpOffset) * w, h,\r\n        0, (radius + cpOffset) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, radius * w, 0, 0, (radius - cpOffset) * h,\r\n        (radius - cpOffset) * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, w, radius * h, (radius + cpOffset) * w, 0,\r\n        w, (radius - cpOffset) * h));\r\n    var fig2 = new go.PathFigure(radius * w, 0, false);\r\n    geo.add(fig2);\r\n    // Hour lines\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, radius * w, .15 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, radius * w, h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, radius * w, .85 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, 0, radius * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .15 * w, radius * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, w, radius * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .85 * w, radius * h));\r\n    // Clock hands\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, radius * w, radius * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .58 * w, 0.1 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, radius * w, radius * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .78 * w, .54 * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Package\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0.15 * h, true);\r\n    geo.add(fig);\r\n\r\n    // Package bottom rectangle\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.15 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\r\n    var fig2 = new go.PathFigure(0, 0.15 * h, true);\r\n    geo.add(fig2);\r\n    // Package top flap\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0, 0));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0.6 * w, 0));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0.65 * w, 0.15 * h).close());\r\n    geo.spot1 = new go.Spot(0, 0.1);\r\n    geo.spot2 = new go.Spot(1, 1);\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Class\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n\r\n    // Class box\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0).close());\r\n    var fig2 = new go.PathFigure(0, 0.2 * h, false);\r\n    geo.add(fig2);\r\n    // Top box separater\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w, 0.2 * h).close());\r\n    var fig3 = new go.PathFigure(0, 0.5 * h, false);\r\n    geo.add(fig3);\r\n    // Middle box separater\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, w, 0.5 * h).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Component\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w, h, true);\r\n    geo.add(fig);\r\n\r\n    // Component Box\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.15 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.15 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h).close());\r\n    var fig2 = new go.PathFigure(0, 0.2 * h, true);\r\n    geo.add(fig2);\r\n    // Component top sub box\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0.45 * w, 0.2 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0.45 * w, 0.4 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0, 0.4 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0, 0.2 * h).close());\r\n    var fig3 = new go.PathFigure(0, 0.6 * h, true);\r\n    geo.add(fig3);\r\n    // Component bottom sub box\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, 0.45 * w, 0.6 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, 0.45 * w, 0.8 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, 0, 0.8 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, 0, 0.6 * h).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Boat Shipment\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0.15 * w, 0.6 * h, true);\r\n    geo.add(fig);\r\n\r\n    // Boat shipment flag\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.15 * w, 0.6 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0.6 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.15 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.85 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.6 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.85 * w, 0.6 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.15 * w, 0.6 * h));\r\n    var fig2 = new go.PathFigure(0.15 * w, 0.6 * h, false);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0.85 * w, 0.6 * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Customer/Supplier\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w, h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.66 * w, 0.33 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.66 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.33 * w, 0.33 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.33 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0.33 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Workcell\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.65 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.65 * w, 0.4 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.35 * w, 0.4 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.35 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Supermarket\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0, false);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.33 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0.33 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, w, 0.33 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.66 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0.66 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, w, 0.66 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"TruckShipment\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n\r\n    // Left rectangle\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.6 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.6 * w, 0.8 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0.8 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0).close());\r\n    var fig2 = new go.PathFigure(w, 0.8 * h, true);\r\n    geo.add(fig2);\r\n    // Right rectangle\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w, 0.4 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0.6 * w, 0.4 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0.6 * w, 0.8 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w, 0.8 * h).close());\r\n    var radius = .1;\r\n    var cpOffset = KAPPA * .1;\r\n    var centerx = .2;\r\n    var centery = .9;\r\n    var fig3 = new go.PathFigure((centerx - radius) * w, centery * h, true);\r\n    geo.add(fig3);\r\n    // Left wheel\r\n    fig3.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h,\r\n        (centerx - cpOffset) * w, (centery - radius) * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h,\r\n        (centerx + radius) * w, (centery - cpOffset) * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery + radius) * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h,\r\n        (centerx - radius) * w, (centery + cpOffset) * h).close());\r\n    radius = .1;\r\n    cpOffset = KAPPA * .1;\r\n    centerx = .8;\r\n    centery = .9;\r\n    var fig4 = new go.PathFigure((centerx - radius) * w, centery * h, true);\r\n    geo.add(fig4);\r\n    // Right wheel\r\n    fig4.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h,\r\n        (centerx - cpOffset) * w, (centery - radius) * h));\r\n    fig4.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h,\r\n        (centerx + radius) * w, (centery - cpOffset) * h));\r\n    fig4.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery + radius) * h));\r\n    fig4.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h,\r\n        (centerx - radius) * w, (centery + cpOffset) * h).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"KanbanPost\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0.2 * w, 0, false);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.2 * w, .5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.8 * w, 0.5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.8 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, 0.5 * w, 0.5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.2 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, 0.5 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.8 * w, h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Forklift\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0.5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, 0.5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.4 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0));\r\n    var fig2 = new go.PathFigure(0, 0.5 * h, true);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0, 0.8 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, 0.8 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, 0.5 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0, 0.5 * h));\r\n    var fig3 = new go.PathFigure(0.50 * w, 0.8 * h, true);\r\n    geo.add(fig3);\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, 0.50 * w, 0.1 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, 0.55 * w, 0.1 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, 0.55 * w, 0.8 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, 0.50 * w, 0.8 * h));\r\n    var fig4 = new go.PathFigure(0.5 * w, 0.7 * h, false);\r\n    geo.add(fig4);\r\n    fig4.add(new go.PathSegment(go.PathSegment.Line, w, 0.7 * h));\r\n    var radius = .1;\r\n    var cpOffset = KAPPA * .1;\r\n    var centerx = .1;\r\n    var centery = .9\r\n    var fig5 = new go.PathFigure((centerx - radius) * w, centery * h, true);\r\n    geo.add(fig5);\r\n    fig5.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h,\r\n        (centerx - cpOffset) * w, (centery - radius) * h));\r\n    fig5.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h,\r\n        (centerx + radius) * w, (centery - cpOffset) * h));\r\n    fig5.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery + radius) * h));\r\n    fig5.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h,\r\n        (centerx - radius) * w, (centery + cpOffset) * h));\r\n    radius = .1;\r\n    cpOffset = KAPPA * .1;\r\n    centerx = .4;\r\n    centery = .9;\r\n    var fig6 = new go.PathFigure((centerx - radius) * w, centery * h, true);\r\n    geo.add(fig6);\r\n    fig6.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h,\r\n        (centerx - cpOffset) * w, (centery - radius) * h));\r\n    fig6.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h,\r\n        (centerx + radius) * w, (centery - cpOffset) * h));\r\n    fig6.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery + radius) * h));\r\n    fig6.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h,\r\n        (centerx - radius) * w, (centery + cpOffset) * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"RailShipment\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0.1 * w, 0.4 * h, true);\r\n    geo.add(fig);\r\n\r\n    // Left cart\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.45 * w, 0.4 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.45 * w, 0.9 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.1 * w, 0.9 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.1 * w, 0.4 * h).close());\r\n    var fig2 = new go.PathFigure(0.45 * w, 0.7 * h, false);\r\n    geo.add(fig2);\r\n    // Line connecting carts\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0.55 * w, 0.7 * h));\r\n    var fig3 = new go.PathFigure(0.55 * w, 0.4 * h, true);\r\n    geo.add(fig3);\r\n    // Right cart\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, 0.9 * w, 0.4 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, 0.9 * w, 0.9 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, 0.55 * w, 0.9 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, 0.55 * w, 0.4 * h).close());\r\n    let radius = .05;\r\n    let cpOffset = KAPPA * .05;\r\n    let centerx = .175;\r\n    let centery = .95;\r\n    var fig4 = new go.PathFigure((centerx - radius) * w, centery * h, true);\r\n    geo.add(fig4);\r\n    // Wheels\r\n    fig4.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h,\r\n        (centerx - cpOffset) * w, (centery - radius) * h));\r\n    fig4.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h,\r\n        (centerx + radius) * w, (centery - cpOffset) * h));\r\n    fig4.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery + radius) * h));\r\n    fig4.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h,\r\n        (centerx - radius) * w, (centery + cpOffset) * h));\r\n    radius = .05;\r\n    cpOffset = KAPPA * .05;\r\n    centerx = .375;\r\n    centery = .95;\r\n    var fig5 = new go.PathFigure((centerx - radius) * w, centery * h, true);\r\n    geo.add(fig5);\r\n    fig5.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h,\r\n        (centerx - cpOffset) * w, (centery - radius) * h));\r\n    fig5.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h,\r\n        (centerx + radius) * w, (centery - cpOffset) * h));\r\n    fig5.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery + radius) * h));\r\n    fig5.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h,\r\n        (centerx - radius) * w, (centery + cpOffset) * h));\r\n    radius = .05;\r\n    cpOffset = KAPPA * .05;\r\n    centerx = .625;\r\n    centery = .95;\r\n    var fig6 = new go.PathFigure((centerx - radius) * w, centery * h, true);\r\n    geo.add(fig6);\r\n    fig6.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h,\r\n        (centerx - cpOffset) * w, (centery - radius) * h));\r\n    fig6.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h,\r\n        (centerx + radius) * w, (centery - cpOffset) * h));\r\n    fig6.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery + radius) * h));\r\n    fig6.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h,\r\n        (centerx - radius) * w, (centery + cpOffset) * h));\r\n    radius = .05;\r\n    cpOffset = KAPPA * .05;\r\n    centerx = .825;\r\n    centery = .95;\r\n    var fig7 = new go.PathFigure((centerx - radius) * w, centery * h, true);\r\n    geo.add(fig7);\r\n    fig7.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h,\r\n        (centerx - cpOffset) * w, (centery - radius) * h));\r\n    fig7.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h,\r\n        (centerx + radius) * w, (centery - cpOffset) * h));\r\n    fig7.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery + radius) * h));\r\n    fig7.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h,\r\n        (centerx - radius) * w, (centery + cpOffset) * h).close());\r\n    var fig8 = new go.PathFigure(0, h, false);\r\n    geo.add(fig8);\r\n    fig8.add(new go.PathSegment(go.PathSegment.Line, w, h).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Warehouse\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0).close());\r\n    var fig2 = new go.PathFigure(0, 0.2 * h, false);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w, 0.2 * h).close());\r\n    var fig3 = new go.PathFigure(0.15 * w, h, true);\r\n    geo.add(fig3);\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, 0.15 * w, 0.5 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, 0.40 * w, 0.5 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, 0.40 * w, h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, 0.15 * w, h).close());\r\n    var radius = .05;\r\n    var cpOffset = KAPPA * .05;\r\n    var centerx = .35;\r\n    var centery = .775;\r\n    var fig4 = new go.PathFigure((centerx - radius) * w, centery * h, true);\r\n    geo.add(fig4);\r\n    // Door handle\r\n    fig4.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h,\r\n        (centerx - cpOffset) * w, (centery - radius) * h));\r\n    fig4.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h,\r\n        (centerx + radius) * w, (centery - cpOffset) * h));\r\n    fig4.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery + radius) * h));\r\n    fig4.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h,\r\n        (centerx - radius) * w, (centery + cpOffset) * h).close());;\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"ControlCenter\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0.8 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.1 * w, 0.8 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.1 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.9 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.9 * w, 0.8 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.8 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, 0.1 * w, 0.8 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.9 * w, 0.8 * h).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Bluetooth\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0.75 * h, false);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0.75 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.25 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.75 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0.25 * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Bookmark\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, 0.6 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, 0.2 * w, 0.2 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.8 * w, 0.2 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, 0.2 * w, 0.4 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.8 * w, 0.4 * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Bookmark\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, 0.6 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, 0.2 * w, 0.2 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.8 * w, 0.2 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, 0.2 * w, 0.4 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.8 * w, 0.4 * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Globe\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0.5 * w, 0, false);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, 0, 0.5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, 0.5 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, w, 0.5 * h, 0.75 * w, 0, w, 0.25 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.5 * w, h, w, 0.75 * h, 0.75 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, 0.5 * h, 0.25 * w, h, 0, 0.75 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.5 * w, 0, 0, 0.25 * h, 0.25 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.5 * w, h, 0.15 * w, 0.25 * h, 0.15 * w, 0.75 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.5 * w, 0, 0.85 * w, 0.75 * h, 0.85 * w, 0.25 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, 0.1675 * w, 0.15 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.8325 * w, 0.15 * h, 0.35 * w, 0.3 * h, 0.65 * w, 0.3 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, 0.1675 * w, 0.85 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.8325 * w, 0.85 * h, 0.35 * w, 0.7 * h, 0.65 * w, 0.7 * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Wave\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0.25 * h, false);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.3 * w, 0.25 * h, 0.10 * w, 0, 0.2 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.7 * w, 0.25 * h, 0.425 * w, 0.5 * h, 0.575 * w, 0.5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, w, 0.25 * h, 0.8 * w, 0, 0.9 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.75 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, 0, 0.25 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0.75 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.3 * w, 0.75 * h, 0.10 * w, 0.5 * h, 0.2 * w, 0.5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.7 * w, 0.75 * h, 0.425 * w, h, 0.575 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, w, 0.75 * h, 0.8 * w, 0.5 * h, 0.9 * w, 0.5 * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Operator\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var radius = .3;\r\n    var cpOffset = KAPPA * .3;\r\n    var centerx = .5;\r\n    var centery = .7;\r\n    var fig = new go.PathFigure((centerx - radius) * w, centery * h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h,\r\n        (centerx - cpOffset) * w, (centery - radius) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h,\r\n        (centerx + radius) * w, (centery - cpOffset) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery + radius) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h,\r\n        (centerx - radius) * w, (centery + cpOffset) * h));\r\n    var fig2 = new go.PathFigure(0, 0.7 * h, false);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, w, 0.7 * h, 0, 0, w, 0));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"TripleFanBlades\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0.5 * w, 0, true);\r\n    geo.add(fig);\r\n\r\n    // Top blade\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.5 * w, 0.65 * h, 0.65 * w, 0.3 * h, 0.65 * w, 0.5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.5 * w, 0, 0.35 * w, 0.5 * h, 0.35 * w, 0.3 * h));\r\n    // Bottom left blade\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, 0.5 * w, 0.65 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, h, 0.3 * w, 0.6 * h, 0.1 * w, 0.8 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.5 * w, 0.65 * h, 0.2 * w, h, 0.35 * w, 0.95 * h));\r\n    // Bottom right blade\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, 0.5 * w, 0.65 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, w, h, 0.7 * w, 0.6 * h, 0.9 * w, 0.8 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.5 * w, 0.65 * h, 0.8 * w, h, 0.65 * w, 0.95 * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"CentrifugalPump\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w, 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.4 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, 0.5 * h, 0, 0.075 * h, 0, 0.5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.4 * w, h, 0, h, 0.4 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.8 * w, 0.4 * h, 0.8 * w, h, 0.85 * w, 0.6 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.4 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Battery\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0.1 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.1 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, 0.4 * w, 0.1 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.4 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.6 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.6 * w, 0.1 * h));\r\n    var fig2 = new go.PathFigure(0, 0.6 * h, false);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, 0, 0.4 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w, 0.4 * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Delete\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var radius = .5;\r\n    var cpOffset = KAPPA * .5;\r\n    var centerx = .5;\r\n    var centery = .5;\r\n    var fig = new go.PathFigure((centerx - radius) * w, centery * h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h,\r\n        (centerx - cpOffset) * w, (centery - radius) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h,\r\n        (centerx + radius) * w, (centery - cpOffset) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery + radius) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h,\r\n        (centerx - radius) * w, (centery + cpOffset) * h));\r\n    var fig2 = new go.PathFigure(0.15 * w, 0.5 * h, false);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0.85 * w, 0.5 * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Flag\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0.1 * h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, 0, 0.1 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.5 * w, 0.1 * h, 0.15 * w, 0, 0.35 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, w, 0.1 * h, 0.65 * w, 0.2 * h, 0.85 * w, 0.2 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.5 * w, 0.5 * h, 0.85 * w, 0.6 * h, 0.65 * w, 0.6 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, 0.5 * h, 0.35 * w, 0.4 * h, 0.15 * w, 0.4 * h).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Help\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var radius = .5;\r\n    var cpOffset = KAPPA * .5;\r\n    var centerx = .5;\r\n    var centery = .5;\r\n    var fig = new go.PathFigure((centerx - radius) * w, centery * h, false);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h,\r\n        (centerx - cpOffset) * w, (centery - radius) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h,\r\n        (centerx + radius) * w, (centery - cpOffset) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery + radius) * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h,\r\n        (centerx - radius) * w, (centery + cpOffset) * h).close());\r\n    radius = .05;\r\n    cpOffset = KAPPA * .05;\r\n    centerx = .5;\r\n    centery = .8;\r\n    var fig2 = new go.PathFigure((centerx - radius) * w, centery * h, false);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery - radius) * h, (centerx - radius) * w, (centery - cpOffset) * h,\r\n        (centerx - cpOffset) * w, (centery - radius) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx + radius) * w, centery * h, (centerx + cpOffset) * w, (centery - radius) * h,\r\n        (centerx + radius) * w, (centery - cpOffset) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, centerx * w, (centery + radius) * h, (centerx + radius) * w, (centery + cpOffset) * h,\r\n        (centerx + cpOffset) * w, (centery + radius) * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, (centerx - radius) * w, centery * h, (centerx - cpOffset) * w, (centery + radius) * h,\r\n        (centerx - radius) * w, (centery + cpOffset) * h).close());\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, 0.5 * w, 0.7 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, 0.5 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, 0.5 * w, 0.2 * h, 0.75 * w, 0.475 * h, 0.75 * w, 0.225 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, 0.3 * w, 0.35 * h, 0.4 * w, 0.2 * h, 0.3 * w, 0.25 * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Location\", function(shape, w, h) {\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(0.5 * w, h, true)\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.75 * w, 0.5 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, 0.5 * w, 0, .975 * w, 0.025 * h, 0.5 * w, 0))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, 0.25 * w, 0.5 * h, 0.5 * w, 0, 0.025 * w, 0.025 * h).close())\r\n            .add(new go.PathSegment(go.PathSegment.Move, 0.5 * w, 0.2 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Arc, 270, 360, 0.5 * w, 0.3 * h, 0.1 * w, 0.1 * h).close()));\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Lock\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0.5 * h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0.5 * h));\r\n    var fig2 = new go.PathFigure(0.2 * w, 0.5 * h, false);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, 0.2 * w, 0.5 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0.2 * w, 0.3 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, 0.8 * w, 0.3 * h, 0.25 * w, 0, 0.75 * w, 0));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0.8 * w, 0.5 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0.8 * w, 0.3 * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Unlocked\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0.5 * h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.5 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0.5 * h));\r\n    var fig2 = new go.PathFigure(0.2 * w, 0.5 * h, false);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Move, 0.2 * w, 0.5 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0.2 * w, 0.3 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Bezier, 0.8 * w, 0.3 * h, 0.25 * w, 0, 0.75 * w, 0));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, 0.8 * w, 0.35 * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Gear\", function(shape, w, h) {\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(0.9375 * w, 0.56246875 * h, true)\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.9375 * w, 0.4375 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.80621875 * w, 0.4375 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, 0.763 * w, 0.3316875 * h, 0.79840625 * w, 0.39915625 * h, 0.7834375 * w, 0.3635 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.8566875 * w, 0.23796875 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.76825 * w, 0.14959375 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.67596875 * w, 0.24184375 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, 0.5625 * w, 0.19378125 * h, 0.64228125 * w, 0.2188125 * h, 0.603875 * w, 0.2021875 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.5625 * w, 0.0625 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.4375 * w, 0.0625 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.4375 * w, 0.19378125 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, 0.32775 * w, 0.239375 * h, 0.39759375 * w, 0.20190625 * h, 0.36053125 * w, 0.2176875 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.2379375 * w, 0.14959375 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.14953125 * w, 0.2379375 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.23934375 * w, 0.3278125 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, 0.19378125 * w, 0.4375 * h, 0.21765625 * w, 0.36059375 * h, 0.201875 * w, 0.397625 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.0625 * w, 0.4375 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.0625 * w, 0.5625 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.1938125 * w, 0.5625 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, 0.241875 * w, 0.67596875 * h, 0.20221875 * w, 0.603875 * h, 0.21884375 * w, 0.64228125 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.1495625 * w, 0.76825 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.238 * w, 0.8566875 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.3316875 * w, 0.76296875 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, 0.43753125 * w, 0.80621875 * h, 0.36353125 * w, 0.78340625 * h, 0.3991875 * w, 0.79840625 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.43753125 * w, 0.9375 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.5625 * w, 0.9375 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.5625 * w, 0.80621875 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, 0.67225 * w, 0.760625 * h, 0.602375 * w, 0.79809375 * h, 0.63946875 * w, 0.78234375 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.76828125 * w, 0.8566875 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.85671875 * w, 0.76825 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.76065625 * w, 0.67221875 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Bezier, 0.80621875 * w, 0.56246875 * h, 0.78234375 * w, 0.63940625 * h, 0.798125 * w, 0.602375 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.9375 * w, 0.56246875 * h).close())\r\n\r\n            .add(new go.PathSegment(go.PathSegment.Move, 0.5 * w, 0.6 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Arc, 90, 360, 0.5 * w, 0.5 * h, 0.1 * w, 0.1 * h).close()));\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Hand\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0.5 * h, false);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.1 * w, 0.3 * h, 0, 0.375 * h, 0.05 * w, 0.325 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.45 * w, 0.075 * h, 0.3 * w, 0.225 * h, 0.4 * w, 0.175 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.525 * w, 0.075 * h, 0.46 * w, 0.05 * h, 0.525 * w, 0.05 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.3 * w, 0.4 * h, 0.525 * w, 0.275 * h, 0.475 * w, 0.325 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.9 * w, 0.4 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.9 * w, 0.55 * h, w, 0.4 * h, w, 0.55 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.425 * w, 0.55 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, 0.6 * w, 0.55 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.6 * w, 0.7 * h, 0.675 * w, 0.55 * h, 0.675 * w, 0.7 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.4 * w, 0.7 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, 0.575 * w, 0.7 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.575 * w, 0.85 * h, 0.65 * w, 0.7 * h, 0.65 * w, 0.85 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.4 * w, 0.85 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, 0.525 * w, 0.85 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.535 * w, h, 0.61 * w, 0.85 * h, 0.61 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, 0.9 * h, 0.435 * w, h, 0, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, 0.5 * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Map\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0.2 * h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.25 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, 0.2 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.75 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, 0.2 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.75 * w, 0.8 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.25 * w, 0.8 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, 0.25 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.25 * w, 0.8 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, 0.5 * w, 0.2 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, 0.75 * w, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.75 * w, 0.8 * h));\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Eject\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, h, true);\r\n    geo.add(fig);\r\n\r\n    // bottam rectangle section\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h * .7));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h * .7).close());\r\n    var fig2 = new go.PathFigure(0, (h * .6), true);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w, (.6 * h)));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .5 * w, 0).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Pencil\", function(shape, w, h) {\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(0, 0, true)\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.2 * w, 0.1 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, 0.9 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.9 * w, h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.1 * w, 0.2 * h).close()));\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Building\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w * 1, h * 1, false);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h * 1)); // bottom part\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h * .85));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .046 * w, h * .85));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .046 * w, h * .45));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h * .45));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h * .30));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .046 * w, h * .30));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .5 * w, h * 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, (1 - .046) * w, h * .30));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h * .30));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h * .45));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, (1 - .046) * w, h * .45));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, (1 - .046) * w, h * .85));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h * .85).close());\r\n    var fig2 = new go.PathFigure(.126 * w, .85 * h, false); // is filled in our not\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .126 * w, .45 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .322 * w, .45 * h));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, .322 * w, .85 * h).close());\r\n    var fig3 = new go.PathFigure(.402 * w, .85 * h, false); // is filled in our not\r\n    geo.add(fig3);\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, .402 * w, .45 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, .598 * w, .45 * h));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, .598 * w, .85 * h).close());\r\n    var fig4 = new go.PathFigure(.678 * w, .85 * h, false); // is filled in our not\r\n    geo.add(fig4);\r\n    fig4.add(new go.PathSegment(go.PathSegment.Line, .678 * w, .45 * h));\r\n    fig4.add(new go.PathSegment(go.PathSegment.Line, .874 * w, .45 * h));\r\n    fig4.add(new go.PathSegment(go.PathSegment.Line, .874 * w, .85 * h).close());\r\n    // the top inner triangle\r\n    var fig5 = new go.PathFigure(.5 * w, .1 * h, false); // is filled in our not\r\n    geo.add(fig5);\r\n    fig5.add(new go.PathSegment(go.PathSegment.Line, (.046 + .15) * w, .30 * h));\r\n    fig5.add(new go.PathSegment(go.PathSegment.Line, (1 - (.046 + .15)) * w, .30 * h).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Staircase\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, h * 1, true);\r\n    geo.add(fig);\r\n\r\n    // Bottom part\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .20, h * 1)); // bottom left part\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .20, h * .80));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .40, h * .80));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .40, h * .60));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .60, h * .60));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .60, h * .40));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .80, h * .40));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .80, h * .20));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * .20));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * .15));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .75, h * .15));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .75, h * .35));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .55, h * .35));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .55, h * .55));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .35, h * .55));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .35, h * .75));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .15, h * .75));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .15, h * .95));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h * .95).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"5Bars\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, h * 1, true); // bottom left\r\n    geo.add(fig);\r\n\r\n    // Width of each bar is .184\r\n    // space in between each bar is .2\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .184, h * 1)); // bottom left part\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .184, h * (1 - .184)).close());\r\n    var fig3 = new go.PathFigure(w * .204, h, true); // is filled in our not\r\n    geo.add(fig3);\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, w * .204, h * (1 - .184)));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, w * .388, h * (1 - (.184 * 2))));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, w * .388, h * 1).close());\r\n    var fig4 = new go.PathFigure(w * .408, h, true); // is filled in our not\r\n    geo.add(fig4);\r\n    fig4.add(new go.PathSegment(go.PathSegment.Line, w * .408, h * (1 - (.184 * 2))));\r\n    fig4.add(new go.PathSegment(go.PathSegment.Line, w * .592, h * (1 - (.184 * 3))));\r\n    fig4.add(new go.PathSegment(go.PathSegment.Line, w * .592, h * 1).close());\r\n    var fig5 = new go.PathFigure(w * .612, h, true); // is filled in our not\r\n    geo.add(fig5);\r\n    fig5.add(new go.PathSegment(go.PathSegment.Line, w * .612, h * (1 - (.184 * 3))));\r\n    fig5.add(new go.PathSegment(go.PathSegment.Line, w * .796, h * (1 - (.184 * 4))));\r\n    fig5.add(new go.PathSegment(go.PathSegment.Line, w * .796, h * 1).close());\r\n    var fig6 = new go.PathFigure(w * .816, h, true); // is filled in our not\r\n    geo.add(fig6);\r\n    fig6.add(new go.PathSegment(go.PathSegment.Line, w * .816, h * (1 - (.184 * 4))));\r\n    fig6.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * (1 - (.184 * 5))));\r\n    fig6.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * 1).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"PC\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0, true); // top right\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h * 1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .3, h * 1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .3, 0).close());\r\n    // Drive looking rectangle 1\r\n    var fig2 = new go.PathFigure(w * .055, .07 * h, true); // is filled in our not\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .245, h * .07));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .245, h * .1));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .055, h * .1).close());\r\n    // Drive looking rectangle 2\r\n    var fig3 = new go.PathFigure(w * .055, .13 * h, true); // is filled in our not\r\n    geo.add(fig3);\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, w * .245, h * .13));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, w * .245, h * .16));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, w * .055, h * .16).close());\r\n    // Drive/cd rom looking rectangle 3\r\n    var fig4 = new go.PathFigure(w * .055, .18 * h, true); // is filled in our not\r\n    geo.add(fig4);\r\n    fig4.add(new go.PathSegment(go.PathSegment.Line, w * .245, h * .18));\r\n    fig4.add(new go.PathSegment(go.PathSegment.Line, w * .245, h * .21));\r\n    fig4.add(new go.PathSegment(go.PathSegment.Line, w * .055, h * .21).close());\r\n    var fig5 = new go.PathFigure(w * 1, 0, true); // is filled in our not\r\n    geo.add(fig5);\r\n    fig5.add(new go.PathSegment(go.PathSegment.Line, w * .4, 0));\r\n    fig5.add(new go.PathSegment(go.PathSegment.Line, w * .4, h * .65));\r\n    fig5.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * .65).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Plane\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0.55 * w, h, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, 0.6 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.4 * w, 0.7 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, .1 * w, 0.475 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.35 * w, 0.525 * h, 0, 0.4 * h, 0.225 * w, 0.45 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.4 * w, 0.475 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.15 * w, 0.35 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.2 * w, 0.325 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.6 * w, 0.325 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.85 * w, 0.1 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0.9 * w, 0.2 * h, 0.975 * w, 0, w, .08 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.7 * w, 0.45 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.6 * w, 0.95 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0.55 * w, h).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Key\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w * 1, h * .5, true);\r\n    geo.add(fig);\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .90, .40 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .50, .40 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .50, .35 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .45, .35 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .30, .20 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .15, .20 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, .35 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, .65 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .15, .80 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .30, .80 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .45, .65 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .50, .65 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .50, .6 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .60, .6 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .65, .55 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .70, .6 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .75, .55 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .80, .6 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .85, .575 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .9, 0.60 * h).close());\r\n    fig.add(new go.PathSegment(go.PathSegment.Move, 0.17 * w, 0.425 * h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Arc, 270, 360, 0.17 * w, 0.5 * h, 0.075 * w, 0.075 * h).close());\r\n    return geo;\r\n});\r\n\r\n// movie like logo\r\ngo.Shape.defineFigureGenerator(\"FilmTape\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(0, 0, false);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Arc, 270, 180, w * 0, w * 0.3, w * 0.055)); // left semi-circle\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, h * 1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .08, h * 1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .08, h * .95));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 1), h * .95));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 1), h * 1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 2), h * 1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 2), h * .95));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 3), h * .95));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 3), h * 1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 4), h * 1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 4), h * .95));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 5), h * .95));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 5), h * 1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 6), h * 1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 6), h * .95));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 7), h * .95));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 7), h * 1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 8), h * 1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 8), h * .95));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 9), h * .95));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 9), h * 1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 10), h * 1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 10), h * .95));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 11), h * .95));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 11), h * 1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 12), h * 1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 12), h * .95));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 13), h * .95));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 13), h * 1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 14), h * 1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 14), h * .95));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 15), h * .95));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (.08 + .056 * 15), h * 1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * 1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * 1));\r\n    var fig2 = new go.PathFigure(0, 0, false); // is filled in our not\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * 0));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Arc, 270, -180, w * 1, w * 0.3, w * 0.055)); // right semi circle\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * 1));\r\n    // Each of the little square boxes on the tape\r\n    var fig3 = new go.PathFigure(w * .11, h * .1, false); // is filled in our not\r\n    geo.add(fig3);\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, w * (.11 + (.24133333 * 1) + (.028 * 0)), h * .1));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, w * (.11 + (.24133333 * 1) + (.028 * 0)), h * .8));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, w * .11, h * .8).close());\r\n    var fig4 = new go.PathFigure(w * (.11 + (.24133333 * 1) + (.028 * 1)), h * .1, false); // is filled in our not\r\n    geo.add(fig4);\r\n    fig4.add(new go.PathSegment(go.PathSegment.Line, w * (.11 + (.24133333 * 2) + (.028 * 1)), h * .1));\r\n    fig4.add(new go.PathSegment(go.PathSegment.Line, w * (.11 + (.24133333 * 2) + (.028 * 1)), h * .8));\r\n    fig4.add(new go.PathSegment(go.PathSegment.Line, w * (.11 + (.24133333 * 1) + (.028 * 1)), h * .8).close());\r\n    var fig5 = new go.PathFigure(w * (.11 + (.24133333 * 2) + (.028 * 2)), h * .1, false); // is filled in our not\r\n    geo.add(fig5);\r\n    fig5.add(new go.PathSegment(go.PathSegment.Line, w * (.11 + (.24133333 * 3) + (.028 * 2)), h * .1));\r\n    fig5.add(new go.PathSegment(go.PathSegment.Line, w * (.11 + (.24133333 * 3) + (.028 * 2)), h * .8));\r\n    fig5.add(new go.PathSegment(go.PathSegment.Line, w * (.11 + (.24133333 * 2) + (.028 * 2)), h * .8).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"FloppyDisk\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var roundValue = 8;\r\n    var cpOffset = roundValue * KAPPA;\r\n    var fig = new go.PathFigure(roundValue, 0, false);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .86, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * .14));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h - roundValue));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, w - roundValue, h, w, h - cpOffset, w - cpOffset, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, roundValue, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, h - roundValue, cpOffset, h, 0, h - cpOffset));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, roundValue));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, roundValue, 0, 0, cpOffset, cpOffset, 0).close());\r\n    // interior slightly  rectangle\r\n    var fig2 = new go.PathFigure(w * .83, 0, false);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .83, h * .3));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .17, h * .3));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .17, h * 0).close());\r\n    var fig3 = new go.PathFigure(w * .83, h * 1, false);\r\n    geo.add(fig3);\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, w * .83, h * .5));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, w * .17, h * .5));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, w * .17, h * 1).close());\r\n    var fig4 = new go.PathFigure(w * .78, h * .05, false);\r\n    geo.add(fig4);\r\n    fig4.add(new go.PathSegment(go.PathSegment.Line, w * .66, h * .05));\r\n    fig4.add(new go.PathSegment(go.PathSegment.Line, w * .66, h * .25));\r\n    fig4.add(new go.PathSegment(go.PathSegment.Line, w * .78, h * .25).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"SpeechBubble\", function(shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN;\r\n    if (isNaN(param1) || param1 < 0) param1 = 15; // default corner\r\n    param1 = Math.min(param1, w / 3);\r\n    param1 = Math.min(param1, h / 3);\r\n\r\n    var cpOffset = param1 * KAPPA;\r\n    var bubbleH = h * .8; // leave some room at bottom for pointer\r\n\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(param1, 0, true);\r\n    geo.add(fig);\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w - param1, 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, w, param1, w - cpOffset, 0, w, cpOffset));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, bubbleH - param1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, w - param1, bubbleH, w, bubbleH - cpOffset, w - cpOffset, bubbleH));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .70, bubbleH));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .70, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .55, bubbleH));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, param1, bubbleH));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, bubbleH - param1, cpOffset, bubbleH, 0, bubbleH - cpOffset));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, 0, param1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, param1, 0, 0, cpOffset, cpOffset, 0).close());\r\n    if (cpOffset > 1) {\r\n        geo.spot1 = new go.Spot(0, 0, cpOffset, cpOffset);\r\n        geo.spot2 = new go.Spot(1, .8, -cpOffset, -cpOffset);\r\n    } else {\r\n        geo.spot1 = go.Spot.TopLeft;\r\n        geo.spot2 = new go.Spot(1, .8);\r\n    }\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Repeat\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w * 0, h * .45, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .25, h * 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .50, h * .45));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .30, h * .45));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .30, h * .90));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .60, h * .90));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .65, h * 1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .20, h * 1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .20, h * .45).close());\r\n    var fig2 = new go.PathFigure(w * 1, h * .55, true); // is filled in our not\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .75, h * 1));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .50, h * .55));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .70, h * .55));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .70, h * .10));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .40, h * .10));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .35, h * 0));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .80, h * 0));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .80, h * .55).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Windows\", function(shape, w, h) {\r\n    return new go.Geometry()\r\n        .add(new go.PathFigure(0, 0, true)\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, 0))\r\n            .add(new go.PathSegment(go.PathSegment.Line, w, h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0, h).close())\r\n            .add(new go.PathSegment(go.PathSegment.Move, 0.4 * w, 0.4 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.4 * w, 0.8 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.9 * w, 0.8 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.9 * w, 0.4 * h).close())\r\n            .add(new go.PathSegment(go.PathSegment.Move, 0.2 * w, 0.1 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.2 * w, 0.6 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.7 * w, 0.6 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.7 * w, 0.1 * h).close())\r\n            .add(new go.PathSegment(go.PathSegment.Move, 0.1 * w, 0.6 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.1 * w, 0.9 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, 0.9 * h))\r\n            .add(new go.PathSegment(go.PathSegment.Line, 0.5 * w, 0.6 * h).close()));\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Terminal\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w * 0, h * .10, false);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * .10));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * .90));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * 0, h * .90).close());\r\n    var fig2 = new go.PathFigure(w * .10, h * .20, true); // is filled in our not\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .10, h * .25));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .22, h * .285)); // midpoint\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .10, h * .32));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .10, h * .37));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .275, h * .32));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .275, h * .25).close());\r\n    var fig3 = new go.PathFigure(w * .28, h * .37, true); // is filled in our not\r\n    geo.add(fig3);\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, w * .45, h * .37));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, w * .45, h * .41));\r\n    fig3.add(new go.PathSegment(go.PathSegment.Line, w * .28, h * .41).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Beaker\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var param1 = 15;\r\n    var cpOffset = param1 * KAPPA;\r\n    var fig = new go.PathFigure(w * .62, h * .475, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w, h - param1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, w - param1, h, w, h - cpOffset, w - cpOffset, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, param1, h));\r\n    fig.add(new go.PathSegment(go.PathSegment.Bezier, 0, h - param1, cpOffset, h, 0, h - cpOffset));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .38, h * .475));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .38, h * .03));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .36, h * 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .64, h * 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .62, h * .03).close());\r\n    if (cpOffset > 1) {\r\n        geo.spot1 = new go.Spot(0, 0, cpOffset, cpOffset);\r\n        geo.spot2 = new go.Spot(1, 1, -cpOffset, -cpOffset);\r\n    } else {\r\n        geo.spot1 = go.Spot.TopLeft;\r\n        geo.spot2 = go.Spot.BottomRight;\r\n    }\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Download\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w * 0, h * 1, true);\r\n    geo.add(fig);\r\n\r\n    var third = .1 / .3; // just to keep values consistent\r\n    // outer frame\r\n    // starts bottom left\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * 1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * (1 - third)));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .8, h * 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .66, h * 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .66, h * .055));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .755, h * .055));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .93, h * (1 - third)));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .64, h * (1 - third)));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .61, h * .75));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .5, h * .75));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .39, h * .75));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .36, h * (1 - third)));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .07, h * (1 - third)));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (1 - .755), h * (.055)));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (1 - .66), h * (.055)));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (1 - .66), h * (0)));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (1 - .8), h * (0)));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * 0, h * (1 - third)).close());\r\n    // arrow pointing down\r\n    var fig2 = new go.PathFigure(w * .40, h * 0, true);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .40, h * .44));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .26, h * .44));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .5, h * .66));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * (1 - .26), h * .44));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .60, h * .44));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .60, h * 0).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Bin\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w * 0, h * 1, true);\r\n    geo.add(fig);\r\n\r\n    var third = .1 / .3; // just to keep values consistent\r\n    // outer frame\r\n    // starts bottom left\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * 1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * (1 - third)));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .8, h * 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .66, h * 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .66, h * .055));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .755, h * .055));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .93, h * (1 - third)));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .64, h * (1 - third)));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .61, h * .75));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .5, h * .75));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .39, h * .75));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .36, h * (1 - third)));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .07, h * (1 - third)));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (1 - .755), h * (.055)));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (1 - .66), h * (.055)));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (1 - .66), h * (0)));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (1 - .8), h * (0)));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * 0, h * (1 - third)).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Upload\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w * 0, h * 1, true);\r\n    geo.add(fig);\r\n\r\n    var third = .1 / .3; // just to keep values consistent\r\n    // outer frame\r\n    // starts bottom left\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * 1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * (1 - third)));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .8, h * 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .66, h * 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .66, h * .055));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .755, h * .055));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .93, h * (1 - third)));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .64, h * (1 - third)));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .61, h * .75));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .5, h * .75));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .39, h * .75));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .36, h * (1 - third)));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .07, h * (1 - third)));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (1 - .755), h * (.055)));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (1 - .66), h * (.055)));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (1 - .66), h * (0)));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * (1 - .8), h * (0)));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * 0, h * (1 - third)).close());\r\n    var fig2 = new go.PathFigure(w * .5, h * 0, true);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .26, h * .25));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .40, h * .25));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .40, h * .63));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .60, h * .63));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .60, h * .25));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .74, h * .25).close());\r\n\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"EmptyDrink\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w * .15, h * 0, false);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .85, h * 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .70, h * 1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .30, h * 1).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Drink\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w * .15, h * 0, false);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .85, h * 0));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .70, h * 1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .30, h * 1).close());\r\n    var fig2 = new go.PathFigure(w * .235, h * .28, true);\r\n    geo.add(fig2);\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .765, h * .28));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .655, h * .97));\r\n    fig2.add(new go.PathSegment(go.PathSegment.Line, w * .345, h * .97).close());\r\n\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"4Arrows\", function(shape, w, h) {\r\n    let geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w * .5, h * 0, true);\r\n    geo.add(fig);\r\n\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .65, h * .25));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .55, h * .25));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .55, h * .45));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .75, h * .45));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .75, h * .35));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * 1, h * .5));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .75, h * .65));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .75, h * .55));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .55, h * .55));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .55, h * .75));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .65, h * .75));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .5, h * 1));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .35, h * .75));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .45, h * .75));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .45, h * .55));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .25, h * .55));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .25, h * .65));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * 0, h * .5));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .25, h * .35));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .25, h * .45));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .45, h * .45));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .45, h * .25));\r\n    fig.add(new go.PathSegment(go.PathSegment.Line, w * .35, h * .25).close());\r\n    return geo;\r\n});\r\n\r\ngo.Shape.defineFigureGenerator(\"Connector\", \"Ellipse\");\r\ngo.Shape.defineFigureGenerator(\"Alternative\", \"TriangleUp\");\r\ngo.Shape.defineFigureGenerator(\"Merge\", \"TriangleUp\");\r\ngo.Shape.defineFigureGenerator(\"Decision\", \"Diamond\");\r\ngo.Shape.defineFigureGenerator(\"DataTransmissions\", \"Hexagon\");\r\ngo.Shape.defineFigureGenerator(\"Gate\", \"Crescent\");\r\ngo.Shape.defineFigureGenerator(\"Delay\", \"HalfEllipse\");\r\ngo.Shape.defineFigureGenerator(\"Input\", \"Parallelogram1\");\r\ngo.Shape.defineFigureGenerator(\"ManualLoop\", \"ManualOperation\");\r\ngo.Shape.defineFigureGenerator(\"ISOProcess\", \"Chevron\");\r\ngo.Shape.defineFigureGenerator(\"MessageToUser\", \"SquareArrow\");\r\ngo.Shape.defineFigureGenerator(\"MagneticData\", \"Cylinder1\");\r\ngo.Shape.defineFigureGenerator(\"DirectData\", \"Cylinder4\");\r\ngo.Shape.defineFigureGenerator(\"StoredData\", \"DataStorage\");\r\ngo.Shape.defineFigureGenerator(\"SequentialData\", \"MagneticTape\");\r\ngo.Shape.defineFigureGenerator(\"Subroutine\", \"Procedure\");","import go from 'gojs';\r\nconst $ = go.GraphObject.make;\r\n\r\nfunction linkTemplate() {\r\n    let template = $(go.Link, // the whole link panel\r\n        {\r\n            routing: go.Link.AvoidsNodes,\r\n            curve: go.Link.JumpOver,\r\n            corner: 5,\r\n            toShortLength: 4,\r\n            relinkableFrom: true,\r\n             relinkableTo: true,\r\n            reshapable: true,\r\n            resegmentable: true,\r\n            selectionAdorned: false\r\n        },\r\n        new go.Binding(\"points\").makeTwoWay(),\r\n        $(go.Shape, // the highlight shape, normally transparent\r\n            {\r\n                isPanelMain: true,\r\n                strokeWidth: 8,\r\n                stroke: \"transparent\",\r\n                name: \"HIGHLIGHT\"\r\n            }),\r\n        $(go.Shape, // the link path shape\r\n            {\r\n                isPanelMain: true,\r\n                stroke: \"white\",\r\n                strokeWidth: 2\r\n            },\r\n            new go.Binding(\"stroke\", \"isSelected\", function (sel) {\r\n                return sel ? \"dodgerblue\" : \"white\";\r\n            }).ofObject()),\r\n        $(go.Shape, // the arrowhead\r\n            {\r\n                toArrow: \"standard\",\r\n                strokeWidth: 0,\r\n                fill: \"white\"\r\n            }),\r\n        $(go.Panel, \"Auto\", // the link label, normally not visible\r\n            {\r\n                visible: false,\r\n                name: \"LABEL\",\r\n                segmentIndex: 2,\r\n                segmentFraction: 0.5\r\n            },\r\n            new go.Binding(\"visible\", \"visible\").makeTwoWay(),\r\n            $(go.Shape, \"RoundedRectangle\", // the label shape\r\n                {\r\n                    fill: \"#F8F8F8\",\r\n                    strokeWidth: 0\r\n                }),\r\n            $(go.TextBlock, \"Yes\", // the label\r\n                {\r\n                    textAlign: \"center\",\r\n                    font: \"10pt helvetica, arial, sans-serif\",\r\n                    stroke: \"#333333\",\r\n                    editable: true\r\n                },\r\n                new go.Binding(\"text\").makeTwoWay())\r\n        )\r\n    );\r\n    return template;\r\n}\r\n\r\nfunction makePort(name, align, spot, output, input) {\r\n    var horizontal = align.equals(go.Spot.Top) || align.equals(go.Spot.Bottom);\r\n    // the port is basically just a transparent rectangle that stretches along the side of the node,\r\n    // and becomes colored when the mouse passes over it\r\n    return $(go.Shape, {\r\n        fill: \"transparent\", // changed to a color in the mouseEnter event handler\r\n        strokeWidth: 0, // no stroke\r\n        width: horizontal ? NaN : 8, // if not stretching horizontally, just 8 wide\r\n        height: !horizontal ? NaN : 8, // if not stretching vertically, just 8 tall\r\n        alignment: align, // align the port on the main Shape\r\n        stretch: (horizontal ? go.GraphObject.Horizontal : go.GraphObject.Vertical),\r\n        portId: name, // declare this object to be a \"port\"\r\n        fromSpot: spot, // declare where links may connect at this port\r\n        fromLinkable: output, // declare whether the user may draw links from here\r\n        toSpot: spot, // declare where links may connect at this port\r\n        toLinkable: input, // declare whether the user may draw links to here\r\n        cursor: \"pointer\", // show a different cursor to indicate potential link point\r\n\r\n        mouseEnter: function (e, port) { // the PORT argument will be this Shape\r\n            if (!e.diagram.isReadOnly) port.fill = \"#00abe469\";\r\n        },\r\n        mouseLeave: function (e, port) {\r\n            port.fill = \"transparent\";\r\n        }\r\n    });\r\n}\r\n\r\n\r\nfunction showLinkLabel(e) {\r\n    var label = e.subject.findObject(\"LABEL\");\r\n    if (label !== null) label.visible = (e.subject.fromNode.data.category === \"Conditional\");\r\n}\r\n\r\nfunction nodeStyle() {\r\n    return [\r\n        // The Node.location comes from the \"loc\" property of the node data,\r\n        // converted by the Point.parse static method.\r\n        // If the Node.location is changed, it updates the \"loc\" property of the node data,\r\n        // converting back using the Point.stringify static method.\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\r\n            // the Node.location is at the center of each node\r\n            locationSpot: go.Spot.Center\r\n        }\r\n    ];\r\n}\r\n\r\nfunction textStyle() {\r\n    return {\r\n        font: \"bold 10pt Helvetica, Arial, sans-serif\",\r\n        margin: 2,\r\n        stroke: \"whitesmoke\"\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    linkTemplate,\r\n    makePort,\r\n    showLinkLabel,\r\n    nodeStyle,\r\n    textStyle\r\n}","function modelsData() {\r\n    return [ // specify the contents of the Palette\r\n        {\r\n            category: \"Start\",\r\n            text: \"Start\",\r\n            color: '#DC3C00',\r\n            fig: \"Circle\"\r\n        },\r\n        {\r\n            category: \"Var\",\r\n            text: \"INT\",\r\n            color: 'blue',\r\n            fig: \"square\",\r\n            height: \"100\"\r\n        },\r\n        {\r\n            category: \"Var\",\r\n            text: \"CHAR\",\r\n            color: 'green',\r\n            fig: \"square\",\r\n            height: \"100\"\r\n        },\r\n        {\r\n            category: \"Var\",\r\n            text: \"FLOAT\",\r\n            color: 'yellow',\r\n            fig: \"square\",\r\n            height: \"100\"\r\n        },\r\n        {\r\n            category: \"Var\",\r\n            text: \"STRING\",\r\n            color: 'red',\r\n            fig: \"square\",\r\n            height: \"100\"\r\n        },\r\n        {\r\n            category: \"Var\",\r\n            text: \"VECTOR\",\r\n            color: 'gray',\r\n            fig: \"square\",\r\n            height: \"100\"\r\n        },\r\n        {\r\n            category: \"If\",\r\n            text: \"IF\",\r\n            color: 'gray',\r\n            fig: \"RightTriangle\"\r\n        }, {\r\n            key: 'sw',\r\n            category: \"switch\",\r\n            text: \"SWITCH\",\r\n            color: 'gray',\r\n            fig: \"octagon\"\r\n        },\r\n        /*{\r\n            key: 'en',\r\n            category: \"switch\",\r\n            text: \"SWITCH\",\r\n            color: 'gray',\r\n            group: 'sw'\r\n        },\r\n        {\r\n            key: 'case',\r\n            category: \"case\",\r\n            text: \"Case\",\r\n            color: 'red',\r\n            group: 'sw'\r\n        },\r\n        {\r\n            key: 'sw',\r\n            text: \"SWITCH\",\r\n            color: 'gray',\r\n            size: \"180 300\",\r\n            isGroup: true\r\n        },\r\n        {\r\n            key: 'stp',\r\n            text: \"Instrucción\",\r\n            group: 'sw'\r\n        },*/\r\n        {\r\n            category: \"for\",\r\n            color: 'red',\r\n            text: \"For\",\r\n            cond: \"condicion\",\r\n            var: \"variable\",\r\n            act: \"accion\",\r\n            fig: \"start\"\r\n        },\r\n        {\r\n            text: \"Instrucción\",\r\n            fig: \"Rectangle\"\r\n        }, {\r\n            category: \"Conditional\",\r\n            text: \"If-Else\",\r\n            fig: \"Diamond\"\r\n        }, {\r\n            category: \"End\",\r\n            text: \"End\",\r\n            fig: \"Circle\"\r\n        }, {\r\n            category: \"Comment\",\r\n            text: \"Comment\",\r\n            fig: \"File\"\r\n        }\r\n    ]\r\n}\r\n\r\nfunction modelsLinks() {\r\n    return [\r\n        { from: \"en\", to: \"case\" },\r\n        { from: \"case\", to: \"stp\" }\r\n    ]\r\n}\r\n\r\nmodule.exports = { modelsData, modelsLinks }","import go from 'gojs'\r\nimport functionDfd from './functionsDfd'\r\n\r\nconst $ = go.GraphObject.make;\r\n\r\n// the default category\r\nfunction defaultGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(),\r\n        // the main object is a Panel that surrounds a TextBlock with a rectangular Shape\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"Rectangle\",\r\n                new go.Binding(\"fill\", \"color\"),\r\n                new go.Binding(\"figure\", \"fig\"),\r\n                {\r\n                    fill: \"#00A9C9\",\r\n                    strokeWidth: 0,\r\n                    portId: \"\",\r\n                    fromLinkable: true,\r\n                    minSize: new go.Size(60, 60),\r\n                    maxSize: new go.Size(100, 100),\r\n                    toLinkable: true\r\n                },\r\n            ),\r\n            $(go.TextBlock, functionDfd.textStyle(), {\r\n                editable: true,\r\n                textAlign: \"center\",\r\n            }, new go.Binding(\"text\").makeTwoWay())\r\n        ),\r\n        // four named ports, one on each side:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.TopSide, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.LeftSide, true, true),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.RightSide, true, true),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.BottomSide, true, false)\r\n    )\r\n}\r\n\r\nfunction conditionalGraph() {\r\n    /* myDiagram.model.addNodeData({\r\n         text: \"Instrucción\",\r\n         fig: \"Rectangle\"\r\n     });*/\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(), { locationSpot: go.Spot.Center },\r\n        // the main object is a Panel that surrounds a TextBlock with a rectangular Shape\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"Diamond\",\r\n                {\r\n                    fill: \"#00A9C9\",\r\n                    strokeWidth: 0,\r\n                    portId: \"\",\r\n                    fromLinkable: true,\r\n                    toLinkable: true\r\n                }),\r\n            $(go.TextBlock, functionDfd.textStyle(), {\r\n                margin: 8,\r\n                editable: true\r\n            },\r\n                new go.Binding(\"text\").makeTwoWay())\r\n        ),\r\n     \r\n        // four named ports, one on each side:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, true),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, true),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction startGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"Circle\",\r\n                new go.Binding(\"fill\", \"color\"),\r\n                {\r\n                    minSize: new go.Size(40, 40),\r\n                    strokeWidth: 0,\r\n                    portId: \"\",\r\n                    fromLinkable: true,\r\n                    toLinkable: true\r\n                }),\r\n            $(go.TextBlock, \"Start\", functionDfd.textStyle(),\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\n\r\nfunction varGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"square\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                minSize: new go.Size(40, 40),\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true,\r\n                toLinkable: true\r\n            }),\r\n            $(go.TextBlock, functionDfd.textStyle(), { editable: true },\r\n                new go.Binding(\"text\").makeTwoWay())\r\n        ),\r\n        // three named ports, one on each side except the top, all output only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.TopSide, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.LeftSide, true, true),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.RightSide, true, true),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.BottomSide, true, false)\r\n    )\r\n}\r\n\r\nfunction ifGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"RightTriangle\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                minSize: new go.Size(80, 80),\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true,\r\n                toLinkable: true\r\n            }),\r\n            $(go.TextBlock, functionDfd.textStyle(), { editable: true },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        // three named ports, one on each side except the top, all output only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction caseGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(),\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"RoundedRectangle\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                fromSpot: go.Spot.Bottom,\r\n                toSpot: go.Spot.Top,\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true, toLinkable: true\r\n            }),\r\n            $(go.TextBlock, functionDfd.textStyle(), { editable: true },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        // three named ports, one on each side except the top, all output only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction switchGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"octagon\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                toSpot: go.Spot.Bottom,\r\n                minSize: new go.Size(80, 80),\r\n                strokeWidth: 0\r\n            }),\r\n            $(go.TextBlock, functionDfd.textStyle(), { editable: true },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction forGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(),\r\n        $(go.Shape, \"start\",\r\n            {\r\n                fill: \"red\",\r\n                minSize: new go.Size(80, 30),\r\n                maxSize: new go.Size(190, 70),\r\n                strokeWidth: 0\r\n            }),\r\n        $(go.TextBlock, functionDfd.textStyle(),\r\n            {\r\n                text: \"variable:\", stroke: \"black\",\r\n                alignment: new go.Spot(0.25, 0.2)\r\n            }\r\n        ),\r\n        $(go.TextBlock,\r\n            {\r\n                stroke: \"black\",\r\n                editable: true,\r\n                alignment: new go.Spot(0.6, 0.2)\r\n            },\r\n            new go.Binding(\"text\", \"var\").makeTwoWay()\r\n        ),\r\n        $(go.TextBlock, functionDfd.textStyle(),\r\n            {\r\n                text: \"Condicion:\",\r\n                stroke: \"black\",\r\n                alignment: new go.Spot(0.25, 0.5)\r\n            }\r\n        ),\r\n        $(go.TextBlock,\r\n            {\r\n                text: \"Condicion\",\r\n                stroke: \"black\",\r\n                editable: true,\r\n                alignment: new go.Spot(0.6, 0.5)\r\n            },\r\n            new go.Binding(\"text\", \"cond\").makeTwoWay()\r\n        ),\r\n        $(go.TextBlock, functionDfd.textStyle(), { text: \"Accion:\", stroke: \"black\", alignment: new go.Spot(0.25, 0.8) }),\r\n        $(go.TextBlock,\r\n            {\r\n                text: \"Accion\",\r\n                stroke: \"black\",\r\n                editable: true,\r\n                alignment: new go.Spot(0.6, 0.8)\r\n            },\r\n            new go.Binding(\"text\", \"act\").makeTwoWay()\r\n        ),\r\n\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction endGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"Circle\", {\r\n                minSize: new go.Size(40, 40),\r\n                fill: \"#DC3C00\",\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true,\r\n                toLinkable: true\r\n            }),\r\n            $(go.TextBlock, \"End\", functionDfd.textStyle(),\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        // three named ports, one on each side except the bottom, all input only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, false, true),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, false, true)\r\n    )\r\n}\r\n\r\nfunction commentGraph() {\r\n    return $(go.Node, \"Auto\", functionDfd.nodeStyle(),\r\n        $(go.Shape, \"File\", {\r\n            fill: \"#DEE0A3\",\r\n            strokeWidth: 0,\r\n            portId: \"\",\r\n            fromLinkable: true,\r\n            toLinkable: true\r\n        }),\r\n        $(go.TextBlock, functionDfd.textStyle(), {\r\n            margin: 5,\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            textAlign: \"center\",\r\n            editable: true,\r\n            font: \"bold 12pt Helvetica, Arial, sans-serif\",\r\n            stroke: '#454545'\r\n        },\r\n            new go.Binding(\"text\").makeTwoWay())\r\n        // no ports, because no links are allowed to connect with a comment\r\n    )\r\n}\r\n\r\nfunction groupGraph() {\r\n    return $(go.Group, \"Auto\", {\r\n        resizable: true,\r\n        resizeObjectName: \"PH\"\r\n    },\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"RoundedRectangle\",\r\n                {\r\n                    fill: \"rgba(128,128,128,0.33)\",\r\n                    name: \"PH\",\r\n                },\r\n                new go.Binding(\"desiredSize\", \"size\", go.Size.parse).makeTwoWay(go.Size.stringify)),\r\n            $(go.Placeholder,    // represents the area of all member parts,\r\n                { padding: 3 }),\r\n            $(go.TextBlock, { alignment: go.Spot.Right, font: \"Bold 12pt Sans-Serif\" },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n\r\n        //three named ports, one on each side except the top, all output only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    defaultGraph,\r\n    conditionalGraph,\r\n    startGraph,\r\n    varGraph,\r\n    ifGraph,\r\n    caseGraph,\r\n    switchGraph,\r\n    forGraph,\r\n    endGraph,\r\n    commentGraph,\r\n    groupGraph\r\n}","import { Component } from 'react'\r\nimport App from './App'\r\nimport Head from 'next/head'\r\n\r\n\r\nexport default class extends Component {\r\n  state = {\r\n    input: '',\r\n    message: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    // start listening the channel message\r\n    global.ipcRenderer.on('message', this.handleMessage)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // stop listening the channel message\r\n    global.ipcRenderer.removeListener('message', this.handleMessage)\r\n  }\r\n\r\n  handleMessage = (event, message) => {\r\n    // receive a message from the main process and save it in the local state\r\n    this.setState({ message })\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ input: event.target.value })\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault()\r\n    global.ipcRenderer.send('message', this.state.input)\r\n    this.setState({ message: null })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Head>\r\n          <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossOrigin=\"anonymous\" />\r\n          <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossOrigin=\"anonymous\"></script>\r\n          <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\" integrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\" crossOrigin=\"anonymous\"></script>\r\n          <title>ColorBlock</title>\r\n        </Head>\r\n        <App />\r\n      </>\r\n\r\n    )\r\n  }\r\n}\r\n","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"gojs\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");","module.exports = require(\"styled-jsx/style\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxFA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AA2CA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AAAA;AACA;AACA;AACA;AACA;AACA;AAZA;AACA;AAeA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAGA;AAAA;;;;;;AAOA;;;;;;;;;;AASA;AACA;AACA;AAEA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;AASA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAIA;AACA;AAlHA;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAOA;AACA;AAzCA;AACA;AA0CA;;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAFA;AAJA;AAcA;AACA;AA3BA;AACA;AA6BA;;;;;;;;;;;;;;;;;;;ACjCA;;;AAIA;AAEA;AACA;AACA;;;;;;;;;;AASA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAGA;;;;;;;AAMA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AAQA;;;;;;;;AAMA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AAQA;;;;;;;;AAMA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AAQA;;;;;;;;AAMA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AACA;AAQA;AAEA;;;;;;;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AADA;AAEA;;;;;;;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;;;;;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAEA;;;;;AAIA;AACA;AACA;AACA;AADA;AAEA;;;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;;;;;;;;;;;;;;;;;;AAiBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AADA;AAEA;AAEA;AAEA;AACA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAKA;AAEA;AAAA;AACA;AAKA;AAEA;AAAA;AACA;AAKA;AAEA;AAAA;AACA;AAKA;AAEA;AACA;AACA;AAAA;AACA;AAMA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAKA;AAEA;AAAA;AACA;AAKA;AACA;AAIA;AACA;AACA;AASA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AAGA;AAEA;AACA;AAGA;AAEA;AACA;AAGA;AAEA;AACA;AAKA;AAEA;AACA;AAKA;AAEA;AACA;AAKA;AAEA;AACA;AAKA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAIA;AACA;AAAA;AAEA;;;;;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAEA;;;;;AAIA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AACA;AADA;AAEA;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AA+BA;AAEA;AACA;AACA;AAUA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAgBA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAgBA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAKA;AAEA;AACA;AAOA;AAEA;AACA;AAOA;AAEA;AACA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AAGA;AAGA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AAGA;AAGA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AAGA;AAGA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAGA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAKA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAqqiBA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AChyLA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAaA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAqBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;;;;;;ACvHA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AALA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AAFA;AAIA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;ACpHA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAWA;AACA;AAFA;AAMA;AAKA;AACA;AACA;AACA;;;;AAIA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AAFA;AAQA;AAKA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AALA;AAYA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAIA;AAKA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAIA;AAKA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AALA;AAOA;AAAA;AAIA;AAKA;AACA;AACA;AACA;AAIA;AACA;AACA;AAHA;AAKA;AAAA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAJA;AAQA;AAAA;AACA;AAFA;AAOA;AACA;AACA;AAHA;AASA;AACA;AACA;AAHA;AAQA;AACA;AACA;AACA;AAJA;AAQA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAYA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAYA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AARA;AAoBA;AACA;AACA;AACA;AACA;AACA;AAFA;AAOA;AACA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AAKA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;;;;;;;;;;;;;;;;;;;;;;ACtSA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAFA;AACA;AAFA;AAiBA;AACA;AAAA;AAAA;AACA;AACA;AApBA;AAsBA;AAAA;AAAA;AACA;AACA;AAxBA;AA0BA;AACA;AACA;AAAA;AAAA;AACA;AA7BA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAgBA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAOA;AACA;AA7CA;;;;;;;;;;;;;;;;;;;;;;;ACLA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}