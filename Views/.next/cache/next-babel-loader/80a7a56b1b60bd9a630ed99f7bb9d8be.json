{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport go from 'gojs'; //import './App.css';\n\nimport './figure';\nimport dataModels from './modelsDfd';\nimport functionDfd from './functionsDfd';\nimport nodeTemplate from './nodeTemplate';\nvar $ = go.GraphObject.make;\nvar myDiagram;\n\nvar GoJs =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GoJs, _Component);\n\n  function GoJs(props) {\n    var _this;\n\n    _classCallCheck(this, GoJs);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GoJs).call(this, props));\n    _this.renderCanvas = _this.renderCanvas.bind(_assertThisInitialized(_this));\n    _this.state = {\n      myModel: null,\n      myDiagram: null\n    };\n    return _this;\n  }\n\n  _createClass(GoJs, [{\n    key: \"renderCanvas\",\n    value: function renderCanvas() {\n      myDiagram = $(go.Diagram, this.refs.goJsDiv, {\n        grid: $(go.Panel, \"Grid\", $(go.Shape, \"LineH\", {\n          stroke: \"gray\",\n          strokeWidth: .9\n        }), $(go.Shape, \"LineH\", {\n          stroke: \"darkslategray\",\n          strokeWidth: 1.5,\n          interval: 10\n        }), $(go.Shape, \"LineV\", {\n          stroke: \"gray\",\n          strokeWidth: .9\n        }), $(go.Shape, \"LineV\", {\n          stroke: \"darkslategray\",\n          strokeWidth: 1.5,\n          interval: 10\n        })),\n        \"LinkDrawn\": functionDfd.showLinkLabel,\n        // this DiagramEvent listener is defined below\n        \"LinkRelinked\": functionDfd.showLinkLabel,\n        \"toolManager.mouseWheelBehavior\": go.ToolManager.WheelZoom,\n        \"draggingTool.isGridSnapEnabled\": true,\n        \"undoManager.isEnabled\": true // enable undo & redo\n\n      }); // define the Node templates for regular nodes\n\n      myDiagram.nodeTemplateMap.add(\"\", nodeTemplate.defaultGraph()); // the default category\n\n      myDiagram.nodeTemplateMap.add(\"Conditional\", nodeTemplate.conditionalGraph());\n      myDiagram.nodeTemplateMap.add(\"Start\", nodeTemplate.startGraph());\n      myDiagram.nodeTemplateMap.add(\"Var\", $(go.Node, \"Table\", functionDfd.nodeStyle(), $(go.Panel, \"Auto\", $(go.Shape, \"square\", new go.Binding(\"fill\", \"color\"), {\n        minSize: new go.Size(40, 40),\n        strokeWidth: 0,\n        portId: \"\",\n        fromLinkable: true,\n        toLinkable: true\n      }), $(go.TextBlock, functionDfd.textStyle(), {\n        editable: true\n      }, new go.Binding(\"text\"))), // three named ports, one on each side except the top, all output only:\n      functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.TopSide, false, true), functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.LeftSide, true, true), functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.RightSide, true, true), functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.BottomSide, true, false)));\n      myDiagram.nodeTemplateMap.add(\"If\", $(go.Node, \"Table\", functionDfd.nodeStyle(), $(go.Panel, \"Auto\", $(go.Shape, \"RightTriangle\", new go.Binding(\"fill\", \"color\"), {\n        // angle: 65,\n        // geometryString: \"F M140 0 L70 70 0 50z\",\n        minSize: new go.Size(80, 80),\n        strokeWidth: 0,\n        portId: \"\",\n        fromLinkable: true,\n        toLinkable: true\n      }), $(go.TextBlock, functionDfd.textStyle(), {\n        editable: true\n      }, new go.Binding(\"text\"))), // three named ports, one on each side except the top, all output only:\n      functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true), functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false), functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false), functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)));\n      myDiagram.groupTemplate = $(go.Group, \"Auto\", {\n        resizable: true,\n        resizeObjectName: \"PH\"\n      }, $(go.Panel, \"Auto\", $(go.Shape, \"RoundedRectangle\", {\n        fill: \"rgba(128,128,128,0.33)\",\n        name: \"PH\"\n      }, new go.Binding(\"desiredSize\", \"size\", go.Size.parse).makeTwoWay(go.Size.stringify)), $(go.Placeholder, // represents the area of all member parts,\n      {\n        padding: 3\n      }), $(go.TextBlock, {\n        alignment: go.Spot.Right,\n        font: \"Bold 12pt Sans-Serif\"\n      }, new go.Binding(\"text\"))), //three named ports, one on each side except the top, all output only:\n      functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true), functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false));\n      myDiagram.nodeTemplateMap.add(\"case\", $(go.Node, \"Table\", functionDfd.nodeStyle(), new go.Binding(\"location\", \"loc\", go.Point.parse), $(go.Panel, \"Auto\", $(go.Shape, \"RoundedRectangle\", new go.Binding(\"fill\", \"color\"), {\n        // angle: 65,\n        // geometryString: \"F M140 0 L70 70 0 50z\",\n        //minSize: new go.Size(80, 80),\n        fromSpot: go.Spot.Bottom,\n        toSpot: go.Spot.Top,\n        strokeWidth: 0,\n        portId: \"\",\n        fromLinkable: true,\n        toLinkable: true\n      }), $(go.TextBlock, functionDfd.textStyle(), {\n        editable: true\n      }, new go.Binding(\"text\"))), // three named ports, one on each side except the top, all output only:\n      functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true), functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false), functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false), functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)));\n      myDiagram.nodeTemplateMap.add(\"switch\", $(go.Node, \"Table\", functionDfd.nodeStyle(), $(go.Panel, \"Auto\", $(go.Shape, \"octagon\", new go.Binding(\"fill\", \"color\"), {\n        toSpot: go.Spot.Bottom,\n        minSize: new go.Size(80, 80),\n        strokeWidth: 0\n      }), $(go.TextBlock, functionDfd.textStyle(), {\n        editable: true\n      }, new go.Binding(\"text\"))), functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)));\n      myDiagram.nodeTemplateMap.add(\"for\", $(go.Node, \"Spot\", $(go.Shape, \"Rectangle\", {\n        fill: \"\",\n        minSize: new go.Size(140, 40),\n        strokeWidth: 0\n      }), $(go.Shape, \"TriangleLeft\", {\n        width: 20,\n        height: 40,\n        fill: \"black\",\n        alignment: go.Spot.Left\n      }), $(go.Shape, \"Rectangle\", {\n        width: 120,\n        height: 40,\n        fill: \"black\"\n      }), $(go.Shape, \"TriangleRight\", {\n        width: 20,\n        height: 40,\n        fill: \"black\",\n        alignment: go.Spot.Right\n      }), $(go.TextBlock, functionDfd.textStyle(), {\n        text: \"Inicio\",\n        font: \"bold 8pt Helvetica, Arial, sans-serif\",\n        position: new go.Point(0, 0)\n      }), $(go.TextBlock, functionDfd.textStyle(), {\n        editable: true,\n        text: \"3\",\n        font: \"bold 8pt Helvetica, Arial, sans-serif\",\n        position: new go.Point(200, 0)\n      }), functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)));\n      myDiagram.nodeTemplateMap.add(\"End\", $(go.Node, \"Table\", functionDfd.nodeStyle(), $(go.Panel, \"Auto\", $(go.Shape, \"Circle\", {\n        minSize: new go.Size(40, 40),\n        fill: \"#DC3C00\",\n        strokeWidth: 0,\n        portId: \"\",\n        fromLinkable: true,\n        toLinkable: true\n      }), $(go.TextBlock, \"End\", functionDfd.textStyle(), new go.Binding(\"text\"))), // three named ports, one on each side except the bottom, all input only:\n      functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true), functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, false, true), functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, false, true))); // taken from ../extensions/Figures.js:\n\n      go.Shape.defineFigureGenerator(\"File\", function (shape, w, h) {\n        var geo = new go.Geometry();\n        var fig = new go.PathFigure(0, 0, true); // starting point\n\n        geo.add(fig);\n        fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, 0));\n        fig.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));\n        fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n        fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\n        var fig2 = new go.PathFigure(.75 * w, 0, false);\n        geo.add(fig2); // The Fold\n\n        fig2.add(new go.PathSegment(go.PathSegment.Line, .75 * w, .25 * h));\n        fig2.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));\n        geo.spot1 = new go.Spot(0, .25);\n        geo.spot2 = go.Spot.BottomRight;\n        return geo;\n      });\n      myDiagram.nodeTemplateMap.add(\"Comment\", $(go.Node, \"Auto\", functionDfd.nodeStyle(), $(go.Shape, \"File\", {\n        fill: \"#DEE0A3\",\n        strokeWidth: 0,\n        portId: \"\",\n        fromLinkable: true,\n        toLinkable: true\n      }), $(go.TextBlock, functionDfd.textStyle(), {\n        margin: 5,\n        maxSize: new go.Size(200, NaN),\n        wrap: go.TextBlock.WrapFit,\n        textAlign: \"center\",\n        editable: true,\n        font: \"bold 12pt Helvetica, Arial, sans-serif\",\n        stroke: '#454545'\n      }, new go.Binding(\"text\").makeTwoWay()) // no ports, because no links are allowed to connect with a comment\n      )); // replace the default Link template in the linkTemplateMap\n\n      myDiagram.linkTemplate = functionDfd.linkTemplate(); // temporary links used by LinkingTool and RelinkingTool are also orthogonal:\n\n      myDiagram.toolManager.linkingTool.temporaryLink.routing = go.Link.Orthogonal;\n      myDiagram.toolManager.relinkingTool.temporaryLink.routing = go.Link.Orthogonal; // initialize the Palette that is on the left side of the page\n\n      var myPalette = $(go.Palette, \"Diamond\", // must name or refer to the DIV HTML element\n      {\n        layout: $(go.GridLayout, {\n          alignment: go.GridLayout.Location\n        }),\n        nodeTemplateMap: myDiagram.nodeTemplateMap,\n        // share the templates used by myDiagram\n        model: new go.GraphLinksModel(dataModels.modelsData(), dataModels.modelsLinks())\n      });\n      myPalette.layout.sorting = go.GridLayout.Forward;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //console.log('componentDidMount')\n      this.renderCanvas();\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(prevProps) {\n      /*console.log(JSON.stringify(prevProps, null, 2))\n      if (this.props.data !== prevProps.data) {\n       console.log('Updating 2');\n       const model = this.state.myModel;\n       const diagram = this.state.myDiagram;\n       model.nodeDataArray = this.props.data;\n       diagram.model = model;\n       this.setState({ myModel: model, myDiagram: diagram });\n      }*/\n    }\n  }, {\n    key: \"onClickChange\",\n    value: function onClickChange() {\n      console.log(myDiagram.model.toJson());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"container-fluid\"\n      }, __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col-md-3\",\n        id: \"Diamond\",\n        style: {\n          'backgroundColor': '#373737'\n        }\n      }), __jsx(\"div\", {\n        className: \"col-md-9 row\"\n      }, __jsx(\"div\", {\n        id: \"blockWhite\"\n      }), __jsx(\"div\", {\n        ref: \"goJsDiv\",\n        id: \"goJsDiv\",\n        className: \"col-md-12\",\n        style: {\n          'width': '500px',\n          'height': '700px',\n          'backgroundColor': '#373737'\n        }\n      }))), __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: this.onClickChange\n      }, \"Save\")));\n    }\n  }]);\n\n  return GoJs;\n}(Component);\n\nexport { GoJs as default };","map":{"version":3,"sources":["C:/Users/LENOVO/Documents/teoria/Views/pages/Components/Dfd.jsx"],"names":["React","Component","go","dataModels","functionDfd","nodeTemplate","$","GraphObject","make","myDiagram","GoJs","props","renderCanvas","bind","state","myModel","Diagram","refs","goJsDiv","grid","Panel","Shape","stroke","strokeWidth","interval","showLinkLabel","ToolManager","WheelZoom","nodeTemplateMap","add","defaultGraph","conditionalGraph","startGraph","Node","nodeStyle","Binding","minSize","Size","portId","fromLinkable","toLinkable","TextBlock","textStyle","editable","makePort","Spot","Top","TopSide","Left","LeftSide","Right","RightSide","Bottom","BottomSide","groupTemplate","Group","resizable","resizeObjectName","fill","name","parse","makeTwoWay","stringify","Placeholder","padding","alignment","font","Point","fromSpot","toSpot","width","height","text","position","defineFigureGenerator","shape","w","h","geo","Geometry","fig","PathFigure","PathSegment","Line","close","fig2","spot1","spot2","BottomRight","margin","maxSize","NaN","wrap","WrapFit","textAlign","linkTemplate","toolManager","linkingTool","temporaryLink","routing","Link","Orthogonal","relinkingTool","myPalette","Palette","layout","GridLayout","Location","model","GraphLinksModel","modelsData","modelsLinks","sorting","Forward","prevProps","console","log","toJson","onClickChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport go from 'gojs';\n//import './App.css';\nimport './figure';\nimport dataModels from './modelsDfd'\nimport functionDfd from './functionsDfd'\nimport nodeTemplate from './nodeTemplate'\n\nconst $ = go.GraphObject.make;\nvar myDiagram;\nexport default class GoJs extends Component {\n  constructor(props) {\n    super(props);\n    this.renderCanvas = this.renderCanvas.bind(this);\n    this.state = { myModel: null, myDiagram: null }\n  }\n\n  renderCanvas() {\n    myDiagram = $(go.Diagram, this.refs.goJsDiv, {\n      grid: $(go.Panel, \"Grid\",\n        $(go.Shape, \"LineH\", { stroke: \"gray\", strokeWidth: .9 }),\n        $(go.Shape, \"LineH\", { stroke: \"darkslategray\", strokeWidth: 1.5, interval: 10 }),\n        $(go.Shape, \"LineV\", { stroke: \"gray\", strokeWidth: .9 }),\n        $(go.Shape, \"LineV\", { stroke: \"darkslategray\", strokeWidth: 1.5, interval: 10 })\n      ),\n      \"LinkDrawn\": functionDfd.showLinkLabel,  // this DiagramEvent listener is defined below\n      \"LinkRelinked\": functionDfd.showLinkLabel,\n      \"toolManager.mouseWheelBehavior\": go.ToolManager.WheelZoom,\n      \"draggingTool.isGridSnapEnabled\": true,\n      \"undoManager.isEnabled\": true  // enable undo & redo\n    }\n    );\n\n\n    // define the Node templates for regular nodes\n    myDiagram.nodeTemplateMap.add(\"\", nodeTemplate.defaultGraph());  // the default category\n    myDiagram.nodeTemplateMap.add(\"Conditional\", nodeTemplate.conditionalGraph());\n    myDiagram.nodeTemplateMap.add(\"Start\", nodeTemplate.startGraph());\n    myDiagram.nodeTemplateMap.add(\"Var\",\n      $(go.Node, \"Table\", functionDfd.nodeStyle(),\n        $(go.Panel, \"Auto\",\n          $(go.Shape, \"square\",\n            new go.Binding(\"fill\", \"color\"), {\n            minSize: new go.Size(40, 40),\n            strokeWidth: 0,\n            portId: \"\",\n            fromLinkable: true, toLinkable: true\n          }),\n          $(go.TextBlock, functionDfd.textStyle(), { editable: true },\n            new go.Binding(\"text\"))\n        ),\n        // three named ports, one on each side except the top, all output only:\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.TopSide, false, true),\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.LeftSide, true, true),\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.RightSide, true, true),\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.BottomSide, true, false)\n      ));\n\n\n    myDiagram.nodeTemplateMap.add(\"If\",\n      $(go.Node, \"Table\", functionDfd.nodeStyle(),\n        $(go.Panel, \"Auto\",\n          $(go.Shape, \"RightTriangle\",\n            new go.Binding(\"fill\", \"color\"), {\n            // angle: 65,\n            // geometryString: \"F M140 0 L70 70 0 50z\",\n            minSize: new go.Size(80, 80),\n            strokeWidth: 0,\n            portId: \"\",\n            fromLinkable: true, toLinkable: true\n          }),\n          $(go.TextBlock, functionDfd.textStyle(), { editable: true },\n            new go.Binding(\"text\"))\n        ),\n        // three named ports, one on each side except the top, all output only:\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false),\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false),\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\n      ));\n\n    myDiagram.groupTemplate =\n      $(go.Group, \"Auto\", {\n        resizable: true,\n        resizeObjectName: \"PH\"\n      },\n        $(go.Panel, \"Auto\",\n          $(go.Shape, \"RoundedRectangle\",\n            {\n              fill: \"rgba(128,128,128,0.33)\",\n              name: \"PH\",\n            },\n            new go.Binding(\"desiredSize\", \"size\", go.Size.parse).makeTwoWay(go.Size.stringify)),\n          $(go.Placeholder,    // represents the area of all member parts,\n            { padding: 3 }),\n          $(go.TextBlock, { alignment: go.Spot.Right, font: \"Bold 12pt Sans-Serif\" },\n            new go.Binding(\"text\"))\n        ),\n\n        //three named ports, one on each side except the top, all output only:\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\n      );\n\n    myDiagram.nodeTemplateMap.add(\"case\",\n      $(go.Node, \"Table\", functionDfd.nodeStyle(), new go.Binding(\"location\", \"loc\", go.Point.parse),\n        $(go.Panel, \"Auto\",\n          $(go.Shape, \"RoundedRectangle\",\n            new go.Binding(\"fill\", \"color\"), {\n            // angle: 65,\n            // geometryString: \"F M140 0 L70 70 0 50z\",\n            //minSize: new go.Size(80, 80),\n            fromSpot: go.Spot.Bottom, toSpot: go.Spot.Top,\n            strokeWidth: 0,\n            portId: \"\",\n            fromLinkable: true, toLinkable: true\n          }),\n          $(go.TextBlock, functionDfd.textStyle(), { editable: true },\n            new go.Binding(\"text\"))\n        ),\n        // three named ports, one on each side except the top, all output only:\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false),\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false),\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\n      ));\n\n    myDiagram.nodeTemplateMap.add(\"switch\",\n      $(go.Node, \"Table\", functionDfd.nodeStyle(),\n        $(go.Panel, \"Auto\",\n          $(go.Shape, \"octagon\",\n            new go.Binding(\"fill\", \"color\"), {\n            toSpot: go.Spot.Bottom,\n            minSize: new go.Size(80, 80),\n            strokeWidth: 0\n          }),\n          $(go.TextBlock, functionDfd.textStyle(), { editable: true },\n            new go.Binding(\"text\"))\n        ),\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\n      ));\n\n    myDiagram.nodeTemplateMap.add(\"for\",\n      $(go.Node, \"Spot\",\n        $(go.Shape, \"Rectangle\",\n          {\n            fill: \"\",\n            minSize: new go.Size(140, 40),\n            strokeWidth: 0\n          }),\n        $(go.Shape, \"TriangleLeft\", { width: 20, height: 40, fill: \"black\", alignment: go.Spot.Left }),\n        $(go.Shape, \"Rectangle\", { width: 120, height: 40, fill: \"black\" }),\n        $(go.Shape, \"TriangleRight\", { width: 20, height: 40, fill: \"black\", alignment: go.Spot.Right }),\n        $(go.TextBlock, functionDfd.textStyle(), { text: \"Inicio\", font: \"bold 8pt Helvetica, Arial, sans-serif\", position: new go.Point(0, 0) }),\n        $(go.TextBlock, functionDfd.textStyle(), { editable: true, text: \"3\", font: \"bold 8pt Helvetica, Arial, sans-serif\", position: new go.Point(200, 0) }),\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\n      ));\n    myDiagram.nodeTemplateMap.add(\"End\",\n      $(go.Node, \"Table\", functionDfd.nodeStyle(),\n        $(go.Panel, \"Auto\",\n          $(go.Shape, \"Circle\", {\n            minSize: new go.Size(40, 40),\n            fill: \"#DC3C00\",\n            strokeWidth: 0,\n            portId: \"\",\n            fromLinkable: true, toLinkable: true\n          }),\n          $(go.TextBlock, \"End\", functionDfd.textStyle(),\n            new go.Binding(\"text\"))\n        ),\n        // three named ports, one on each side except the bottom, all input only:\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, false, true),\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, false, true)\n      ));\n    // taken from ../extensions/Figures.js:\n    go.Shape.defineFigureGenerator(\"File\", function (shape, w, h) {\n      var geo = new go.Geometry();\n      var fig = new go.PathFigure(0, 0, true); // starting point\n      geo.add(fig);\n      fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, 0));\n      fig.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));\n      fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n      fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\n      var fig2 = new go.PathFigure(.75 * w, 0, false);\n      geo.add(fig2);\n      // The Fold\n      fig2.add(new go.PathSegment(go.PathSegment.Line, .75 * w, .25 * h));\n      fig2.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));\n      geo.spot1 = new go.Spot(0, .25);\n      geo.spot2 = go.Spot.BottomRight;\n      return geo;\n    });\n    myDiagram.nodeTemplateMap.add(\"Comment\",\n      $(go.Node, \"Auto\", functionDfd.nodeStyle(),\n        $(go.Shape, \"File\", {\n          fill: \"#DEE0A3\",\n          strokeWidth: 0,\n          portId: \"\",\n          fromLinkable: true, toLinkable: true\n        }),\n        $(go.TextBlock, functionDfd.textStyle(), {\n          margin: 5,\n          maxSize: new go.Size(200, NaN),\n          wrap: go.TextBlock.WrapFit,\n          textAlign: \"center\",\n          editable: true,\n          font: \"bold 12pt Helvetica, Arial, sans-serif\",\n          stroke: '#454545'\n        },\n          new go.Binding(\"text\").makeTwoWay())\n        // no ports, because no links are allowed to connect with a comment\n      ));\n    // replace the default Link template in the linkTemplateMap\n    myDiagram.linkTemplate = functionDfd.linkTemplate();\n\n    // temporary links used by LinkingTool and RelinkingTool are also orthogonal:\n    myDiagram.toolManager.linkingTool.temporaryLink.routing = go.Link.Orthogonal;\n    myDiagram.toolManager.relinkingTool.temporaryLink.routing = go.Link.Orthogonal;\n\n    // initialize the Palette that is on the left side of the page\n\n    let myPalette = $(go.Palette, \"Diamond\", // must name or refer to the DIV HTML element\n      {\n        layout: $(go.GridLayout, { alignment: go.GridLayout.Location }),\n        nodeTemplateMap: myDiagram.nodeTemplateMap, // share the templates used by myDiagram\n        model: new go.GraphLinksModel(dataModels.modelsData(), dataModels.modelsLinks())\n      });\n\n    myPalette.layout.sorting = go.GridLayout.Forward;\n\n  }\n\n\n  componentDidMount() {\n    //console.log('componentDidMount')\n    this.renderCanvas();\n  }\n\n\n  componentWillUpdate(prevProps) {\n    /*console.log(JSON.stringify(prevProps, null, 2))\n  if (this.props.data !== prevProps.data) {\n     console.log('Updating 2');\n     const model = this.state.myModel;\n     const diagram = this.state.myDiagram;\n     model.nodeDataArray = this.props.data;\n     diagram.model = model;\n     this.setState({ myModel: model, myDiagram: diagram });\n   }*/\n  }\n  onClickChange() {\n    console.log(myDiagram.model.toJson());\n  }\n  render() {\n    return (\n      <div className='container-fluid'>\n        <div className='row'>\n          <div className='col-md-3' id='Diamond' style={{ 'backgroundColor': '#373737' }}></div>\n          <div className='col-md-9 row'>\n            <div id='blockWhite' ></div>\n            <div ref=\"goJsDiv\" id='goJsDiv' className='col-md-12' style={{ 'width': '500px', 'height': '700px', 'backgroundColor': '#373737' }}>\n            </div>\n          </div>\n        </div>\n        <div className='row'>\n          <button className='btn btn-primary' onClick={this.onClickChange}>Save</button>\n        </div>\n      </div>\n    )\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}