{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _gojs = _interopRequireDefault(require(\"gojs\"));\n\nvar _functionsDfd = _interopRequireDefault(require(\"./functionsDfd\"));\n\nvar $ = _gojs[\"default\"].GraphObject.make; // the default category\n\nfunction defaultGraph() {\n  return $(_gojs[\"default\"].Node, \"Table\", _functionsDfd[\"default\"].nodeStyle(), // the main object is a Panel that surrounds a TextBlock with a rectangular Shape\n  $(_gojs[\"default\"].Panel, \"Auto\", $(_gojs[\"default\"].Shape, \"Rectangle\", new _gojs[\"default\"].Binding(\"fill\", \"color\"), {\n    fill: \"#00A9C9\",\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }), $(_gojs[\"default\"].TextBlock, _functionsDfd[\"default\"].textStyle(), {\n    margin: 5,\n    wrap: _gojs[\"default\"].TextBlock.WrapFit,\n    editable: true\n  }, new _gojs[\"default\"].Binding(\"text\").makeTwoWay())), // four named ports, one on each side:\n  _functionsDfd[\"default\"].makePort(\"T\", _gojs[\"default\"].Spot.Top, _gojs[\"default\"].Spot.TopSide, false, true), _functionsDfd[\"default\"].makePort(\"L\", _gojs[\"default\"].Spot.Left, _gojs[\"default\"].Spot.LeftSide, true, true), _functionsDfd[\"default\"].makePort(\"R\", _gojs[\"default\"].Spot.Right, _gojs[\"default\"].Spot.RightSide, true, true), _functionsDfd[\"default\"].makePort(\"B\", _gojs[\"default\"].Spot.Bottom, _gojs[\"default\"].Spot.BottomSide, true, false));\n}\n\nfunction conditionalGraph() {\n  return $(_gojs[\"default\"].Node, \"Table\", _functionsDfd[\"default\"].nodeStyle(), // the main object is a Panel that surrounds a TextBlock with a rectangular Shape\n  $(_gojs[\"default\"].Panel, \"Auto\", $(_gojs[\"default\"].Shape, \"Diamond\", {\n    fill: \"#00A9C9\",\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }, new _gojs[\"default\"].Binding(\"figure\", \"figure\")), $(_gojs[\"default\"].TextBlock, _functionsDfd[\"default\"].textStyle(), {\n    margin: 8,\n    maxSize: new _gojs[\"default\"].Size(160, NaN),\n    wrap: _gojs[\"default\"].TextBlock.WrapFit,\n    editable: true\n  }, new _gojs[\"default\"].Binding(\"text\").makeTwoWay())), // four named ports, one on each side:\n  _functionsDfd[\"default\"].makePort(\"T\", _gojs[\"default\"].Spot.Top, _gojs[\"default\"].Spot.Top, false, true), _functionsDfd[\"default\"].makePort(\"L\", _gojs[\"default\"].Spot.Left, _gojs[\"default\"].Spot.Left, true, true), _functionsDfd[\"default\"].makePort(\"R\", _gojs[\"default\"].Spot.Right, _gojs[\"default\"].Spot.Right, true, true), _functionsDfd[\"default\"].makePort(\"B\", _gojs[\"default\"].Spot.Bottom, _gojs[\"default\"].Spot.Bottom, true, false));\n}\n\nfunction startGraph() {\n  return $(_gojs[\"default\"].Node, \"Table\", _functionsDfd[\"default\"].nodeStyle(), $(_gojs[\"default\"].Panel, \"Auto\", $(_gojs[\"default\"].Shape, \"Circle\", new _gojs[\"default\"].Binding(\"fill\", \"color\"), {\n    minSize: new _gojs[\"default\"].Size(40, 40),\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }), $(_gojs[\"default\"].TextBlock, \"Start\", _functionsDfd[\"default\"].textStyle(), new _gojs[\"default\"].Binding(\"text\"))), _functionsDfd[\"default\"].makePort(\"B\", _gojs[\"default\"].Spot.Bottom, _gojs[\"default\"].Spot.Bottom, true, false));\n}\n\nfunction varGraph() {\n  return $(_gojs[\"default\"].Node, \"Table\", _functionsDfd[\"default\"].nodeStyle(), $(_gojs[\"default\"].Panel, \"Auto\", $(_gojs[\"default\"].Shape, \"square\", new _gojs[\"default\"].Binding(\"fill\", \"color\"), {\n    minSize: new _gojs[\"default\"].Size(40, 40),\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }), $(_gojs[\"default\"].TextBlock, _functionsDfd[\"default\"].textStyle(), {\n    editable: true\n  }, new _gojs[\"default\"].Binding(\"text\"))), // three named ports, one on each side except the top, all output only:\n  _functionsDfd[\"default\"].makePort(\"T\", _gojs[\"default\"].Spot.Top, _gojs[\"default\"].Spot.TopSide, false, true), _functionsDfd[\"default\"].makePort(\"L\", _gojs[\"default\"].Spot.Left, _gojs[\"default\"].Spot.LeftSide, true, true), _functionsDfd[\"default\"].makePort(\"R\", _gojs[\"default\"].Spot.Right, _gojs[\"default\"].Spot.RightSide, true, true), _functionsDfd[\"default\"].makePort(\"B\", _gojs[\"default\"].Spot.Bottom, _gojs[\"default\"].Spot.BottomSide, true, false));\n}\n\nfunction ifGraph() {\n  return $(_gojs[\"default\"].Node, \"Table\", _functionsDfd[\"default\"].nodeStyle(), $(_gojs[\"default\"].Panel, \"Auto\", $(_gojs[\"default\"].Shape, \"RightTriangle\", new _gojs[\"default\"].Binding(\"fill\", \"color\"), {\n    minSize: new _gojs[\"default\"].Size(80, 80),\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }), $(_gojs[\"default\"].TextBlock, _functionsDfd[\"default\"].textStyle(), {\n    editable: true\n  }, new _gojs[\"default\"].Binding(\"text\"))), // three named ports, one on each side except the top, all output only:\n  _functionsDfd[\"default\"].makePort(\"T\", _gojs[\"default\"].Spot.Top, _gojs[\"default\"].Spot.Top, false, true), _functionsDfd[\"default\"].makePort(\"L\", _gojs[\"default\"].Spot.Left, _gojs[\"default\"].Spot.Left, true, false), _functionsDfd[\"default\"].makePort(\"R\", _gojs[\"default\"].Spot.Right, _gojs[\"default\"].Spot.Right, true, false), _functionsDfd[\"default\"].makePort(\"B\", _gojs[\"default\"].Spot.Bottom, _gojs[\"default\"].Spot.Bottom, true, false));\n}\n\nfunction caseGraph() {\n  return $(_gojs[\"default\"].Node, \"Table\", _functionsDfd[\"default\"].nodeStyle(), new _gojs[\"default\"].Binding(\"location\", \"loc\", _gojs[\"default\"].Point.parse), $(_gojs[\"default\"].Panel, \"Auto\", $(_gojs[\"default\"].Shape, \"RoundedRectangle\", new _gojs[\"default\"].Binding(\"fill\", \"color\"), {\n    fromSpot: _gojs[\"default\"].Spot.Bottom,\n    toSpot: _gojs[\"default\"].Spot.Top,\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }), $(_gojs[\"default\"].TextBlock, _functionsDfd[\"default\"].textStyle(), {\n    editable: true\n  }, new _gojs[\"default\"].Binding(\"text\"))), // three named ports, one on each side except the top, all output only:\n  _functionsDfd[\"default\"].makePort(\"T\", _gojs[\"default\"].Spot.Top, _gojs[\"default\"].Spot.Top, false, true), _functionsDfd[\"default\"].makePort(\"L\", _gojs[\"default\"].Spot.Left, _gojs[\"default\"].Spot.Left, true, false), _functionsDfd[\"default\"].makePort(\"R\", _gojs[\"default\"].Spot.Right, _gojs[\"default\"].Spot.Right, true, false), _functionsDfd[\"default\"].makePort(\"B\", _gojs[\"default\"].Spot.Bottom, _gojs[\"default\"].Spot.Bottom, true, false));\n}\n\nfunction switchGraph() {\n  return $(_gojs[\"default\"].Node, \"Table\", _functionsDfd[\"default\"].nodeStyle(), $(_gojs[\"default\"].Panel, \"Auto\", $(_gojs[\"default\"].Shape, \"octagon\", new _gojs[\"default\"].Binding(\"fill\", \"color\"), {\n    toSpot: _gojs[\"default\"].Spot.Bottom,\n    minSize: new _gojs[\"default\"].Size(80, 80),\n    strokeWidth: 0\n  }), $(_gojs[\"default\"].TextBlock, _functionsDfd[\"default\"].textStyle(), {\n    editable: true\n  }, new _gojs[\"default\"].Binding(\"text\"))), _functionsDfd[\"default\"].makePort(\"B\", _gojs[\"default\"].Spot.Bottom, _gojs[\"default\"].Spot.Bottom, true, false));\n}\n\nfunction forGraph() {\n  return $(_gojs[\"default\"].Node, \"Spot\", $(_gojs[\"default\"].Shape, \"Rectangle\", {\n    fill: \"\",\n    minSize: new _gojs[\"default\"].Size(140, 40),\n    strokeWidth: 0\n  }), $(_gojs[\"default\"].Shape, \"TriangleLeft\", {\n    width: 20,\n    height: 40,\n    fill: \"black\",\n    alignment: _gojs[\"default\"].Spot.Left\n  }), $(_gojs[\"default\"].Shape, \"Rectangle\", {\n    width: 120,\n    height: 40,\n    fill: \"black\"\n  }), $(_gojs[\"default\"].Shape, \"TriangleRight\", {\n    width: 20,\n    height: 40,\n    fill: \"black\",\n    alignment: _gojs[\"default\"].Spot.Right\n  }), $(_gojs[\"default\"].TextBlock, _functionsDfd[\"default\"].textStyle(), {\n    text: \"Inicio\",\n    font: \"bold 8pt Helvetica, Arial, sans-serif\",\n    position: new _gojs[\"default\"].Point(0, 0)\n  }), $(_gojs[\"default\"].TextBlock, _functionsDfd[\"default\"].textStyle(), {\n    editable: true,\n    text: \"3\",\n    font: \"bold 8pt Helvetica, Arial, sans-serif\",\n    position: new _gojs[\"default\"].Point(200, 0)\n  }), _functionsDfd[\"default\"].makePort(\"B\", _gojs[\"default\"].Spot.Bottom, _gojs[\"default\"].Spot.Bottom, true, false));\n}\n\nfunction endGraph() {\n  return $(_gojs[\"default\"].Node, \"Table\", _functionsDfd[\"default\"].nodeStyle(), $(_gojs[\"default\"].Panel, \"Auto\", $(_gojs[\"default\"].Shape, \"Circle\", {\n    minSize: new _gojs[\"default\"].Size(40, 40),\n    fill: \"#DC3C00\",\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }), $(_gojs[\"default\"].TextBlock, \"End\", _functionsDfd[\"default\"].textStyle(), new _gojs[\"default\"].Binding(\"text\"))), // three named ports, one on each side except the bottom, all input only:\n  _functionsDfd[\"default\"].makePort(\"T\", _gojs[\"default\"].Spot.Top, _gojs[\"default\"].Spot.Top, false, true), _functionsDfd[\"default\"].makePort(\"L\", _gojs[\"default\"].Spot.Left, _gojs[\"default\"].Spot.Left, false, true), _functionsDfd[\"default\"].makePort(\"R\", _gojs[\"default\"].Spot.Right, _gojs[\"default\"].Spot.Right, false, true));\n}\n\nfunction commentGraph() {\n  return $(_gojs[\"default\"].Node, \"Auto\", _functionsDfd[\"default\"].nodeStyle(), $(_gojs[\"default\"].Shape, \"File\", {\n    fill: \"#DEE0A3\",\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }), $(_gojs[\"default\"].TextBlock, _functionsDfd[\"default\"].textStyle(), {\n    margin: 5,\n    maxSize: new _gojs[\"default\"].Size(200, NaN),\n    wrap: _gojs[\"default\"].TextBlock.WrapFit,\n    textAlign: \"center\",\n    editable: true,\n    font: \"bold 12pt Helvetica, Arial, sans-serif\",\n    stroke: '#454545'\n  }, new _gojs[\"default\"].Binding(\"text\").makeTwoWay()) // no ports, because no links are allowed to connect with a comment\n  );\n}\n\nfunction groupGraph() {\n  return $(_gojs[\"default\"].Group, \"Auto\", {\n    resizable: true,\n    resizeObjectName: \"PH\"\n  }, $(_gojs[\"default\"].Panel, \"Auto\", $(_gojs[\"default\"].Shape, \"RoundedRectangle\", {\n    fill: \"rgba(128,128,128,0.33)\",\n    name: \"PH\"\n  }, new _gojs[\"default\"].Binding(\"desiredSize\", \"size\", _gojs[\"default\"].Size.parse).makeTwoWay(_gojs[\"default\"].Size.stringify)), $(_gojs[\"default\"].Placeholder, // represents the area of all member parts,\n  {\n    padding: 3\n  }), $(_gojs[\"default\"].TextBlock, {\n    alignment: _gojs[\"default\"].Spot.Right,\n    font: \"Bold 12pt Sans-Serif\"\n  }, new _gojs[\"default\"].Binding(\"text\"))), //three named ports, one on each side except the top, all output only:\n  _functionsDfd[\"default\"].makePort(\"T\", _gojs[\"default\"].Spot.Top, _gojs[\"default\"].Spot.Top, false, true), _functionsDfd[\"default\"].makePort(\"B\", _gojs[\"default\"].Spot.Bottom, _gojs[\"default\"].Spot.Bottom, true, false));\n}\n\nmodule.exports = {\n  defaultGraph: defaultGraph,\n  conditionalGraph: conditionalGraph,\n  startGraph: startGraph,\n  varGraph: varGraph,\n  ifGraph: ifGraph,\n  caseGraph: caseGraph,\n  switchGraph: switchGraph,\n  forGraph: forGraph,\n  endGraph: endGraph,\n  commentGraph: commentGraph,\n  groupGraph: groupGraph\n};","map":{"version":3,"sources":["C:/Users/LENOVO/Documents/teoria/Views/pages/Components/nodeTemplate.js"],"names":["$","go","GraphObject","make","defaultGraph","Node","functionDfd","nodeStyle","Panel","Shape","Binding","fill","strokeWidth","portId","fromLinkable","toLinkable","TextBlock","textStyle","margin","wrap","WrapFit","editable","makeTwoWay","makePort","Spot","Top","TopSide","Left","LeftSide","Right","RightSide","Bottom","BottomSide","conditionalGraph","maxSize","Size","NaN","startGraph","minSize","varGraph","ifGraph","caseGraph","Point","parse","fromSpot","toSpot","switchGraph","forGraph","width","height","alignment","text","font","position","endGraph","commentGraph","textAlign","stroke","groupGraph","Group","resizable","resizeObjectName","name","stringify","Placeholder","padding","module","exports"],"mappings":"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","sourcesContent":["import go from 'gojs'\r\nimport functionDfd from './functionsDfd'\r\n\r\nconst $ = go.GraphObject.make;\r\n\r\n// the default category\r\nfunction defaultGraph() {\r\n    return $(go.Node, \"Table\", functionDfd.nodeStyle(),\r\n        // the main object is a Panel that surrounds a TextBlock with a rectangular Shape\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"Rectangle\", new go.Binding(\"fill\", \"color\"),\r\n                {\r\n                    fill: \"#00A9C9\",\r\n                    strokeWidth: 0,\r\n                    portId: \"\",\r\n                    fromLinkable: true,\r\n                    toLinkable: true\r\n                },\r\n            ),\r\n            $(go.TextBlock, functionDfd.textStyle(), {\r\n                margin: 5,\r\n                wrap: go.TextBlock.WrapFit,\r\n                editable: true\r\n            },\r\n                new go.Binding(\"text\").makeTwoWay())\r\n        ),\r\n        // four named ports, one on each side:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.TopSide, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.LeftSide, true, true),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.RightSide, true, true),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.BottomSide, true, false)\r\n    )\r\n}\r\n\r\nfunction conditionalGraph() {\r\n    return $(go.Node, \"Table\", functionDfd.nodeStyle(),\r\n        // the main object is a Panel that surrounds a TextBlock with a rectangular Shape\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"Diamond\", {\r\n                fill: \"#00A9C9\",\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true, toLinkable: true\r\n            },\r\n                new go.Binding(\"figure\", \"figure\")),\r\n            $(go.TextBlock, functionDfd.textStyle(), {\r\n                margin: 8,\r\n                maxSize: new go.Size(160, NaN),\r\n                wrap: go.TextBlock.WrapFit,\r\n                editable: true\r\n            },\r\n                new go.Binding(\"text\").makeTwoWay())\r\n        ),\r\n        // four named ports, one on each side:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, true),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, true),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction startGraph() {\r\n    return $(go.Node, \"Table\", functionDfd.nodeStyle(),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"Circle\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                minSize: new go.Size(40, 40),\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true, toLinkable: true\r\n            }),\r\n            $(go.TextBlock, \"Start\", functionDfd.textStyle(),\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\n\r\nfunction varGraph() {\r\n    return $(go.Node, \"Table\", functionDfd.nodeStyle(),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"square\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                minSize: new go.Size(40, 40),\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true, toLinkable: true\r\n            }),\r\n            $(go.TextBlock, functionDfd.textStyle(), { editable: true },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        // three named ports, one on each side except the top, all output only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.TopSide, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.LeftSide, true, true),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.RightSide, true, true),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.BottomSide, true, false)\r\n    )\r\n}\r\n\r\nfunction ifGraph() {\r\n    return $(go.Node, \"Table\", functionDfd.nodeStyle(),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"RightTriangle\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                minSize: new go.Size(80, 80),\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true, toLinkable: true\r\n            }),\r\n            $(go.TextBlock, functionDfd.textStyle(), { editable: true },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        // three named ports, one on each side except the top, all output only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction caseGraph() {\r\n    return $(go.Node, \"Table\", functionDfd.nodeStyle(), new go.Binding(\"location\", \"loc\", go.Point.parse),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"RoundedRectangle\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n\r\n                fromSpot: go.Spot.Bottom, toSpot: go.Spot.Top,\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true, toLinkable: true\r\n            }),\r\n            $(go.TextBlock, functionDfd.textStyle(), { editable: true },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        // three named ports, one on each side except the top, all output only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction switchGraph() {\r\n    return $(go.Node, \"Table\", functionDfd.nodeStyle(),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"octagon\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                toSpot: go.Spot.Bottom,\r\n                minSize: new go.Size(80, 80),\r\n                strokeWidth: 0\r\n            }),\r\n            $(go.TextBlock, functionDfd.textStyle(), { editable: true },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction forGraph() {\r\n    return $(go.Node, \"Spot\",\r\n        $(go.Shape, \"Rectangle\",\r\n            {\r\n                fill: \"\",\r\n                minSize: new go.Size(140, 40),\r\n                strokeWidth: 0\r\n            }),\r\n        $(go.Shape, \"TriangleLeft\", { width: 20, height: 40, fill: \"black\", alignment: go.Spot.Left }),\r\n        $(go.Shape, \"Rectangle\", { width: 120, height: 40, fill: \"black\" }),\r\n        $(go.Shape, \"TriangleRight\", { width: 20, height: 40, fill: \"black\", alignment: go.Spot.Right }),\r\n        $(go.TextBlock, functionDfd.textStyle(), { text: \"Inicio\", font: \"bold 8pt Helvetica, Arial, sans-serif\", position: new go.Point(0, 0) }),\r\n        $(go.TextBlock, functionDfd.textStyle(), { editable: true, text: \"3\", font: \"bold 8pt Helvetica, Arial, sans-serif\", position: new go.Point(200, 0) }),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction endGraph() {\r\n    return $(go.Node, \"Table\", functionDfd.nodeStyle(),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"Circle\", {\r\n                minSize: new go.Size(40, 40),\r\n                fill: \"#DC3C00\",\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true, toLinkable: true\r\n            }),\r\n            $(go.TextBlock, \"End\", functionDfd.textStyle(),\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        // three named ports, one on each side except the bottom, all input only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, false, true),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, false, true)\r\n    )\r\n}\r\n\r\nfunction commentGraph() {\r\n    return $(go.Node, \"Auto\", functionDfd.nodeStyle(),\r\n        $(go.Shape, \"File\", {\r\n            fill: \"#DEE0A3\",\r\n            strokeWidth: 0,\r\n            portId: \"\",\r\n            fromLinkable: true, toLinkable: true\r\n        }),\r\n        $(go.TextBlock, functionDfd.textStyle(), {\r\n            margin: 5,\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            textAlign: \"center\",\r\n            editable: true,\r\n            font: \"bold 12pt Helvetica, Arial, sans-serif\",\r\n            stroke: '#454545'\r\n        },\r\n            new go.Binding(\"text\").makeTwoWay())\r\n        // no ports, because no links are allowed to connect with a comment\r\n    )\r\n}\r\n\r\nfunction groupGraph() {\r\n    return $(go.Group, \"Auto\", {\r\n        resizable: true,\r\n        resizeObjectName: \"PH\"\r\n    },\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"RoundedRectangle\",\r\n                {\r\n                    fill: \"rgba(128,128,128,0.33)\",\r\n                    name: \"PH\",\r\n                },\r\n                new go.Binding(\"desiredSize\", \"size\", go.Size.parse).makeTwoWay(go.Size.stringify)),\r\n            $(go.Placeholder,    // represents the area of all member parts,\r\n                { padding: 3 }),\r\n            $(go.TextBlock, { alignment: go.Spot.Right, font: \"Bold 12pt Sans-Serif\" },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n\r\n        //three named ports, one on each side except the top, all output only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    defaultGraph,\r\n    conditionalGraph,\r\n    startGraph,\r\n    varGraph,\r\n    ifGraph,\r\n    caseGraph,\r\n    switchGraph,\r\n    forGraph,\r\n    endGraph,\r\n    commentGraph,\r\n    groupGraph\r\n}"]},"metadata":{},"sourceType":"script"}