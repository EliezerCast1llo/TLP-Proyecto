{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport go from 'gojs'; //import './App.css';\n\nimport './figure';\nimport dataModels from './modelsDfd';\nimport functionDfd from './functionsDfd';\nconst $ = go.GraphObject.make;\nvar myDiagram;\nexport default class GoJs extends Component {\n  constructor(props) {\n    super(props);\n    this.renderCanvas = this.renderCanvas.bind(this);\n    this.state = {\n      myModel: null,\n      myDiagram: null\n    };\n  }\n\n  renderCanvas() {\n    myDiagram = $(go.Diagram, this.refs.goJsDiv, {\n      grid: $(go.Panel, \"Grid\", $(go.Shape, \"LineH\", {\n        stroke: \"gray\",\n        strokeWidth: .9\n      }), $(go.Shape, \"LineH\", {\n        stroke: \"darkslategray\",\n        strokeWidth: 1.5,\n        interval: 10\n      }), $(go.Shape, \"LineV\", {\n        stroke: \"gray\",\n        strokeWidth: .9\n      }), $(go.Shape, \"LineV\", {\n        stroke: \"darkslategray\",\n        strokeWidth: 1.5,\n        interval: 10\n      })),\n      \"LinkDrawn\": functionDfd.showLinkLabel,\n      // this DiagramEvent listener is defined below\n      \"LinkRelinked\": functionDfd.showLinkLabel,\n      \"toolManager.mouseWheelBehavior\": go.ToolManager.WheelZoom,\n      \"draggingTool.isGridSnapEnabled\": true,\n      \"undoManager.isEnabled\": true // enable undo & redo\n\n    }); // define the Node templates for regular nodes\n\n    myDiagram.nodeTemplateMap.add(\"\", // the default category\n    $(go.Node, \"Table\", this.nodeStyle(), // the main object is a Panel that surrounds a TextBlock with a rectangular Shape\n    $(go.Panel, \"Auto\", $(go.Shape, \"Rectangle\", new go.Binding(\"fill\", \"color\"), {\n      fill: \"#00A9C9\",\n      strokeWidth: 0,\n      portId: \"\",\n      fromLinkable: true,\n      toLinkable: true\n    }, new go.Binding(\"figure\", \"figure\")), $(go.TextBlock, this.textStyle(), {\n      margin: 8,\n      maxSize: new go.Size(160, NaN),\n      wrap: go.TextBlock.WrapFit,\n      editable: true\n    }, new go.Binding(\"text\").makeTwoWay())), // four named ports, one on each side:\n    functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.TopSide, false, true), functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.LeftSide, true, true), functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.RightSide, true, true), functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.BottomSide, true, false)));\n    myDiagram.nodeTemplateMap.add(\"Conditional\", $(go.Node, \"Table\", this.nodeStyle(), // the main object is a Panel that surrounds a TextBlock with a rectangular Shape\n    $(go.Panel, \"Auto\", $(go.Shape, \"Diamond\", {\n      fill: \"#00A9C9\",\n      strokeWidth: 0,\n      portId: \"\",\n      fromLinkable: true,\n      toLinkable: true\n    }, new go.Binding(\"figure\", \"figure\")), $(go.TextBlock, this.textStyle(), {\n      margin: 8,\n      maxSize: new go.Size(160, NaN),\n      wrap: go.TextBlock.WrapFit,\n      editable: true\n    }, new go.Binding(\"text\").makeTwoWay())), // four named ports, one on each side:\n    functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true), functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, true), functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, true), functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)));\n    myDiagram.nodeTemplateMap.add(\"Start\", $(go.Node, \"Table\", this.nodeStyle(), $(go.Panel, \"Auto\", $(go.Shape, \"Circle\", new go.Binding(\"fill\", \"color\"), {\n      minSize: new go.Size(40, 40),\n      strokeWidth: 0,\n      portId: \"\",\n      fromLinkable: true,\n      toLinkable: true\n    }), $(go.TextBlock, \"Start\", this.textStyle(), new go.Binding(\"text\"))), // three named ports, one on each side except the top, all output only:\n\n    /* this.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false),\n     this.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false),*/\n    functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)));\n    myDiagram.nodeTemplateMap.add(\"Var\", $(go.Node, \"Table\", this.nodeStyle(), $(go.Panel, \"Auto\", $(go.Shape, \"square\", new go.Binding(\"fill\", \"color\"), {\n      minSize: new go.Size(40, 40),\n      strokeWidth: 0,\n      portId: \"\",\n      fromLinkable: true,\n      toLinkable: true\n    }), $(go.TextBlock, this.textStyle(), {\n      editable: true\n    }, new go.Binding(\"text\"))), // three named ports, one on each side except the top, all output only:\n    functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.TopSide, false, true), functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.LeftSide, true, true), functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.RightSide, true, true), functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.BottomSide, true, false)));\n    myDiagram.nodeTemplateMap.add(\"If\", $(go.Node, \"Table\", this.nodeStyle(), $(go.Panel, \"Auto\", $(go.Shape, \"RightTriangle\", new go.Binding(\"fill\", \"color\"), {\n      // angle: 65,\n      // geometryString: \"F M140 0 L70 70 0 50z\",\n      minSize: new go.Size(80, 80),\n      strokeWidth: 0,\n      portId: \"\",\n      fromLinkable: true,\n      toLinkable: true\n    }), $(go.TextBlock, this.textStyle(), {\n      editable: true\n    }, new go.Binding(\"text\"))), // three named ports, one on each side except the top, all output only:\n    functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true), functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false), functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false), functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)));\n    myDiagram.groupTemplate = $(go.Group, \"Auto\", {\n      resizable: true,\n      resizeObjectName: \"PH\"\n    }, $(go.Panel, \"Auto\", $(go.Shape, \"RoundedRectangle\", {\n      fill: \"rgba(128,128,128,0.33)\",\n      name: \"PH\"\n    }, new go.Binding(\"desiredSize\", \"size\", go.Size.parse).makeTwoWay(go.Size.stringify)), $(go.Placeholder, // represents the area of all member parts,\n    {\n      padding: 3\n    }), $(go.TextBlock, {\n      alignment: go.Spot.Right,\n      font: \"Bold 12pt Sans-Serif\"\n    }, new go.Binding(\"text\"))), //three named ports, one on each side except the top, all output only:\n    functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true), functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false));\n    myDiagram.nodeTemplateMap.add(\"case\", $(go.Node, \"Table\", this.nodeStyle(), new go.Binding(\"location\", \"loc\", go.Point.parse), $(go.Panel, \"Auto\", $(go.Shape, \"RoundedRectangle\", new go.Binding(\"fill\", \"color\"), {\n      // angle: 65,\n      // geometryString: \"F M140 0 L70 70 0 50z\",\n      //minSize: new go.Size(80, 80),\n      fromSpot: go.Spot.Bottom,\n      toSpot: go.Spot.Top,\n      strokeWidth: 0,\n      portId: \"\",\n      fromLinkable: true,\n      toLinkable: true\n    }), $(go.TextBlock, this.textStyle(), {\n      editable: true\n    }, new go.Binding(\"text\"))), // three named ports, one on each side except the top, all output only:\n    functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true), functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false), functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false), functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)));\n    myDiagram.nodeTemplateMap.add(\"switch\", $(go.Node, \"Table\", this.nodeStyle(), $(go.Panel, \"Auto\", $(go.Shape, \"octagon\", new go.Binding(\"fill\", \"color\"), {\n      toSpot: go.Spot.Bottom,\n      minSize: new go.Size(80, 80),\n      strokeWidth: 0\n    }), $(go.TextBlock, this.textStyle(), {\n      editable: true\n    }, new go.Binding(\"text\"))), functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)));\n    myDiagram.nodeTemplateMap.add(\"for\", $(go.Node, \"Spot\", $(go.Shape, \"Rectangle\", {\n      fill: \"\",\n      minSize: new go.Size(140, 40),\n      strokeWidth: 0\n    }), $(go.Shape, \"TriangleLeft\", {\n      width: 20,\n      height: 40,\n      fill: \"black\",\n      alignment: go.Spot.Left\n    }), $(go.Shape, \"Rectangle\", {\n      width: 120,\n      height: 40,\n      fill: \"black\"\n    }), $(go.Shape, \"TriangleRight\", {\n      width: 20,\n      height: 40,\n      fill: \"black\",\n      alignment: go.Spot.Right\n    }), $(go.TextBlock, this.textStyle(), {\n      text: \"Inicio\",\n      font: \"bold 8pt Helvetica, Arial, sans-serif\",\n      position: new go.Point(0, 0)\n    }), $(go.TextBlock, this.textStyle(), {\n      editable: true,\n      text: \"3\",\n      font: \"bold 8pt Helvetica, Arial, sans-serif\",\n      position: new go.Point(200, 0)\n    }), functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)));\n    myDiagram.nodeTemplateMap.add(\"End\", $(go.Node, \"Table\", this.nodeStyle(), $(go.Panel, \"Auto\", $(go.Shape, \"Circle\", {\n      minSize: new go.Size(40, 40),\n      fill: \"#DC3C00\",\n      strokeWidth: 0,\n      portId: \"\",\n      fromLinkable: true,\n      toLinkable: true\n    }), $(go.TextBlock, \"End\", this.textStyle(), new go.Binding(\"text\"))), // three named ports, one on each side except the bottom, all input only:\n    functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true), functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, false, true), functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, false, true))); // taken from ../extensions/Figures.js:\n\n    go.Shape.defineFigureGenerator(\"File\", function (shape, w, h) {\n      var geo = new go.Geometry();\n      var fig = new go.PathFigure(0, 0, true); // starting point\n\n      geo.add(fig);\n      fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, 0));\n      fig.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));\n      fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n      fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\n      var fig2 = new go.PathFigure(.75 * w, 0, false);\n      geo.add(fig2); // The Fold\n\n      fig2.add(new go.PathSegment(go.PathSegment.Line, .75 * w, .25 * h));\n      fig2.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));\n      geo.spot1 = new go.Spot(0, .25);\n      geo.spot2 = go.Spot.BottomRight;\n      return geo;\n    });\n    myDiagram.nodeTemplateMap.add(\"Comment\", $(go.Node, \"Auto\", this.nodeStyle(), $(go.Shape, \"File\", {\n      fill: \"#DEE0A3\",\n      strokeWidth: 0,\n      portId: \"\",\n      fromLinkable: true,\n      toLinkable: true\n    }), $(go.TextBlock, this.textStyle(), {\n      margin: 5,\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      textAlign: \"center\",\n      editable: true,\n      font: \"bold 12pt Helvetica, Arial, sans-serif\",\n      stroke: '#454545'\n    }, new go.Binding(\"text\").makeTwoWay()) // no ports, because no links are allowed to connect with a comment\n    )); // replace the default Link template in the linkTemplateMap\n\n    myDiagram.linkTemplate = functionDfd.linkTemplate(); // temporary links used by LinkingTool and RelinkingTool are also orthogonal:\n\n    myDiagram.toolManager.linkingTool.temporaryLink.routing = go.Link.Orthogonal;\n    myDiagram.toolManager.relinkingTool.temporaryLink.routing = go.Link.Orthogonal; // initialize the Palette that is on the left side of the page\n\n    let myPalette = $(go.Palette, \"Diamond\", // must name or refer to the DIV HTML element\n    {\n      layout: $(go.GridLayout, {\n        alignment: go.GridLayout.Location\n      }),\n      nodeTemplateMap: myDiagram.nodeTemplateMap,\n      // share the templates used by myDiagram\n      model: new go.GraphLinksModel(dataModels.modelsData(), dataModels.modelsLinks())\n    });\n    myPalette.layout.sorting = go.GridLayout.Forward;\n  }\n\n  componentDidMount() {\n    //console.log('componentDidMount')\n    this.renderCanvas();\n  }\n\n  componentWillUpdate(prevProps) {\n    /*console.log(JSON.stringify(prevProps, null, 2))\n    if (this.props.data !== prevProps.data) {\n     console.log('Updating 2');\n     const model = this.state.myModel;\n     const diagram = this.state.myDiagram;\n     model.nodeDataArray = this.props.data;\n     diagram.model = model;\n     this.setState({ myModel: model, myDiagram: diagram });\n    }*/\n  }\n\n  onClickChange() {\n    console.log(myDiagram.model.toJson());\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"container-fluid\"\n    }, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-md-3\",\n      id: \"Diamond\",\n      style: {\n        'backgroundColor': '#373737'\n      }\n    }), __jsx(\"div\", {\n      className: \"col-md-9 row\"\n    }, __jsx(\"div\", {\n      id: \"blockWhite\"\n    }), __jsx(\"div\", {\n      ref: \"goJsDiv\",\n      id: \"goJsDiv\",\n      className: \"col-md-12\",\n      style: {\n        'width': '500px',\n        'height': '700px',\n        'backgroundColor': '#373737'\n      }\n    }))), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.onClickChange\n    }, \"Save\")));\n  }\n\n  textStyle() {\n    return {\n      font: \"bold 11pt Helvetica, Arial, sans-serif\",\n      stroke: \"whitesmoke\"\n    };\n  }\n\n  nodeStyle() {\n    return [// The Node.location comes from the \"loc\" property of the node data,\n    // converted by the Point.parse static method.\n    // If the Node.location is changed, it updates the \"loc\" property of the node data,\n    // converting back using the Point.stringify static method.\n    new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      // the Node.location is at the center of each node\n      locationSpot: go.Spot.Center\n    }];\n  }\n\n}","map":{"version":3,"sources":["C:/Users/LENOVO/Documents/teoria/Views/pages/Components/Dfd.jsx"],"names":["React","Component","go","dataModels","functionDfd","$","GraphObject","make","myDiagram","GoJs","constructor","props","renderCanvas","bind","state","myModel","Diagram","refs","goJsDiv","grid","Panel","Shape","stroke","strokeWidth","interval","showLinkLabel","ToolManager","WheelZoom","nodeTemplateMap","add","Node","nodeStyle","Binding","fill","portId","fromLinkable","toLinkable","TextBlock","textStyle","margin","maxSize","Size","NaN","wrap","WrapFit","editable","makeTwoWay","makePort","Spot","Top","TopSide","Left","LeftSide","Right","RightSide","Bottom","BottomSide","minSize","groupTemplate","Group","resizable","resizeObjectName","name","parse","stringify","Placeholder","padding","alignment","font","Point","fromSpot","toSpot","width","height","text","position","defineFigureGenerator","shape","w","h","geo","Geometry","fig","PathFigure","PathSegment","Line","close","fig2","spot1","spot2","BottomRight","textAlign","linkTemplate","toolManager","linkingTool","temporaryLink","routing","Link","Orthogonal","relinkingTool","myPalette","Palette","layout","GridLayout","Location","model","GraphLinksModel","modelsData","modelsLinks","sorting","Forward","componentDidMount","componentWillUpdate","prevProps","onClickChange","console","log","toJson","render","locationSpot","Center"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport go from 'gojs';\n//import './App.css';\nimport './figure';\nimport dataModels from './modelsDfd'\nimport functionDfd from './functionsDfd'\n\nconst $ = go.GraphObject.make;\nvar myDiagram;\nexport default class GoJs extends Component {\n  constructor(props) {\n    super(props);\n    this.renderCanvas = this.renderCanvas.bind(this);\n    this.state = { myModel: null, myDiagram: null }\n  }\n\n  renderCanvas() {\n    myDiagram = $(go.Diagram, this.refs.goJsDiv, {\n      grid: $(go.Panel, \"Grid\",\n        $(go.Shape, \"LineH\", { stroke: \"gray\", strokeWidth: .9 }),\n        $(go.Shape, \"LineH\", { stroke: \"darkslategray\", strokeWidth: 1.5, interval: 10 }),\n        $(go.Shape, \"LineV\", { stroke: \"gray\", strokeWidth: .9 }),\n        $(go.Shape, \"LineV\", { stroke: \"darkslategray\", strokeWidth: 1.5, interval: 10 })\n      ),\n      \"LinkDrawn\": functionDfd.showLinkLabel,  // this DiagramEvent listener is defined below\n      \"LinkRelinked\":functionDfd.showLinkLabel,\n      \"toolManager.mouseWheelBehavior\": go.ToolManager.WheelZoom,\n      \"draggingTool.isGridSnapEnabled\": true,\n      \"undoManager.isEnabled\": true  // enable undo & redo\n    }\n    );\n\n\n    // define the Node templates for regular nodes\n    myDiagram.nodeTemplateMap.add(\"\", // the default category\n      $(go.Node, \"Table\", this.nodeStyle(),\n        // the main object is a Panel that surrounds a TextBlock with a rectangular Shape\n        $(go.Panel, \"Auto\",\n          $(go.Shape, \"Rectangle\", new go.Binding(\"fill\", \"color\"),\n            {\n              fill: \"#00A9C9\",\n              strokeWidth: 0,\n              portId: \"\",\n              fromLinkable: true, toLinkable: true\n            },\n            new go.Binding(\"figure\", \"figure\")),\n          $(go.TextBlock, this.textStyle(), {\n            margin: 8,\n            maxSize: new go.Size(160, NaN),\n            wrap: go.TextBlock.WrapFit,\n            editable: true\n          },\n            new go.Binding(\"text\").makeTwoWay())\n        ),\n        // four named ports, one on each side:\n         functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.TopSide, false, true),\n         functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.LeftSide, true, true),\n         functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.RightSide, true, true),\n         functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.BottomSide, true, false)\n      ));\n    myDiagram.nodeTemplateMap.add(\"Conditional\",\n      $(go.Node, \"Table\", this.nodeStyle(),\n        // the main object is a Panel that surrounds a TextBlock with a rectangular Shape\n        $(go.Panel, \"Auto\",\n          $(go.Shape, \"Diamond\", {\n            fill: \"#00A9C9\",\n            strokeWidth: 0,\n            portId: \"\",\n            fromLinkable: true, toLinkable: true\n          },\n            new go.Binding(\"figure\", \"figure\")),\n          $(go.TextBlock, this.textStyle(), {\n            margin: 8,\n            maxSize: new go.Size(160, NaN),\n            wrap: go.TextBlock.WrapFit,\n            editable: true\n          },\n            new go.Binding(\"text\").makeTwoWay())\n        ),\n        // four named ports, one on each side:\n         functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\n         functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, true),\n         functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, true),\n         functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\n      ));\n    myDiagram.nodeTemplateMap.add(\"Start\",\n      $(go.Node, \"Table\", this.nodeStyle(),\n        $(go.Panel, \"Auto\",\n          $(go.Shape, \"Circle\",\n            new go.Binding(\"fill\", \"color\"), {\n            minSize: new go.Size(40, 40),\n            strokeWidth: 0,\n            portId: \"\",\n            fromLinkable: true, toLinkable: true\n          }),\n          $(go.TextBlock, \"Start\", this.textStyle(),\n            new go.Binding(\"text\"))\n        ),\n        // three named ports, one on each side except the top, all output only:\n        /* this.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false),\n         this.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false),*/\n         functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\n      ));\n    myDiagram.nodeTemplateMap.add(\"Var\",\n      $(go.Node, \"Table\", this.nodeStyle(),\n        $(go.Panel, \"Auto\",\n          $(go.Shape, \"square\",\n            new go.Binding(\"fill\", \"color\"), {\n            minSize: new go.Size(40, 40),\n            strokeWidth: 0,\n            portId: \"\",\n            fromLinkable: true, toLinkable: true\n          }),\n          $(go.TextBlock, this.textStyle(), { editable: true },\n            new go.Binding(\"text\"))\n        ),\n        // three named ports, one on each side except the top, all output only:\n         functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.TopSide, false, true),\n         functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.LeftSide, true, true),\n         functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.RightSide, true, true),\n         functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.BottomSide, true, false)\n      ));\n\n\n    myDiagram.nodeTemplateMap.add(\"If\",\n      $(go.Node, \"Table\", this.nodeStyle(),\n        $(go.Panel, \"Auto\",\n          $(go.Shape, \"RightTriangle\",\n            new go.Binding(\"fill\", \"color\"), {\n            // angle: 65,\n            // geometryString: \"F M140 0 L70 70 0 50z\",\n            minSize: new go.Size(80, 80),\n            strokeWidth: 0,\n            portId: \"\",\n            fromLinkable: true, toLinkable: true\n          }),\n          $(go.TextBlock, this.textStyle(), { editable: true },\n            new go.Binding(\"text\"))\n        ),\n        // three named ports, one on each side except the top, all output only:\n         functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\n         functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false),\n         functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false),\n         functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\n      ));\n\n    myDiagram.groupTemplate =\n      $(go.Group, \"Auto\", {\n        resizable: true,\n        resizeObjectName: \"PH\"\n      },\n        $(go.Panel, \"Auto\",\n          $(go.Shape, \"RoundedRectangle\",\n            {\n              fill: \"rgba(128,128,128,0.33)\",\n              name: \"PH\",\n            },\n            new go.Binding(\"desiredSize\", \"size\", go.Size.parse).makeTwoWay(go.Size.stringify)),\n          $(go.Placeholder,    // represents the area of all member parts,\n            { padding: 3 }),\n          $(go.TextBlock, { alignment: go.Spot.Right, font: \"Bold 12pt Sans-Serif\" },\n            new go.Binding(\"text\"))\n        ),\n\n        //three named ports, one on each side except the top, all output only:\n         functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\n         functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\n      );\n\n    myDiagram.nodeTemplateMap.add(\"case\",\n      $(go.Node, \"Table\", this.nodeStyle(), new go.Binding(\"location\", \"loc\", go.Point.parse),\n        $(go.Panel, \"Auto\",\n          $(go.Shape, \"RoundedRectangle\",\n            new go.Binding(\"fill\", \"color\"), {\n            // angle: 65,\n            // geometryString: \"F M140 0 L70 70 0 50z\",\n            //minSize: new go.Size(80, 80),\n            fromSpot: go.Spot.Bottom, toSpot: go.Spot.Top,\n            strokeWidth: 0,\n            portId: \"\",\n            fromLinkable: true, toLinkable: true\n          }),\n          $(go.TextBlock, this.textStyle(), { editable: true },\n            new go.Binding(\"text\"))\n        ),\n        // three named ports, one on each side except the top, all output only:\n         functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\n         functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false),\n         functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false),\n         functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\n      ));\n\n    myDiagram.nodeTemplateMap.add(\"switch\",\n      $(go.Node, \"Table\", this.nodeStyle(),\n        $(go.Panel, \"Auto\",\n          $(go.Shape, \"octagon\",\n            new go.Binding(\"fill\", \"color\"), {\n            toSpot: go.Spot.Bottom,\n            minSize: new go.Size(80, 80),\n            strokeWidth: 0\n          }),\n          $(go.TextBlock, this.textStyle(), { editable: true },\n            new go.Binding(\"text\"))\n        ),\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\n      ));\n\n    myDiagram.nodeTemplateMap.add(\"for\",\n      $(go.Node, \"Spot\",\n        $(go.Shape, \"Rectangle\",\n          {\n            fill: \"\",\n            minSize: new go.Size(140, 40),\n            strokeWidth: 0\n          }),\n        $(go.Shape, \"TriangleLeft\", { width: 20, height: 40, fill: \"black\", alignment: go.Spot.Left }),\n        $(go.Shape, \"Rectangle\", { width: 120, height: 40, fill: \"black\" }),\n        $(go.Shape, \"TriangleRight\", { width: 20, height: 40, fill: \"black\", alignment: go.Spot.Right }),\n        $(go.TextBlock, this.textStyle(), { text: \"Inicio\", font: \"bold 8pt Helvetica, Arial, sans-serif\", position: new go.Point(0, 0) }),\n        $(go.TextBlock, this.textStyle(), { editable: true, text: \"3\", font: \"bold 8pt Helvetica, Arial, sans-serif\", position: new go.Point(200, 0) }),\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\n      ));\n    myDiagram.nodeTemplateMap.add(\"End\",\n      $(go.Node, \"Table\", this.nodeStyle(),\n        $(go.Panel, \"Auto\",\n          $(go.Shape, \"Circle\", {\n            minSize: new go.Size(40, 40),\n            fill: \"#DC3C00\",\n            strokeWidth: 0,\n            portId: \"\",\n            fromLinkable: true, toLinkable: true\n          }),\n          $(go.TextBlock, \"End\", this.textStyle(),\n            new go.Binding(\"text\"))\n        ),\n        // three named ports, one on each side except the bottom, all input only:\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, false, true),\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, false, true)\n      ));\n    // taken from ../extensions/Figures.js:\n    go.Shape.defineFigureGenerator(\"File\", function (shape, w, h) {\n      var geo = new go.Geometry();\n      var fig = new go.PathFigure(0, 0, true); // starting point\n      geo.add(fig);\n      fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, 0));\n      fig.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));\n      fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n      fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\n      var fig2 = new go.PathFigure(.75 * w, 0, false);\n      geo.add(fig2);\n      // The Fold\n      fig2.add(new go.PathSegment(go.PathSegment.Line, .75 * w, .25 * h));\n      fig2.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));\n      geo.spot1 = new go.Spot(0, .25);\n      geo.spot2 = go.Spot.BottomRight;\n      return geo;\n    });\n    myDiagram.nodeTemplateMap.add(\"Comment\",\n      $(go.Node, \"Auto\", this.nodeStyle(),\n        $(go.Shape, \"File\", {\n          fill: \"#DEE0A3\",\n          strokeWidth: 0,\n          portId: \"\",\n          fromLinkable: true, toLinkable: true\n        }),\n        $(go.TextBlock, this.textStyle(), {\n          margin: 5,\n          maxSize: new go.Size(200, NaN),\n          wrap: go.TextBlock.WrapFit,\n          textAlign: \"center\",\n          editable: true,\n          font: \"bold 12pt Helvetica, Arial, sans-serif\",\n          stroke: '#454545'\n        },\n          new go.Binding(\"text\").makeTwoWay())\n        // no ports, because no links are allowed to connect with a comment\n      ));\n    // replace the default Link template in the linkTemplateMap\n    myDiagram.linkTemplate = functionDfd.linkTemplate();\n\n    // temporary links used by LinkingTool and RelinkingTool are also orthogonal:\n    myDiagram.toolManager.linkingTool.temporaryLink.routing = go.Link.Orthogonal;\n    myDiagram.toolManager.relinkingTool.temporaryLink.routing = go.Link.Orthogonal;\n\n    // initialize the Palette that is on the left side of the page\n\n    let myPalette = $(go.Palette, \"Diamond\", // must name or refer to the DIV HTML element\n      {\n        layout: $(go.GridLayout, { alignment: go.GridLayout.Location }),\n        nodeTemplateMap: myDiagram.nodeTemplateMap, // share the templates used by myDiagram\n        model: new go.GraphLinksModel(dataModels.modelsData(), dataModels.modelsLinks())\n      });\n\n    myPalette.layout.sorting = go.GridLayout.Forward;\n\n  }\n\n\n  componentDidMount() {\n    //console.log('componentDidMount')\n    this.renderCanvas();\n  }\n\n\n  componentWillUpdate(prevProps) {\n    /*console.log(JSON.stringify(prevProps, null, 2))\n  if (this.props.data !== prevProps.data) {\n     console.log('Updating 2');\n     const model = this.state.myModel;\n     const diagram = this.state.myDiagram;\n     model.nodeDataArray = this.props.data;\n     diagram.model = model;\n     this.setState({ myModel: model, myDiagram: diagram });\n   }*/\n  }\n  onClickChange() {\n    console.log(myDiagram.model.toJson());\n  }\n  render() {\n    return (\n      <div className='container-fluid'>\n        <div className='row'>\n          <div className='col-md-3' id='Diamond' style={{ 'backgroundColor': '#373737' }}></div>\n          <div className='col-md-9 row'>\n            <div id='blockWhite' ></div>\n            <div ref=\"goJsDiv\" id='goJsDiv' className='col-md-12' style={{ 'width': '500px', 'height': '700px', 'backgroundColor': '#373737' }}>\n            </div>\n          </div>\n        </div>\n        <div className='row'>\n          <button className='btn btn-primary' onClick={this.onClickChange}>Save</button>\n        </div>\n      </div>\n    )\n  }\n\n\n \n\n\n  textStyle() {\n    return {\n      font: \"bold 11pt Helvetica, Arial, sans-serif\",\n     \n      stroke: \"whitesmoke\"\n    }\n  }\n\n  nodeStyle() {\n    return [\n      // The Node.location comes from the \"loc\" property of the node data,\n      // converted by the Point.parse static method.\n      // If the Node.location is changed, it updates the \"loc\" property of the node data,\n      // converting back using the Point.stringify static method.\n      new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n        // the Node.location is at the center of each node\n        locationSpot: go.Spot.Center\n      }\n    ];\n  }\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}