{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport go from 'gojs'; //import './App.css';\n\nimport './figure';\nimport dataModels from './modelsDfd';\nimport functionDfd from './functionsDfd';\nimport nodeTemplate from './nodeTemplate';\nconst $ = go.GraphObject.make;\nvar myDiagram;\nexport default class GoJs extends Component {\n  constructor(props) {\n    super(props);\n    this.renderCanvas = this.renderCanvas.bind(this);\n    this.state = {\n      myModel: null,\n      myDiagram: null\n    };\n  }\n\n  renderCanvas() {\n    myDiagram = $(go.Diagram, this.refs.goJsDiv, {\n      grid: $(go.Panel, \"Grid\", $(go.Shape, \"LineH\", {\n        stroke: \"gray\",\n        strokeWidth: .9\n      }), $(go.Shape, \"LineH\", {\n        stroke: \"darkslategray\",\n        strokeWidth: 1.5,\n        interval: 10\n      }), $(go.Shape, \"LineV\", {\n        stroke: \"gray\",\n        strokeWidth: .9\n      }), $(go.Shape, \"LineV\", {\n        stroke: \"darkslategray\",\n        strokeWidth: 1.5,\n        interval: 10\n      })),\n      \"LinkDrawn\": functionDfd.showLinkLabel,\n      // this DiagramEvent listener is defined below\n      \"LinkRelinked\": functionDfd.showLinkLabel,\n      \"toolManager.mouseWheelBehavior\": go.ToolManager.WheelZoom,\n      \"draggingTool.isGridSnapEnabled\": true,\n      \"undoManager.isEnabled\": true // enable undo & redo\n\n    }); // define the Node templates for regular nodes\n\n    myDiagram.nodeTemplateMap.add(\"\", nodeTemplate.defaultGraph()); // the default category\n\n    myDiagram.nodeTemplateMap.add(\"Conditional\", nodeTemplate.conditionalGraph());\n    myDiagram.nodeTemplateMap.add(\"Start\", nodeTemplate.startGraph());\n    myDiagram.nodeTemplateMap.add(\"Var\", nodeTemplate.varGraph());\n    myDiagram.nodeTemplateMap.add(\"If\", nodeTemplate.ifGraph());\n    myDiagram.nodeTemplateMap.add(\"case\", nodeTemplate.caseGraph());\n    myDiagram.nodeTemplateMap.add(\"switch\", nodeTemplate.switchGraph());\n    myDiagram.nodeTemplateMap.add(\"for\", nodeTemplate.forGraph());\n    myDiagram.nodeTemplateMap.add(\"End\", nodeTemplate.endGraph());\n    myDiagram.nodeTemplateMap.add(\"Comment\", nodeTemplate.commentGraph()); // taken from ../extensions/Figures.js:\n\n    go.Shape.defineFigureGenerator(\"File\", function (shape, w, h) {\n      var geo = new go.Geometry();\n      var fig = new go.PathFigure(0, 0, true); // starting point\n\n      geo.add(fig);\n      fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, 0));\n      fig.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));\n      fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n      fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\n      var fig2 = new go.PathFigure(.75 * w, 0, false);\n      geo.add(fig2); // The Fold\n\n      fig2.add(new go.PathSegment(go.PathSegment.Line, .75 * w, .25 * h));\n      fig2.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));\n      geo.spot1 = new go.Spot(0, .25);\n      geo.spot2 = go.Spot.BottomRight;\n      return geo;\n    });\n    myDiagram.groupTemplate = $(go.Group, \"Auto\", {\n      resizable: true,\n      resizeObjectName: \"PH\"\n    }, $(go.Panel, \"Auto\", $(go.Shape, \"RoundedRectangle\", {\n      fill: \"rgba(128,128,128,0.33)\",\n      name: \"PH\"\n    }, new go.Binding(\"desiredSize\", \"size\", go.Size.parse).makeTwoWay(go.Size.stringify)), $(go.Placeholder, // represents the area of all member parts,\n    {\n      padding: 3\n    }), $(go.TextBlock, {\n      alignment: go.Spot.Right,\n      font: \"Bold 12pt Sans-Serif\"\n    }, new go.Binding(\"text\"))), //three named ports, one on each side except the top, all output only:\n    functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true), functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)); // replace the default Link template in the linkTemplateMap\n\n    myDiagram.linkTemplate = functionDfd.linkTemplate(); // temporary links used by LinkingTool and RelinkingTool are also orthogonal:\n\n    myDiagram.toolManager.linkingTool.temporaryLink.routing = go.Link.Orthogonal;\n    myDiagram.toolManager.relinkingTool.temporaryLink.routing = go.Link.Orthogonal; // initialize the Palette that is on the left side of the page\n\n    let myPalette = $(go.Palette, \"Diamond\", // must name or refer to the DIV HTML element\n    {\n      layout: $(go.GridLayout, {\n        alignment: go.GridLayout.Location\n      }),\n      nodeTemplateMap: myDiagram.nodeTemplateMap,\n      // share the templates used by myDiagram\n      model: new go.GraphLinksModel(dataModels.modelsData(), dataModels.modelsLinks())\n    });\n    myPalette.layout.sorting = go.GridLayout.Forward;\n  }\n\n  componentDidMount() {\n    //console.log('componentDidMount')\n    this.renderCanvas();\n  }\n\n  componentWillUpdate(prevProps) {\n    /*console.log(JSON.stringify(prevProps, null, 2))\n    if (this.props.data !== prevProps.data) {\n     console.log('Updating 2');\n     const model = this.state.myModel;\n     const diagram = this.state.myDiagram;\n     model.nodeDataArray = this.props.data;\n     diagram.model = model;\n     this.setState({ myModel: model, myDiagram: diagram });\n    }*/\n  }\n\n  onClickChange() {\n    console.log(myDiagram.model.toJson());\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"container-fluid\"\n    }, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-md-3\",\n      id: \"Diamond\",\n      style: {\n        'backgroundColor': '#373737'\n      }\n    }), __jsx(\"div\", {\n      className: \"col-md-9 row\"\n    }, __jsx(\"div\", {\n      id: \"blockWhite\"\n    }), __jsx(\"div\", {\n      ref: \"goJsDiv\",\n      id: \"goJsDiv\",\n      className: \"col-md-12\",\n      style: {\n        'width': '500px',\n        'height': '700px',\n        'backgroundColor': '#373737'\n      }\n    }))), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.onClickChange\n    }, \"Save\")));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/LENOVO/Documents/teoria/Views/pages/Components/Dfd.jsx"],"names":["React","Component","go","dataModels","functionDfd","nodeTemplate","$","GraphObject","make","myDiagram","GoJs","constructor","props","renderCanvas","bind","state","myModel","Diagram","refs","goJsDiv","grid","Panel","Shape","stroke","strokeWidth","interval","showLinkLabel","ToolManager","WheelZoom","nodeTemplateMap","add","defaultGraph","conditionalGraph","startGraph","varGraph","ifGraph","caseGraph","switchGraph","forGraph","endGraph","commentGraph","defineFigureGenerator","shape","w","h","geo","Geometry","fig","PathFigure","PathSegment","Line","close","fig2","spot1","Spot","spot2","BottomRight","groupTemplate","Group","resizable","resizeObjectName","fill","name","Binding","Size","parse","makeTwoWay","stringify","Placeholder","padding","TextBlock","alignment","Right","font","makePort","Top","Bottom","linkTemplate","toolManager","linkingTool","temporaryLink","routing","Link","Orthogonal","relinkingTool","myPalette","Palette","layout","GridLayout","Location","model","GraphLinksModel","modelsData","modelsLinks","sorting","Forward","componentDidMount","componentWillUpdate","prevProps","onClickChange","console","log","toJson","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport go from 'gojs';\n//import './App.css';\nimport './figure';\nimport dataModels from './modelsDfd'\nimport functionDfd from './functionsDfd'\nimport nodeTemplate from './nodeTemplate'\n\nconst $ = go.GraphObject.make;\nvar myDiagram;\nexport default class GoJs extends Component {\n  constructor(props) {\n    super(props);\n    this.renderCanvas = this.renderCanvas.bind(this);\n    this.state = { myModel: null, myDiagram: null }\n  }\n\n  renderCanvas() {\n    myDiagram = $(go.Diagram, this.refs.goJsDiv, {\n      grid: $(go.Panel, \"Grid\",\n        $(go.Shape, \"LineH\", { stroke: \"gray\", strokeWidth: .9 }),\n        $(go.Shape, \"LineH\", { stroke: \"darkslategray\", strokeWidth: 1.5, interval: 10 }),\n        $(go.Shape, \"LineV\", { stroke: \"gray\", strokeWidth: .9 }),\n        $(go.Shape, \"LineV\", { stroke: \"darkslategray\", strokeWidth: 1.5, interval: 10 })\n      ),\n      \"LinkDrawn\": functionDfd.showLinkLabel,  // this DiagramEvent listener is defined below\n      \"LinkRelinked\": functionDfd.showLinkLabel,\n      \"toolManager.mouseWheelBehavior\": go.ToolManager.WheelZoom,\n      \"draggingTool.isGridSnapEnabled\": true,\n      \"undoManager.isEnabled\": true  // enable undo & redo\n    }\n    );\n\n    // define the Node templates for regular nodes\n    myDiagram.nodeTemplateMap.add(\"\", nodeTemplate.defaultGraph());  // the default category\n    myDiagram.nodeTemplateMap.add(\"Conditional\", nodeTemplate.conditionalGraph());\n    myDiagram.nodeTemplateMap.add(\"Start\", nodeTemplate.startGraph());\n    myDiagram.nodeTemplateMap.add(\"Var\", nodeTemplate.varGraph());\n    myDiagram.nodeTemplateMap.add(\"If\", nodeTemplate.ifGraph());\n    myDiagram.nodeTemplateMap.add(\"case\", nodeTemplate.caseGraph());\n    myDiagram.nodeTemplateMap.add(\"switch\", nodeTemplate.switchGraph());\n    myDiagram.nodeTemplateMap.add(\"for\", nodeTemplate.forGraph());\n    myDiagram.nodeTemplateMap.add(\"End\", nodeTemplate.endGraph());\n    myDiagram.nodeTemplateMap.add(\"Comment\", nodeTemplate.commentGraph());\n    \n    // taken from ../extensions/Figures.js:\n    go.Shape.defineFigureGenerator(\"File\", function (shape, w, h) {\n      var geo = new go.Geometry();\n      var fig = new go.PathFigure(0, 0, true); // starting point\n      geo.add(fig);\n      fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, 0));\n      fig.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));\n      fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n      fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\n      var fig2 = new go.PathFigure(.75 * w, 0, false);\n      geo.add(fig2);\n      // The Fold\n      fig2.add(new go.PathSegment(go.PathSegment.Line, .75 * w, .25 * h));\n      fig2.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));\n      geo.spot1 = new go.Spot(0, .25);\n      geo.spot2 = go.Spot.BottomRight;\n      return geo;\n    });\n    \n\n\n    myDiagram.groupTemplate =\n      $(go.Group, \"Auto\", {\n        resizable: true,\n        resizeObjectName: \"PH\"\n      },\n        $(go.Panel, \"Auto\",\n          $(go.Shape, \"RoundedRectangle\",\n            {\n              fill: \"rgba(128,128,128,0.33)\",\n              name: \"PH\",\n            },\n            new go.Binding(\"desiredSize\", \"size\", go.Size.parse).makeTwoWay(go.Size.stringify)),\n          $(go.Placeholder,    // represents the area of all member parts,\n            { padding: 3 }),\n          $(go.TextBlock, { alignment: go.Spot.Right, font: \"Bold 12pt Sans-Serif\" },\n            new go.Binding(\"text\"))\n        ),\n\n        //three named ports, one on each side except the top, all output only:\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\n      );\n\n\n    // replace the default Link template in the linkTemplateMap\n    myDiagram.linkTemplate = functionDfd.linkTemplate();\n\n    // temporary links used by LinkingTool and RelinkingTool are also orthogonal:\n    myDiagram.toolManager.linkingTool.temporaryLink.routing = go.Link.Orthogonal;\n    myDiagram.toolManager.relinkingTool.temporaryLink.routing = go.Link.Orthogonal;\n\n    // initialize the Palette that is on the left side of the page\n\n    let myPalette = $(go.Palette, \"Diamond\", // must name or refer to the DIV HTML element\n      {\n        layout: $(go.GridLayout, { alignment: go.GridLayout.Location }),\n        nodeTemplateMap: myDiagram.nodeTemplateMap, // share the templates used by myDiagram\n        model: new go.GraphLinksModel(dataModels.modelsData(), dataModels.modelsLinks())\n      });\n\n    myPalette.layout.sorting = go.GridLayout.Forward;\n\n  }\n\n\n  componentDidMount() {\n    //console.log('componentDidMount')\n    this.renderCanvas();\n  }\n\n\n  componentWillUpdate(prevProps) {\n    /*console.log(JSON.stringify(prevProps, null, 2))\n  if (this.props.data !== prevProps.data) {\n     console.log('Updating 2');\n     const model = this.state.myModel;\n     const diagram = this.state.myDiagram;\n     model.nodeDataArray = this.props.data;\n     diagram.model = model;\n     this.setState({ myModel: model, myDiagram: diagram });\n   }*/\n  }\n  onClickChange() {\n    console.log(myDiagram.model.toJson());\n  }\n  render() {\n    return (\n      <div className='container-fluid'>\n        <div className='row'>\n          <div className='col-md-3' id='Diamond' style={{ 'backgroundColor': '#373737' }}></div>\n          <div className='col-md-9 row'>\n            <div id='blockWhite' ></div>\n            <div ref=\"goJsDiv\" id='goJsDiv' className='col-md-12' style={{ 'width': '500px', 'height': '700px', 'backgroundColor': '#373737' }}>\n            </div>\n          </div>\n        </div>\n        <div className='row'>\n          <button className='btn btn-primary' onClick={this.onClickChange}>Save</button>\n        </div>\n      </div>\n    )\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}