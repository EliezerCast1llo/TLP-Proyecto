{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport go from 'gojs'; //import './App.css';\n\nimport './figure';\nimport dataModels from './modelsDfd';\nimport functionDfd from './functionsDfd';\nimport nodeTemplate from './nodeTemplate';\nconst $ = go.GraphObject.make;\nvar myDiagram;\nexport default class GoJs extends Component {\n  constructor(props) {\n    super(props);\n    this.renderCanvas = this.renderCanvas.bind(this);\n    this.state = {\n      myModel: null,\n      myDiagram: null\n    };\n  }\n\n  renderCanvas() {\n    myDiagram = $(go.Diagram, this.refs.goJsDiv, {\n      grid: $(go.Panel, \"Grid\", $(go.Shape, \"LineH\", {\n        stroke: \"gray\",\n        strokeWidth: .9\n      }), $(go.Shape, \"LineH\", {\n        stroke: \"darkslategray\",\n        strokeWidth: 1.5,\n        interval: 10\n      }), $(go.Shape, \"LineV\", {\n        stroke: \"gray\",\n        strokeWidth: .9\n      }), $(go.Shape, \"LineV\", {\n        stroke: \"darkslategray\",\n        strokeWidth: 1.5,\n        interval: 10\n      })),\n      \"LinkDrawn\": functionDfd.showLinkLabel,\n      // this DiagramEvent listener is defined below\n      \"LinkRelinked\": functionDfd.showLinkLabel,\n      \"toolManager.mouseWheelBehavior\": go.ToolManager.WheelZoom,\n      \"draggingTool.isGridSnapEnabled\": true,\n      \"undoManager.isEnabled\": true // enable undo & redo\n\n    }); // define the Node templates for regular nodes\n\n    myDiagram.nodeTemplateMap.add(\"\", nodeTemplate.defaultGraph()); // the default category\n\n    myDiagram.nodeTemplateMap.add(\"Conditional\", nodeTemplate.conditionalGraph());\n    myDiagram.nodeTemplateMap.add(\"Start\", nodeTemplate.startGraph());\n    myDiagram.nodeTemplateMap.add(\"Var\", nodeTemplate.varGraph());\n    myDiagram.nodeTemplateMap.add(\"If\", nodeTemplate.ifGraph());\n    myDiagram.groupTemplate = $(go.Group, \"Auto\", {\n      resizable: true,\n      resizeObjectName: \"PH\"\n    }, $(go.Panel, \"Auto\", $(go.Shape, \"RoundedRectangle\", {\n      fill: \"rgba(128,128,128,0.33)\",\n      name: \"PH\"\n    }, new go.Binding(\"desiredSize\", \"size\", go.Size.parse).makeTwoWay(go.Size.stringify)), $(go.Placeholder, // represents the area of all member parts,\n    {\n      padding: 3\n    }), $(go.TextBlock, {\n      alignment: go.Spot.Right,\n      font: \"Bold 12pt Sans-Serif\"\n    }, new go.Binding(\"text\"))), //three named ports, one on each side except the top, all output only:\n    functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true), functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false));\n    myDiagram.nodeTemplateMap.add(\"case\", $(go.Node, \"Table\", functionDfd.nodeStyle(), new go.Binding(\"location\", \"loc\", go.Point.parse), $(go.Panel, \"Auto\", $(go.Shape, \"RoundedRectangle\", new go.Binding(\"fill\", \"color\"), {\n      // angle: 65,\n      // geometryString: \"F M140 0 L70 70 0 50z\",\n      //minSize: new go.Size(80, 80),\n      fromSpot: go.Spot.Bottom,\n      toSpot: go.Spot.Top,\n      strokeWidth: 0,\n      portId: \"\",\n      fromLinkable: true,\n      toLinkable: true\n    }), $(go.TextBlock, functionDfd.textStyle(), {\n      editable: true\n    }, new go.Binding(\"text\"))), // three named ports, one on each side except the top, all output only:\n    functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true), functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false), functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false), functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)));\n    myDiagram.nodeTemplateMap.add(\"switch\", $(go.Node, \"Table\", functionDfd.nodeStyle(), $(go.Panel, \"Auto\", $(go.Shape, \"octagon\", new go.Binding(\"fill\", \"color\"), {\n      toSpot: go.Spot.Bottom,\n      minSize: new go.Size(80, 80),\n      strokeWidth: 0\n    }), $(go.TextBlock, functionDfd.textStyle(), {\n      editable: true\n    }, new go.Binding(\"text\"))), functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)));\n    myDiagram.nodeTemplateMap.add(\"for\", $(go.Node, \"Spot\", $(go.Shape, \"Rectangle\", {\n      fill: \"\",\n      minSize: new go.Size(140, 40),\n      strokeWidth: 0\n    }), $(go.Shape, \"TriangleLeft\", {\n      width: 20,\n      height: 40,\n      fill: \"black\",\n      alignment: go.Spot.Left\n    }), $(go.Shape, \"Rectangle\", {\n      width: 120,\n      height: 40,\n      fill: \"black\"\n    }), $(go.Shape, \"TriangleRight\", {\n      width: 20,\n      height: 40,\n      fill: \"black\",\n      alignment: go.Spot.Right\n    }), $(go.TextBlock, functionDfd.textStyle(), {\n      text: \"Inicio\",\n      font: \"bold 8pt Helvetica, Arial, sans-serif\",\n      position: new go.Point(0, 0)\n    }), $(go.TextBlock, functionDfd.textStyle(), {\n      editable: true,\n      text: \"3\",\n      font: \"bold 8pt Helvetica, Arial, sans-serif\",\n      position: new go.Point(200, 0)\n    }), functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)));\n    myDiagram.nodeTemplateMap.add(\"End\", $(go.Node, \"Table\", functionDfd.nodeStyle(), $(go.Panel, \"Auto\", $(go.Shape, \"Circle\", {\n      minSize: new go.Size(40, 40),\n      fill: \"#DC3C00\",\n      strokeWidth: 0,\n      portId: \"\",\n      fromLinkable: true,\n      toLinkable: true\n    }), $(go.TextBlock, \"End\", functionDfd.textStyle(), new go.Binding(\"text\"))), // three named ports, one on each side except the bottom, all input only:\n    functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true), functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, false, true), functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, false, true))); // taken from ../extensions/Figures.js:\n\n    go.Shape.defineFigureGenerator(\"File\", function (shape, w, h) {\n      var geo = new go.Geometry();\n      var fig = new go.PathFigure(0, 0, true); // starting point\n\n      geo.add(fig);\n      fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, 0));\n      fig.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));\n      fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n      fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\n      var fig2 = new go.PathFigure(.75 * w, 0, false);\n      geo.add(fig2); // The Fold\n\n      fig2.add(new go.PathSegment(go.PathSegment.Line, .75 * w, .25 * h));\n      fig2.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));\n      geo.spot1 = new go.Spot(0, .25);\n      geo.spot2 = go.Spot.BottomRight;\n      return geo;\n    });\n    myDiagram.nodeTemplateMap.add(\"Comment\", $(go.Node, \"Auto\", functionDfd.nodeStyle(), $(go.Shape, \"File\", {\n      fill: \"#DEE0A3\",\n      strokeWidth: 0,\n      portId: \"\",\n      fromLinkable: true,\n      toLinkable: true\n    }), $(go.TextBlock, functionDfd.textStyle(), {\n      margin: 5,\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      textAlign: \"center\",\n      editable: true,\n      font: \"bold 12pt Helvetica, Arial, sans-serif\",\n      stroke: '#454545'\n    }, new go.Binding(\"text\").makeTwoWay()) // no ports, because no links are allowed to connect with a comment\n    )); // replace the default Link template in the linkTemplateMap\n\n    myDiagram.linkTemplate = functionDfd.linkTemplate(); // temporary links used by LinkingTool and RelinkingTool are also orthogonal:\n\n    myDiagram.toolManager.linkingTool.temporaryLink.routing = go.Link.Orthogonal;\n    myDiagram.toolManager.relinkingTool.temporaryLink.routing = go.Link.Orthogonal; // initialize the Palette that is on the left side of the page\n\n    let myPalette = $(go.Palette, \"Diamond\", // must name or refer to the DIV HTML element\n    {\n      layout: $(go.GridLayout, {\n        alignment: go.GridLayout.Location\n      }),\n      nodeTemplateMap: myDiagram.nodeTemplateMap,\n      // share the templates used by myDiagram\n      model: new go.GraphLinksModel(dataModels.modelsData(), dataModels.modelsLinks())\n    });\n    myPalette.layout.sorting = go.GridLayout.Forward;\n  }\n\n  componentDidMount() {\n    //console.log('componentDidMount')\n    this.renderCanvas();\n  }\n\n  componentWillUpdate(prevProps) {\n    /*console.log(JSON.stringify(prevProps, null, 2))\n    if (this.props.data !== prevProps.data) {\n     console.log('Updating 2');\n     const model = this.state.myModel;\n     const diagram = this.state.myDiagram;\n     model.nodeDataArray = this.props.data;\n     diagram.model = model;\n     this.setState({ myModel: model, myDiagram: diagram });\n    }*/\n  }\n\n  onClickChange() {\n    console.log(myDiagram.model.toJson());\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"container-fluid\"\n    }, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-md-3\",\n      id: \"Diamond\",\n      style: {\n        'backgroundColor': '#373737'\n      }\n    }), __jsx(\"div\", {\n      className: \"col-md-9 row\"\n    }, __jsx(\"div\", {\n      id: \"blockWhite\"\n    }), __jsx(\"div\", {\n      ref: \"goJsDiv\",\n      id: \"goJsDiv\",\n      className: \"col-md-12\",\n      style: {\n        'width': '500px',\n        'height': '700px',\n        'backgroundColor': '#373737'\n      }\n    }))), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.onClickChange\n    }, \"Save\")));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/LENOVO/Documents/teoria/Views/pages/Components/Dfd.jsx"],"names":["React","Component","go","dataModels","functionDfd","nodeTemplate","$","GraphObject","make","myDiagram","GoJs","constructor","props","renderCanvas","bind","state","myModel","Diagram","refs","goJsDiv","grid","Panel","Shape","stroke","strokeWidth","interval","showLinkLabel","ToolManager","WheelZoom","nodeTemplateMap","add","defaultGraph","conditionalGraph","startGraph","varGraph","ifGraph","groupTemplate","Group","resizable","resizeObjectName","fill","name","Binding","Size","parse","makeTwoWay","stringify","Placeholder","padding","TextBlock","alignment","Spot","Right","font","makePort","Top","Bottom","Node","nodeStyle","Point","fromSpot","toSpot","portId","fromLinkable","toLinkable","textStyle","editable","Left","minSize","width","height","text","position","defineFigureGenerator","shape","w","h","geo","Geometry","fig","PathFigure","PathSegment","Line","close","fig2","spot1","spot2","BottomRight","margin","maxSize","NaN","wrap","WrapFit","textAlign","linkTemplate","toolManager","linkingTool","temporaryLink","routing","Link","Orthogonal","relinkingTool","myPalette","Palette","layout","GridLayout","Location","model","GraphLinksModel","modelsData","modelsLinks","sorting","Forward","componentDidMount","componentWillUpdate","prevProps","onClickChange","console","log","toJson","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport go from 'gojs';\n//import './App.css';\nimport './figure';\nimport dataModels from './modelsDfd'\nimport functionDfd from './functionsDfd'\nimport nodeTemplate from './nodeTemplate'\n\nconst $ = go.GraphObject.make;\nvar myDiagram;\nexport default class GoJs extends Component {\n  constructor(props) {\n    super(props);\n    this.renderCanvas = this.renderCanvas.bind(this);\n    this.state = { myModel: null, myDiagram: null }\n  }\n\n  renderCanvas() {\n    myDiagram = $(go.Diagram, this.refs.goJsDiv, {\n      grid: $(go.Panel, \"Grid\",\n        $(go.Shape, \"LineH\", { stroke: \"gray\", strokeWidth: .9 }),\n        $(go.Shape, \"LineH\", { stroke: \"darkslategray\", strokeWidth: 1.5, interval: 10 }),\n        $(go.Shape, \"LineV\", { stroke: \"gray\", strokeWidth: .9 }),\n        $(go.Shape, \"LineV\", { stroke: \"darkslategray\", strokeWidth: 1.5, interval: 10 })\n      ),\n      \"LinkDrawn\": functionDfd.showLinkLabel,  // this DiagramEvent listener is defined below\n      \"LinkRelinked\": functionDfd.showLinkLabel,\n      \"toolManager.mouseWheelBehavior\": go.ToolManager.WheelZoom,\n      \"draggingTool.isGridSnapEnabled\": true,\n      \"undoManager.isEnabled\": true  // enable undo & redo\n    }\n    );\n\n\n    // define the Node templates for regular nodes\n    myDiagram.nodeTemplateMap.add(\"\", nodeTemplate.defaultGraph());  // the default category\n    myDiagram.nodeTemplateMap.add(\"Conditional\", nodeTemplate.conditionalGraph());\n    myDiagram.nodeTemplateMap.add(\"Start\", nodeTemplate.startGraph());\n    myDiagram.nodeTemplateMap.add(\"Var\", nodeTemplate.varGraph());\n    myDiagram.nodeTemplateMap.add(\"If\", nodeTemplate.ifGraph());\n\n    myDiagram.groupTemplate =\n      $(go.Group, \"Auto\", {\n        resizable: true,\n        resizeObjectName: \"PH\"\n      },\n        $(go.Panel, \"Auto\",\n          $(go.Shape, \"RoundedRectangle\",\n            {\n              fill: \"rgba(128,128,128,0.33)\",\n              name: \"PH\",\n            },\n            new go.Binding(\"desiredSize\", \"size\", go.Size.parse).makeTwoWay(go.Size.stringify)),\n          $(go.Placeholder,    // represents the area of all member parts,\n            { padding: 3 }),\n          $(go.TextBlock, { alignment: go.Spot.Right, font: \"Bold 12pt Sans-Serif\" },\n            new go.Binding(\"text\"))\n        ),\n\n        //three named ports, one on each side except the top, all output only:\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\n      );\n\n    myDiagram.nodeTemplateMap.add(\"case\",\n      $(go.Node, \"Table\", functionDfd.nodeStyle(), new go.Binding(\"location\", \"loc\", go.Point.parse),\n        $(go.Panel, \"Auto\",\n          $(go.Shape, \"RoundedRectangle\",\n            new go.Binding(\"fill\", \"color\"), {\n            // angle: 65,\n            // geometryString: \"F M140 0 L70 70 0 50z\",\n            //minSize: new go.Size(80, 80),\n            fromSpot: go.Spot.Bottom, toSpot: go.Spot.Top,\n            strokeWidth: 0,\n            portId: \"\",\n            fromLinkable: true, toLinkable: true\n          }),\n          $(go.TextBlock, functionDfd.textStyle(), { editable: true },\n            new go.Binding(\"text\"))\n        ),\n        // three named ports, one on each side except the top, all output only:\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false),\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false),\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\n      ));\n\n    myDiagram.nodeTemplateMap.add(\"switch\",\n      $(go.Node, \"Table\", functionDfd.nodeStyle(),\n        $(go.Panel, \"Auto\",\n          $(go.Shape, \"octagon\",\n            new go.Binding(\"fill\", \"color\"), {\n            toSpot: go.Spot.Bottom,\n            minSize: new go.Size(80, 80),\n            strokeWidth: 0\n          }),\n          $(go.TextBlock, functionDfd.textStyle(), { editable: true },\n            new go.Binding(\"text\"))\n        ),\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\n      ));\n\n    myDiagram.nodeTemplateMap.add(\"for\",\n      $(go.Node, \"Spot\",\n        $(go.Shape, \"Rectangle\",\n          {\n            fill: \"\",\n            minSize: new go.Size(140, 40),\n            strokeWidth: 0\n          }),\n        $(go.Shape, \"TriangleLeft\", { width: 20, height: 40, fill: \"black\", alignment: go.Spot.Left }),\n        $(go.Shape, \"Rectangle\", { width: 120, height: 40, fill: \"black\" }),\n        $(go.Shape, \"TriangleRight\", { width: 20, height: 40, fill: \"black\", alignment: go.Spot.Right }),\n        $(go.TextBlock, functionDfd.textStyle(), { text: \"Inicio\", font: \"bold 8pt Helvetica, Arial, sans-serif\", position: new go.Point(0, 0) }),\n        $(go.TextBlock, functionDfd.textStyle(), { editable: true, text: \"3\", font: \"bold 8pt Helvetica, Arial, sans-serif\", position: new go.Point(200, 0) }),\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\n      ));\n    myDiagram.nodeTemplateMap.add(\"End\",\n      $(go.Node, \"Table\", functionDfd.nodeStyle(),\n        $(go.Panel, \"Auto\",\n          $(go.Shape, \"Circle\", {\n            minSize: new go.Size(40, 40),\n            fill: \"#DC3C00\",\n            strokeWidth: 0,\n            portId: \"\",\n            fromLinkable: true, toLinkable: true\n          }),\n          $(go.TextBlock, \"End\", functionDfd.textStyle(),\n            new go.Binding(\"text\"))\n        ),\n        // three named ports, one on each side except the bottom, all input only:\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, false, true),\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, false, true)\n      ));\n    // taken from ../extensions/Figures.js:\n    go.Shape.defineFigureGenerator(\"File\", function (shape, w, h) {\n      var geo = new go.Geometry();\n      var fig = new go.PathFigure(0, 0, true); // starting point\n      geo.add(fig);\n      fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, 0));\n      fig.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));\n      fig.add(new go.PathSegment(go.PathSegment.Line, w, h));\n      fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());\n      var fig2 = new go.PathFigure(.75 * w, 0, false);\n      geo.add(fig2);\n      // The Fold\n      fig2.add(new go.PathSegment(go.PathSegment.Line, .75 * w, .25 * h));\n      fig2.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));\n      geo.spot1 = new go.Spot(0, .25);\n      geo.spot2 = go.Spot.BottomRight;\n      return geo;\n    });\n    myDiagram.nodeTemplateMap.add(\"Comment\",\n      $(go.Node, \"Auto\", functionDfd.nodeStyle(),\n        $(go.Shape, \"File\", {\n          fill: \"#DEE0A3\",\n          strokeWidth: 0,\n          portId: \"\",\n          fromLinkable: true, toLinkable: true\n        }),\n        $(go.TextBlock, functionDfd.textStyle(), {\n          margin: 5,\n          maxSize: new go.Size(200, NaN),\n          wrap: go.TextBlock.WrapFit,\n          textAlign: \"center\",\n          editable: true,\n          font: \"bold 12pt Helvetica, Arial, sans-serif\",\n          stroke: '#454545'\n        },\n          new go.Binding(\"text\").makeTwoWay())\n        // no ports, because no links are allowed to connect with a comment\n      ));\n    // replace the default Link template in the linkTemplateMap\n    myDiagram.linkTemplate = functionDfd.linkTemplate();\n\n    // temporary links used by LinkingTool and RelinkingTool are also orthogonal:\n    myDiagram.toolManager.linkingTool.temporaryLink.routing = go.Link.Orthogonal;\n    myDiagram.toolManager.relinkingTool.temporaryLink.routing = go.Link.Orthogonal;\n\n    // initialize the Palette that is on the left side of the page\n\n    let myPalette = $(go.Palette, \"Diamond\", // must name or refer to the DIV HTML element\n      {\n        layout: $(go.GridLayout, { alignment: go.GridLayout.Location }),\n        nodeTemplateMap: myDiagram.nodeTemplateMap, // share the templates used by myDiagram\n        model: new go.GraphLinksModel(dataModels.modelsData(), dataModels.modelsLinks())\n      });\n\n    myPalette.layout.sorting = go.GridLayout.Forward;\n\n  }\n\n\n  componentDidMount() {\n    //console.log('componentDidMount')\n    this.renderCanvas();\n  }\n\n\n  componentWillUpdate(prevProps) {\n    /*console.log(JSON.stringify(prevProps, null, 2))\n  if (this.props.data !== prevProps.data) {\n     console.log('Updating 2');\n     const model = this.state.myModel;\n     const diagram = this.state.myDiagram;\n     model.nodeDataArray = this.props.data;\n     diagram.model = model;\n     this.setState({ myModel: model, myDiagram: diagram });\n   }*/\n  }\n  onClickChange() {\n    console.log(myDiagram.model.toJson());\n  }\n  render() {\n    return (\n      <div className='container-fluid'>\n        <div className='row'>\n          <div className='col-md-3' id='Diamond' style={{ 'backgroundColor': '#373737' }}></div>\n          <div className='col-md-9 row'>\n            <div id='blockWhite' ></div>\n            <div ref=\"goJsDiv\" id='goJsDiv' className='col-md-12' style={{ 'width': '500px', 'height': '700px', 'backgroundColor': '#373737' }}>\n            </div>\n          </div>\n        </div>\n        <div className='row'>\n          <button className='btn btn-primary' onClick={this.onClickChange}>Save</button>\n        </div>\n      </div>\n    )\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}