{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _gojs = _interopRequireDefault(require(\"gojs\"));\n\nvar _functionsDfd = _interopRequireDefault(require(\"./functionsDfd\"));\n\nconst $ = _gojs.default.GraphObject.make; // the default category\n\nfunction defaultGraph() {\n  return $(_gojs.default.Node, \"Spot\", _functionsDfd.default.nodeStyle(), // the main object is a Panel that surrounds a TextBlock with a rectangular Shape\n  $(_gojs.default.Panel, \"Auto\", $(_gojs.default.Shape, \"Rectangle\", new _gojs.default.Binding(\"fill\", \"color\"), {\n    fill: \"#00A9C9\",\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }), $(_gojs.default.TextBlock, _functionsDfd.default.textStyle(), {\n    margin: 5,\n    editable: true\n  }, new _gojs.default.Binding(\"text\").makeTwoWay())), // four named ports, one on each side:\n  _functionsDfd.default.makePort(\"T\", _gojs.default.Spot.Top, _gojs.default.Spot.TopSide, false, true), _functionsDfd.default.makePort(\"L\", _gojs.default.Spot.Left, _gojs.default.Spot.LeftSide, true, true), _functionsDfd.default.makePort(\"R\", _gojs.default.Spot.Right, _gojs.default.Spot.RightSide, true, true), _functionsDfd.default.makePort(\"B\", _gojs.default.Spot.Bottom, _gojs.default.Spot.BottomSide, true, false));\n}\n\nfunction conditionalGraph() {\n  return $(_gojs.default.Node, \"Spot\", _functionsDfd.default.nodeStyle(), {\n    locationSpot: _gojs.default.Spot.Center\n  }, // the main object is a Panel that surrounds a TextBlock with a rectangular Shape\n  $(_gojs.default.Panel, \"Auto\", $(_gojs.default.Shape, \"Diamond\", {\n    fill: \"#00A9C9\",\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }), $(_gojs.default.TextBlock, _functionsDfd.default.textStyle(), {\n    margin: 8,\n    editable: true\n  }, new _gojs.default.Binding(\"text\").makeTwoWay())), // four named ports, one on each side:\n  _functionsDfd.default.makePort(\"T\", _gojs.default.Spot.Top, _gojs.default.Spot.Top, false, true), _functionsDfd.default.makePort(\"L\", _gojs.default.Spot.Left, _gojs.default.Spot.Left, true, true), _functionsDfd.default.makePort(\"R\", _gojs.default.Spot.Right, _gojs.default.Spot.Right, true, true), _functionsDfd.default.makePort(\"B\", _gojs.default.Spot.Bottom, _gojs.default.Spot.Bottom, true, false));\n}\n\nfunction startGraph() {\n  return $(_gojs.default.Node, \"Spot\", _functionsDfd.default.nodeStyle(), $(_gojs.default.Panel, \"Auto\", $(_gojs.default.Shape, \"Circle\", new _gojs.default.Binding(\"fill\", \"color\"), {\n    minSize: new _gojs.default.Size(40, 40),\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }), $(_gojs.default.TextBlock, \"Start\", _functionsDfd.default.textStyle(), new _gojs.default.Binding(\"text\"))), _functionsDfd.default.makePort(\"B\", _gojs.default.Spot.Bottom, _gojs.default.Spot.Bottom, true, false));\n}\n\nfunction varGraph() {\n  return $(_gojs.default.Node, \"Spot\", _functionsDfd.default.nodeStyle(), $(_gojs.default.Panel, \"Auto\", $(_gojs.default.Shape, \"square\", new _gojs.default.Binding(\"fill\", \"color\"), {\n    minSize: new _gojs.default.Size(40, 40),\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }), $(_gojs.default.TextBlock, _functionsDfd.default.textStyle(), {\n    editable: true\n  }, new _gojs.default.Binding(\"text\"))), // three named ports, one on each side except the top, all output only:\n  _functionsDfd.default.makePort(\"T\", _gojs.default.Spot.Top, _gojs.default.Spot.TopSide, false, true), _functionsDfd.default.makePort(\"L\", _gojs.default.Spot.Left, _gojs.default.Spot.LeftSide, true, true), _functionsDfd.default.makePort(\"R\", _gojs.default.Spot.Right, _gojs.default.Spot.RightSide, true, true), _functionsDfd.default.makePort(\"B\", _gojs.default.Spot.Bottom, _gojs.default.Spot.BottomSide, true, false));\n}\n\nfunction ifGraph() {\n  return $(_gojs.default.Node, \"Spot\", _functionsDfd.default.nodeStyle(), $(_gojs.default.Panel, \"Auto\", $(_gojs.default.Shape, \"RightTriangle\", new _gojs.default.Binding(\"fill\", \"color\"), {\n    minSize: new _gojs.default.Size(80, 80),\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }), $(_gojs.default.TextBlock, _functionsDfd.default.textStyle(), {\n    editable: true\n  }, new _gojs.default.Binding(\"text\"))), // three named ports, one on each side except the top, all output only:\n  _functionsDfd.default.makePort(\"T\", _gojs.default.Spot.Top, _gojs.default.Spot.Top, false, true), _functionsDfd.default.makePort(\"L\", _gojs.default.Spot.Left, _gojs.default.Spot.Left, true, false), _functionsDfd.default.makePort(\"R\", _gojs.default.Spot.Right, _gojs.default.Spot.Right, true, false), _functionsDfd.default.makePort(\"B\", _gojs.default.Spot.Bottom, _gojs.default.Spot.Bottom, true, false));\n}\n\nfunction caseGraph() {\n  return $(_gojs.default.Node, \"Spot\", _functionsDfd.default.nodeStyle(), new _gojs.default.Binding(\"location\", \"loc\", _gojs.default.Point.parse), $(_gojs.default.Panel, \"Auto\", $(_gojs.default.Shape, \"RoundedRectangle\", new _gojs.default.Binding(\"fill\", \"color\"), {\n    fromSpot: _gojs.default.Spot.Bottom,\n    toSpot: _gojs.default.Spot.Top,\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }), $(_gojs.default.TextBlock, _functionsDfd.default.textStyle(), {\n    editable: true\n  }, new _gojs.default.Binding(\"text\"))), // three named ports, one on each side except the top, all output only:\n  _functionsDfd.default.makePort(\"T\", _gojs.default.Spot.Top, _gojs.default.Spot.Top, false, true), _functionsDfd.default.makePort(\"L\", _gojs.default.Spot.Left, _gojs.default.Spot.Left, true, false), _functionsDfd.default.makePort(\"R\", _gojs.default.Spot.Right, _gojs.default.Spot.Right, true, false), _functionsDfd.default.makePort(\"B\", _gojs.default.Spot.Bottom, _gojs.default.Spot.Bottom, true, false));\n}\n\nfunction switchGraph() {\n  return $(_gojs.default.Node, \"Spot\", _functionsDfd.default.nodeStyle(), $(_gojs.default.Panel, \"Auto\", $(_gojs.default.Shape, \"octagon\", new _gojs.default.Binding(\"fill\", \"color\"), {\n    toSpot: _gojs.default.Spot.Bottom,\n    minSize: new _gojs.default.Size(80, 80),\n    strokeWidth: 0\n  }), $(_gojs.default.TextBlock, _functionsDfd.default.textStyle(), {\n    editable: true\n  }, new _gojs.default.Binding(\"text\"))), _functionsDfd.default.makePort(\"B\", _gojs.default.Spot.Bottom, _gojs.default.Spot.Bottom, true, false));\n}\n\nfunction forGraph() {\n  return $(_gojs.default.Node, \"Spot\", {\n    locationSpot: _gojs.default.Spot.Center\n  }, $(_gojs.default.Shape, \"start\", {\n    fill: \"white\",\n    strokeWidth: 1\n  }), $(_gojs.default.TextBlock, {\n    text: \"variable\",\n    stroke: \"blue\",\n    alignment: new _gojs.default.Spot(0.5, 0.2)\n  }), $(_gojs.default.TextBlock, {\n    text: \"Condicion\",\n    stroke: \"red\",\n    alignment: new _gojs.default.Spot(0.5, 0.4)\n  }), $(_gojs.default.TextBlock, {\n    text: \"Accion\",\n    stroke: \"red\",\n    alignment: new _gojs.default.Spot(0.5, 0.4)\n  }), _functionsDfd.default.makePort(\"T\", _gojs.default.Spot.Top, _gojs.default.Spot.Top, false, true), _functionsDfd.default.makePort(\"B\", _gojs.default.Spot.Bottom, _gojs.default.Spot.Bottom, true, false));\n}\n\nfunction endGraph() {\n  return $(_gojs.default.Node, \"Spot\", _functionsDfd.default.nodeStyle(), $(_gojs.default.Panel, \"Auto\", $(_gojs.default.Shape, \"Circle\", {\n    minSize: new _gojs.default.Size(40, 40),\n    fill: \"#DC3C00\",\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }), $(_gojs.default.TextBlock, \"End\", _functionsDfd.default.textStyle(), new _gojs.default.Binding(\"text\"))), // three named ports, one on each side except the bottom, all input only:\n  _functionsDfd.default.makePort(\"T\", _gojs.default.Spot.Top, _gojs.default.Spot.Top, false, true), _functionsDfd.default.makePort(\"L\", _gojs.default.Spot.Left, _gojs.default.Spot.Left, false, true), _functionsDfd.default.makePort(\"R\", _gojs.default.Spot.Right, _gojs.default.Spot.Right, false, true));\n}\n\nfunction commentGraph() {\n  return $(_gojs.default.Node, \"Auto\", _functionsDfd.default.nodeStyle(), $(_gojs.default.Shape, \"File\", {\n    fill: \"#DEE0A3\",\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }), $(_gojs.default.TextBlock, _functionsDfd.default.textStyle(), {\n    margin: 5,\n    maxSize: new _gojs.default.Size(200, NaN),\n    wrap: _gojs.default.TextBlock.WrapFit,\n    textAlign: \"center\",\n    editable: true,\n    font: \"bold 12pt Helvetica, Arial, sans-serif\",\n    stroke: '#454545'\n  }, new _gojs.default.Binding(\"text\").makeTwoWay()) // no ports, because no links are allowed to connect with a comment\n  );\n}\n\nfunction groupGraph() {\n  return $(_gojs.default.Group, \"Auto\", {\n    resizable: true,\n    resizeObjectName: \"PH\"\n  }, $(_gojs.default.Panel, \"Auto\", $(_gojs.default.Shape, \"RoundedRectangle\", {\n    fill: \"rgba(128,128,128,0.33)\",\n    name: \"PH\"\n  }, new _gojs.default.Binding(\"desiredSize\", \"size\", _gojs.default.Size.parse).makeTwoWay(_gojs.default.Size.stringify)), $(_gojs.default.Placeholder, // represents the area of all member parts,\n  {\n    padding: 3\n  }), $(_gojs.default.TextBlock, {\n    alignment: _gojs.default.Spot.Right,\n    font: \"Bold 12pt Sans-Serif\"\n  }, new _gojs.default.Binding(\"text\"))), //three named ports, one on each side except the top, all output only:\n  _functionsDfd.default.makePort(\"T\", _gojs.default.Spot.Top, _gojs.default.Spot.Top, false, true), _functionsDfd.default.makePort(\"B\", _gojs.default.Spot.Bottom, _gojs.default.Spot.Bottom, true, false));\n}\n\nmodule.exports = {\n  defaultGraph,\n  conditionalGraph,\n  startGraph,\n  varGraph,\n  ifGraph,\n  caseGraph,\n  switchGraph,\n  forGraph,\n  endGraph,\n  commentGraph,\n  groupGraph\n};","map":{"version":3,"sources":["C:/Users/LENOVO/Documents/teoria/Views/pages/Components/nodeTemplate.js"],"names":["$","go","GraphObject","make","defaultGraph","Node","functionDfd","nodeStyle","Panel","Shape","Binding","fill","strokeWidth","portId","fromLinkable","toLinkable","TextBlock","textStyle","margin","editable","makeTwoWay","makePort","Spot","Top","TopSide","Left","LeftSide","Right","RightSide","Bottom","BottomSide","conditionalGraph","locationSpot","Center","startGraph","minSize","Size","varGraph","ifGraph","caseGraph","Point","parse","fromSpot","toSpot","switchGraph","forGraph","text","stroke","alignment","endGraph","commentGraph","maxSize","NaN","wrap","WrapFit","textAlign","font","groupGraph","Group","resizable","resizeObjectName","name","stringify","Placeholder","padding","module","exports"],"mappings":"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","sourcesContent":["import go from 'gojs'\r\nimport functionDfd from './functionsDfd'\r\n\r\nconst $ = go.GraphObject.make;\r\n\r\n// the default category\r\nfunction defaultGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(),\r\n        // the main object is a Panel that surrounds a TextBlock with a rectangular Shape\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"Rectangle\", new go.Binding(\"fill\", \"color\"),\r\n                {\r\n                    fill: \"#00A9C9\",\r\n                    strokeWidth: 0,\r\n                    portId: \"\",\r\n                    fromLinkable: true,\r\n                    toLinkable: true\r\n                },\r\n            ),\r\n            $(go.TextBlock, functionDfd.textStyle(), {\r\n                margin: 5,\r\n                editable: true\r\n            }, new go.Binding(\"text\").makeTwoWay())\r\n        ),\r\n        // four named ports, one on each side:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.TopSide, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.LeftSide, true, true),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.RightSide, true, true),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.BottomSide, true, false)\r\n    )\r\n}\r\n\r\nfunction conditionalGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(), { locationSpot: go.Spot.Center },\r\n        // the main object is a Panel that surrounds a TextBlock with a rectangular Shape\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"Diamond\",\r\n                {\r\n                    fill: \"#00A9C9\",\r\n                    strokeWidth: 0,\r\n                    portId: \"\",\r\n                    fromLinkable: true,\r\n                    toLinkable: true\r\n                }),\r\n            $(go.TextBlock, functionDfd.textStyle(), {\r\n                margin: 8,\r\n                editable: true\r\n            },\r\n                new go.Binding(\"text\").makeTwoWay())\r\n        ),\r\n        // four named ports, one on each side:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, true),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, true),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction startGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"Circle\",\r\n                new go.Binding(\"fill\", \"color\"),\r\n                {\r\n                    minSize: new go.Size(40, 40),\r\n                    strokeWidth: 0,\r\n                    portId: \"\",\r\n                    fromLinkable: true,\r\n                    toLinkable: true\r\n                }),\r\n            $(go.TextBlock, \"Start\", functionDfd.textStyle(),\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\n\r\nfunction varGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"square\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                minSize: new go.Size(40, 40),\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true,\r\n                toLinkable: true\r\n            }),\r\n            $(go.TextBlock, functionDfd.textStyle(), { editable: true },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        // three named ports, one on each side except the top, all output only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.TopSide, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.LeftSide, true, true),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.RightSide, true, true),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.BottomSide, true, false)\r\n    )\r\n}\r\n\r\nfunction ifGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"RightTriangle\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                minSize: new go.Size(80, 80),\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true,\r\n                toLinkable: true\r\n            }),\r\n            $(go.TextBlock, functionDfd.textStyle(), { editable: true },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        // three named ports, one on each side except the top, all output only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction caseGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(),\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"RoundedRectangle\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                fromSpot: go.Spot.Bottom,\r\n                toSpot: go.Spot.Top,\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true, toLinkable: true\r\n            }),\r\n            $(go.TextBlock, functionDfd.textStyle(), { editable: true },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        // three named ports, one on each side except the top, all output only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction switchGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"octagon\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                toSpot: go.Spot.Bottom,\r\n                minSize: new go.Size(80, 80),\r\n                strokeWidth: 0\r\n            }),\r\n            $(go.TextBlock, functionDfd.textStyle(), { editable: true },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction forGraph() {\r\n    return $(go.Node, \"Spot\", { locationSpot: go.Spot.Center },\r\n        $(go.Shape, \"start\",\r\n            {\r\n                fill: \"white\",\r\n                strokeWidth: 1\r\n            }),\r\n        $(go.TextBlock, { text: \"variable\", stroke: \"blue\", alignment: new go.Spot(0.5, 0.2) }),\r\n        $(go.TextBlock, { text: \"Condicion\", stroke: \"red\", alignment: new go.Spot(0.5, 0.4) }),\r\n        $(go.TextBlock, { text: \"Accion\", stroke: \"red\", alignment: new go.Spot(0.5, 0.4) }),\r\n\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction endGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"Circle\", {\r\n                minSize: new go.Size(40, 40),\r\n                fill: \"#DC3C00\",\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true,\r\n                toLinkable: true\r\n            }),\r\n            $(go.TextBlock, \"End\", functionDfd.textStyle(),\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        // three named ports, one on each side except the bottom, all input only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, false, true),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, false, true)\r\n    )\r\n}\r\n\r\nfunction commentGraph() {\r\n    return $(go.Node, \"Auto\", functionDfd.nodeStyle(),\r\n        $(go.Shape, \"File\", {\r\n            fill: \"#DEE0A3\",\r\n            strokeWidth: 0,\r\n            portId: \"\",\r\n            fromLinkable: true,\r\n            toLinkable: true\r\n        }),\r\n        $(go.TextBlock, functionDfd.textStyle(), {\r\n            margin: 5,\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            textAlign: \"center\",\r\n            editable: true,\r\n            font: \"bold 12pt Helvetica, Arial, sans-serif\",\r\n            stroke: '#454545'\r\n        },\r\n            new go.Binding(\"text\").makeTwoWay())\r\n        // no ports, because no links are allowed to connect with a comment\r\n    )\r\n}\r\n\r\nfunction groupGraph() {\r\n    return $(go.Group, \"Auto\", {\r\n        resizable: true,\r\n        resizeObjectName: \"PH\"\r\n    },\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"RoundedRectangle\",\r\n                {\r\n                    fill: \"rgba(128,128,128,0.33)\",\r\n                    name: \"PH\",\r\n                },\r\n                new go.Binding(\"desiredSize\", \"size\", go.Size.parse).makeTwoWay(go.Size.stringify)),\r\n            $(go.Placeholder,    // represents the area of all member parts,\r\n                { padding: 3 }),\r\n            $(go.TextBlock, { alignment: go.Spot.Right, font: \"Bold 12pt Sans-Serif\" },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n\r\n        //three named ports, one on each side except the top, all output only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    defaultGraph,\r\n    conditionalGraph,\r\n    startGraph,\r\n    varGraph,\r\n    ifGraph,\r\n    caseGraph,\r\n    switchGraph,\r\n    forGraph,\r\n    endGraph,\r\n    commentGraph,\r\n    groupGraph\r\n}"]},"metadata":{},"sourceType":"script"}