{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _gojs = _interopRequireDefault(require(\"gojs\"));\n\nvar _functionsDfd = _interopRequireDefault(require(\"./functionsDfd\"));\n\nvar $ = _gojs[\"default\"].GraphObject.make; // the default category\n\nfunction defaultGraph() {\n  return $(_gojs[\"default\"].Node, \"Table\", _functionsDfd[\"default\"].nodeStyle(), // the main object is a Panel that surrounds a TextBlock with a rectangular Shape\n  $(_gojs[\"default\"].Panel, \"Auto\", $(_gojs[\"default\"].Shape, \"Rectangle\", new _gojs[\"default\"].Binding(\"fill\", \"color\"), {\n    fill: \"#00A9C9\",\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }, new _gojs[\"default\"].Binding(\"figure\", \"figure\")), $(_gojs[\"default\"].TextBlock, _functionsDfd[\"default\"].textStyle(), {\n    margin: 8,\n    maxSize: new _gojs[\"default\"].Size(160, NaN),\n    wrap: _gojs[\"default\"].TextBlock.WrapFit,\n    editable: true\n  }, new _gojs[\"default\"].Binding(\"text\").makeTwoWay())), // four named ports, one on each side:\n  _functionsDfd[\"default\"].makePort(\"T\", _gojs[\"default\"].Spot.Top, _gojs[\"default\"].Spot.TopSide, false, true), _functionsDfd[\"default\"].makePort(\"L\", _gojs[\"default\"].Spot.Left, _gojs[\"default\"].Spot.LeftSide, true, true), _functionsDfd[\"default\"].makePort(\"R\", _gojs[\"default\"].Spot.Right, _gojs[\"default\"].Spot.RightSide, true, true), _functionsDfd[\"default\"].makePort(\"B\", _gojs[\"default\"].Spot.Bottom, _gojs[\"default\"].Spot.BottomSide, true, false));\n}\n\nfunction conditionalGraph() {\n  return $(_gojs[\"default\"].Node, \"Table\", _functionsDfd[\"default\"].nodeStyle(), // the main object is a Panel that surrounds a TextBlock with a rectangular Shape\n  $(_gojs[\"default\"].Panel, \"Auto\", $(_gojs[\"default\"].Shape, \"Diamond\", {\n    fill: \"#00A9C9\",\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }, new _gojs[\"default\"].Binding(\"figure\", \"figure\")), $(_gojs[\"default\"].TextBlock, _functionsDfd[\"default\"].textStyle(), {\n    margin: 8,\n    maxSize: new _gojs[\"default\"].Size(160, NaN),\n    wrap: _gojs[\"default\"].TextBlock.WrapFit,\n    editable: true\n  }, new _gojs[\"default\"].Binding(\"text\").makeTwoWay())), // four named ports, one on each side:\n  _functionsDfd[\"default\"].makePort(\"T\", _gojs[\"default\"].Spot.Top, _gojs[\"default\"].Spot.Top, false, true), _functionsDfd[\"default\"].makePort(\"L\", _gojs[\"default\"].Spot.Left, _gojs[\"default\"].Spot.Left, true, true), _functionsDfd[\"default\"].makePort(\"R\", _gojs[\"default\"].Spot.Right, _gojs[\"default\"].Spot.Right, true, true), _functionsDfd[\"default\"].makePort(\"B\", _gojs[\"default\"].Spot.Bottom, _gojs[\"default\"].Spot.Bottom, true, false));\n}\n\nfunction startGraph() {\n  return $(_gojs[\"default\"].Node, \"Table\", _functionsDfd[\"default\"].nodeStyle(), $(_gojs[\"default\"].Panel, \"Auto\", $(_gojs[\"default\"].Shape, \"Circle\", new _gojs[\"default\"].Binding(\"fill\", \"color\"), {\n    minSize: new _gojs[\"default\"].Size(40, 40),\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }), $(_gojs[\"default\"].TextBlock, \"Start\", _functionsDfd[\"default\"].textStyle(), new _gojs[\"default\"].Binding(\"text\"))), // three named ports, one on each side except the top, all output only:\n\n  /* this.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false),\r\n   this.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false),*/\n  _functionsDfd[\"default\"].makePort(\"B\", _gojs[\"default\"].Spot.Bottom, _gojs[\"default\"].Spot.Bottom, true, false));\n}\n\nfunction varGraph() {\n  return $(_gojs[\"default\"].Node, \"Table\", _functionsDfd[\"default\"].nodeStyle(), $(_gojs[\"default\"].Panel, \"Auto\", $(_gojs[\"default\"].Shape, \"square\", new _gojs[\"default\"].Binding(\"fill\", \"color\"), {\n    minSize: new _gojs[\"default\"].Size(40, 40),\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }), $(_gojs[\"default\"].TextBlock, _functionsDfd[\"default\"].textStyle(), {\n    editable: true\n  }, new _gojs[\"default\"].Binding(\"text\"))), // three named ports, one on each side except the top, all output only:\n  _functionsDfd[\"default\"].makePort(\"T\", _gojs[\"default\"].Spot.Top, _gojs[\"default\"].Spot.TopSide, false, true), _functionsDfd[\"default\"].makePort(\"L\", _gojs[\"default\"].Spot.Left, _gojs[\"default\"].Spot.LeftSide, true, true), _functionsDfd[\"default\"].makePort(\"R\", _gojs[\"default\"].Spot.Right, _gojs[\"default\"].Spot.RightSide, true, true), _functionsDfd[\"default\"].makePort(\"B\", _gojs[\"default\"].Spot.Bottom, _gojs[\"default\"].Spot.BottomSide, true, false));\n}\n\nfunction ifGraph() {\n  return $(_gojs[\"default\"].Node, \"Table\", _functionsDfd[\"default\"].nodeStyle(), $(_gojs[\"default\"].Panel, \"Auto\", $(_gojs[\"default\"].Shape, \"RightTriangle\", new _gojs[\"default\"].Binding(\"fill\", \"color\"), {\n    // angle: 65,\n    // geometryString: \"F M140 0 L70 70 0 50z\",\n    minSize: new _gojs[\"default\"].Size(80, 80),\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }), $(_gojs[\"default\"].TextBlock, _functionsDfd[\"default\"].textStyle(), {\n    editable: true\n  }, new _gojs[\"default\"].Binding(\"text\"))), // three named ports, one on each side except the top, all output only:\n  _functionsDfd[\"default\"].makePort(\"T\", _gojs[\"default\"].Spot.Top, _gojs[\"default\"].Spot.Top, false, true), _functionsDfd[\"default\"].makePort(\"L\", _gojs[\"default\"].Spot.Left, _gojs[\"default\"].Spot.Left, true, false), _functionsDfd[\"default\"].makePort(\"R\", _gojs[\"default\"].Spot.Right, _gojs[\"default\"].Spot.Right, true, false), _functionsDfd[\"default\"].makePort(\"B\", _gojs[\"default\"].Spot.Bottom, _gojs[\"default\"].Spot.Bottom, true, false));\n}\n\nfunction caseGraph() {\n  return $(_gojs[\"default\"].Node, \"Table\", _functionsDfd[\"default\"].nodeStyle(), new _gojs[\"default\"].Binding(\"location\", \"loc\", _gojs[\"default\"].Point.parse), $(_gojs[\"default\"].Panel, \"Auto\", $(_gojs[\"default\"].Shape, \"RoundedRectangle\", new _gojs[\"default\"].Binding(\"fill\", \"color\"), {\n    // angle: 65,\n    // geometryString: \"F M140 0 L70 70 0 50z\",\n    //minSize: new go.Size(80, 80),\n    fromSpot: _gojs[\"default\"].Spot.Bottom,\n    toSpot: _gojs[\"default\"].Spot.Top,\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }), $(_gojs[\"default\"].TextBlock, _functionsDfd[\"default\"].textStyle(), {\n    editable: true\n  }, new _gojs[\"default\"].Binding(\"text\"))), // three named ports, one on each side except the top, all output only:\n  _functionsDfd[\"default\"].makePort(\"T\", _gojs[\"default\"].Spot.Top, _gojs[\"default\"].Spot.Top, false, true), _functionsDfd[\"default\"].makePort(\"L\", _gojs[\"default\"].Spot.Left, _gojs[\"default\"].Spot.Left, true, false), _functionsDfd[\"default\"].makePort(\"R\", _gojs[\"default\"].Spot.Right, _gojs[\"default\"].Spot.Right, true, false), _functionsDfd[\"default\"].makePort(\"B\", _gojs[\"default\"].Spot.Bottom, _gojs[\"default\"].Spot.Bottom, true, false));\n}\n\nfunction switchGraph() {\n  return $(_gojs[\"default\"].Node, \"Table\", _functionsDfd[\"default\"].nodeStyle(), $(_gojs[\"default\"].Panel, \"Auto\", $(_gojs[\"default\"].Shape, \"octagon\", new _gojs[\"default\"].Binding(\"fill\", \"color\"), {\n    toSpot: _gojs[\"default\"].Spot.Bottom,\n    minSize: new _gojs[\"default\"].Size(80, 80),\n    strokeWidth: 0\n  }), $(_gojs[\"default\"].TextBlock, _functionsDfd[\"default\"].textStyle(), {\n    editable: true\n  }, new _gojs[\"default\"].Binding(\"text\"))), _functionsDfd[\"default\"].makePort(\"B\", _gojs[\"default\"].Spot.Bottom, _gojs[\"default\"].Spot.Bottom, true, false));\n}\n\nfunction forGraph() {}\n\nmodule.exports = {\n  defaultGraph: defaultGraph,\n  conditionalGraph: conditionalGraph,\n  startGraph: startGraph,\n  varGraph: varGraph,\n  ifGraph: ifGraph,\n  caseGraph: caseGraph,\n  switchGraph: switchGraph\n};","map":{"version":3,"sources":["C:/Users/LENOVO/Documents/teoria/Views/pages/Components/nodeTemplate.js"],"names":["$","go","GraphObject","make","defaultGraph","Node","functionDfd","nodeStyle","Panel","Shape","Binding","fill","strokeWidth","portId","fromLinkable","toLinkable","TextBlock","textStyle","margin","maxSize","Size","NaN","wrap","WrapFit","editable","makeTwoWay","makePort","Spot","Top","TopSide","Left","LeftSide","Right","RightSide","Bottom","BottomSide","conditionalGraph","startGraph","minSize","varGraph","ifGraph","caseGraph","Point","parse","fromSpot","toSpot","switchGraph","forGraph","module","exports"],"mappings":"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","sourcesContent":["import go from 'gojs'\r\nimport functionDfd from './functionsDfd'\r\n\r\nconst $ = go.GraphObject.make;\r\n\r\n// the default category\r\nfunction defaultGraph() {\r\n    return $(go.Node, \"Table\", functionDfd.nodeStyle(),\r\n        // the main object is a Panel that surrounds a TextBlock with a rectangular Shape\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"Rectangle\", new go.Binding(\"fill\", \"color\"),\r\n                {\r\n                    fill: \"#00A9C9\",\r\n                    strokeWidth: 0,\r\n                    portId: \"\",\r\n                    fromLinkable: true, toLinkable: true\r\n                },\r\n                new go.Binding(\"figure\", \"figure\")),\r\n            $(go.TextBlock, functionDfd.textStyle(), {\r\n                margin: 8,\r\n                maxSize: new go.Size(160, NaN),\r\n                wrap: go.TextBlock.WrapFit,\r\n                editable: true\r\n            },\r\n                new go.Binding(\"text\").makeTwoWay())\r\n        ),\r\n        // four named ports, one on each side:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.TopSide, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.LeftSide, true, true),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.RightSide, true, true),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.BottomSide, true, false)\r\n    )\r\n}\r\n\r\nfunction conditionalGraph() {\r\n    return $(go.Node, \"Table\", functionDfd.nodeStyle(),\r\n        // the main object is a Panel that surrounds a TextBlock with a rectangular Shape\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"Diamond\", {\r\n                fill: \"#00A9C9\",\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true, toLinkable: true\r\n            },\r\n                new go.Binding(\"figure\", \"figure\")),\r\n            $(go.TextBlock, functionDfd.textStyle(), {\r\n                margin: 8,\r\n                maxSize: new go.Size(160, NaN),\r\n                wrap: go.TextBlock.WrapFit,\r\n                editable: true\r\n            },\r\n                new go.Binding(\"text\").makeTwoWay())\r\n        ),\r\n        // four named ports, one on each side:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, true),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, true),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction startGraph() {\r\n    return $(go.Node, \"Table\", functionDfd.nodeStyle(),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"Circle\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                minSize: new go.Size(40, 40),\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true, toLinkable: true\r\n            }),\r\n            $(go.TextBlock, \"Start\", functionDfd.textStyle(),\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        // three named ports, one on each side except the top, all output only:\r\n        /* this.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false),\r\n         this.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false),*/\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\n\r\nfunction varGraph() {\r\n    return $(go.Node, \"Table\", functionDfd.nodeStyle(),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"square\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                minSize: new go.Size(40, 40),\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true, toLinkable: true\r\n            }),\r\n            $(go.TextBlock, functionDfd.textStyle(), { editable: true },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        // three named ports, one on each side except the top, all output only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.TopSide, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.LeftSide, true, true),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.RightSide, true, true),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.BottomSide, true, false)\r\n    )\r\n}\r\n\r\nfunction ifGraph() {\r\n    return $(go.Node, \"Table\", functionDfd.nodeStyle(),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"RightTriangle\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                // angle: 65,\r\n                // geometryString: \"F M140 0 L70 70 0 50z\",\r\n                minSize: new go.Size(80, 80),\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true, toLinkable: true\r\n            }),\r\n            $(go.TextBlock, functionDfd.textStyle(), { editable: true },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        // three named ports, one on each side except the top, all output only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction caseGraph() {\r\n    return $(go.Node, \"Table\", functionDfd.nodeStyle(), new go.Binding(\"location\", \"loc\", go.Point.parse),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"RoundedRectangle\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                // angle: 65,\r\n                // geometryString: \"F M140 0 L70 70 0 50z\",\r\n                //minSize: new go.Size(80, 80),\r\n                fromSpot: go.Spot.Bottom, toSpot: go.Spot.Top,\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true, toLinkable: true\r\n            }),\r\n            $(go.TextBlock, functionDfd.textStyle(), { editable: true },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        // three named ports, one on each side except the top, all output only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction switchGraph() {\r\n    return $(go.Node, \"Table\", functionDfd.nodeStyle(),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"octagon\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                toSpot: go.Spot.Bottom,\r\n                minSize: new go.Size(80, 80),\r\n                strokeWidth: 0\r\n            }),\r\n            $(go.TextBlock, functionDfd.textStyle(), { editable: true },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction forGraph() {\r\n\r\n}\r\n\r\nmodule.exports = {\r\n    defaultGraph,\r\n    conditionalGraph,\r\n    startGraph,\r\n    varGraph,\r\n    ifGraph,\r\n    caseGraph,\r\n    switchGraph\r\n}"]},"metadata":{},"sourceType":"script"}