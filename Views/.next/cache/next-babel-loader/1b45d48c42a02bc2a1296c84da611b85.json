{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport go from 'gojs'; //import './App.css';\n\nimport './figure';\nimport dataModels from './modelsDfd';\nimport functionDfd from './functionsDfd';\nimport nodeTemplate from './nodeTemplate';\nvar $ = go.GraphObject.make;\nvar myDiagram;\n\nvar GoJs =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GoJs, _Component);\n\n  function GoJs(props) {\n    var _this;\n\n    _classCallCheck(this, GoJs);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GoJs).call(this, props));\n    _this.renderCanvas = _this.renderCanvas.bind(_assertThisInitialized(_this));\n    _this.state = {\n      myModel: null,\n      myDiagram: null\n    };\n    return _this;\n  }\n\n  _createClass(GoJs, [{\n    key: \"renderCanvas\",\n    value: function renderCanvas() {\n      myDiagram = $(go.Diagram, this.refs.goJsDiv, {\n        grid: $(go.Panel, \"Grid\", // $(go.Shape, \"LineH\", { stroke: \"transparent\", strokeWidth: .9 }),\n        $(go.Shape, \"LineH\", {\n          stroke: \"gray\",\n          strokeWidth: 0.3,\n          interval: 2\n        }), //$(go.Shape, \"LineV\", { stroke: \"transparent\", strokeWidth: .9 }),\n        $(go.Shape, \"LineV\", {\n          stroke: \"gray\",\n          strokeWidth: 0.3,\n          interval: 2\n        })),\n        \"LinkDrawn\": functionDfd.showLinkLabel,\n        // this DiagramEvent listener is defined below\n        \"LinkRelinked\": functionDfd.showLinkLabel,\n        \"toolManager.mouseWheelBehavior\": go.ToolManager.WheelZoom,\n        \"draggingTool.isGridSnapEnabled\": true,\n        \"undoManager.isEnabled\": true // enable undo & redo\n\n      }); // define the Node templates for regular nodes\n\n      myDiagram.nodeTemplateMap.add(\"\", nodeTemplate.defaultGraph()); // the default category\n\n      myDiagram.nodeTemplateMap.add(\"Conditional\", nodeTemplate.conditionalGraph());\n      myDiagram.nodeTemplateMap.add(\"Start\", nodeTemplate.startGraph());\n      myDiagram.nodeTemplateMap.add(\"Var\", nodeTemplate.varGraph());\n      myDiagram.nodeTemplateMap.add(\"If\", nodeTemplate.ifGraph());\n      myDiagram.nodeTemplateMap.add(\"case\", nodeTemplate.caseGraph());\n      myDiagram.nodeTemplateMap.add(\"switch\", nodeTemplate.switchGraph());\n      myDiagram.nodeTemplateMap.add(\"for\", nodeTemplate.forGraph());\n      myDiagram.nodeTemplateMap.add(\"End\", nodeTemplate.endGraph());\n      myDiagram.nodeTemplateMap.add(\"Comment\", nodeTemplate.commentGraph());\n      myDiagram.groupTemplate = nodeTemplate.groupGraph(); // replace the default Link template in the linkTemplateMap\n\n      myDiagram.linkTemplate = functionDfd.linkTemplate(); // temporary links used by LinkingTool and RelinkingTool are also orthogonal:\n\n      myDiagram.toolManager.linkingTool.temporaryLink.routing = go.Link.Orthogonal;\n      myDiagram.toolManager.relinkingTool.temporaryLink.routing = go.Link.Orthogonal; // initialize the Palette that is on the left side of the page\n\n      var myPalette = $(go.Palette, \"palette\", // must name or refer to the DIV HTML element\n      {\n        layout: $(go.GridLayout, {\n          alignment: go.GridLayout.Location\n        }),\n        nodeTemplateMap: myDiagram.nodeTemplateMap,\n        // share the templates used by myDiagram\n        model: new go.GraphLinksModel(dataModels.modelsData(), dataModels.modelsLinks())\n      });\n      myPalette.layout = $(go.GridLayout, {\n        wrappingColumn: 3,\n        wrappingWidth: 300,\n        isViewportSized: true\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //console.log('componentDidMount')\n      this.renderCanvas();\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(prevProps) {\n      /*console.log(JSON.stringify(prevProps, null, 2))\n      if (this.props.data !== prevProps.data) {\n       console.log('Updating 2');\n       const model = this.state.myModel;\n       const diagram = this.state.myDiagram;\n       model.nodeDataArray = this.props.data;\n       diagram.model = model;\n       this.setState({ myModel: model, myDiagram: diagram });\n      }*/\n    }\n  }, {\n    key: \"onClickChange\",\n    value: function onClickChange() {\n      console.log(myDiagram.model.toJson());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"container-fluid\"\n      }, __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col-md-3\",\n        id: \"palette\",\n        style: {\n          'backgroundColor': '#373737'\n        }\n      }), __jsx(\"div\", {\n        className: \"col-md-9 row\"\n      }, __jsx(\"div\", {\n        id: \"blockWhite\"\n      }), __jsx(\"div\", {\n        ref: \"goJsDiv\",\n        id: \"goJsDiv\",\n        className: \"col-md-12\",\n        style: {\n          'width': '500px',\n          'height': '700px',\n          'backgroundColor': '#373737'\n        }\n      }))), __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: this.onClickChange\n      }, \"Save\")));\n    }\n  }]);\n\n  return GoJs;\n}(Component);\n\nexport { GoJs as default };","map":{"version":3,"sources":["C:/Users/LENOVO/Documents/teoria/Views/pages/Components/Dfd.jsx"],"names":["React","Component","go","dataModels","functionDfd","nodeTemplate","$","GraphObject","make","myDiagram","GoJs","props","renderCanvas","bind","state","myModel","Diagram","refs","goJsDiv","grid","Panel","Shape","stroke","strokeWidth","interval","showLinkLabel","ToolManager","WheelZoom","nodeTemplateMap","add","defaultGraph","conditionalGraph","startGraph","varGraph","ifGraph","caseGraph","switchGraph","forGraph","endGraph","commentGraph","groupTemplate","groupGraph","linkTemplate","toolManager","linkingTool","temporaryLink","routing","Link","Orthogonal","relinkingTool","myPalette","Palette","layout","GridLayout","alignment","Location","model","GraphLinksModel","modelsData","modelsLinks","wrappingColumn","wrappingWidth","isViewportSized","prevProps","console","log","toJson","onClickChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport go from 'gojs';\n//import './App.css';\nimport './figure';\nimport dataModels from './modelsDfd'\nimport functionDfd from './functionsDfd'\nimport nodeTemplate from './nodeTemplate'\n\nconst $ = go.GraphObject.make;\nvar myDiagram;\nexport default class GoJs extends Component {\n  constructor(props) {\n    super(props);\n    this.renderCanvas = this.renderCanvas.bind(this);\n    this.state = { myModel: null, myDiagram: null }\n  }\n\n  renderCanvas() {\n    myDiagram = $(go.Diagram, this.refs.goJsDiv, {\n      grid: $(go.Panel, \"Grid\",\n        // $(go.Shape, \"LineH\", { stroke: \"transparent\", strokeWidth: .9 }),\n        $(go.Shape, \"LineH\", { stroke: \"gray\", strokeWidth: 0.3, interval: 2 }),\n        //$(go.Shape, \"LineV\", { stroke: \"transparent\", strokeWidth: .9 }),\n        $(go.Shape, \"LineV\", { stroke: \"gray\", strokeWidth: 0.3, interval: 2 })\n      ),\n      \"LinkDrawn\": functionDfd.showLinkLabel,  // this DiagramEvent listener is defined below\n      \"LinkRelinked\": functionDfd.showLinkLabel,\n      \"toolManager.mouseWheelBehavior\": go.ToolManager.WheelZoom,\n      \"draggingTool.isGridSnapEnabled\": true,\n      \"undoManager.isEnabled\": true  // enable undo & redo\n    }\n    );\n\n    // define the Node templates for regular nodes\n    myDiagram.nodeTemplateMap.add(\"\", nodeTemplate.defaultGraph());  // the default category\n    myDiagram.nodeTemplateMap.add(\"Conditional\", nodeTemplate.conditionalGraph());\n    myDiagram.nodeTemplateMap.add(\"Start\", nodeTemplate.startGraph());\n    myDiagram.nodeTemplateMap.add(\"Var\", nodeTemplate.varGraph());\n    myDiagram.nodeTemplateMap.add(\"If\", nodeTemplate.ifGraph());\n    myDiagram.nodeTemplateMap.add(\"case\", nodeTemplate.caseGraph());\n    myDiagram.nodeTemplateMap.add(\"switch\", nodeTemplate.switchGraph());\n    myDiagram.nodeTemplateMap.add(\"for\", nodeTemplate.forGraph());\n    myDiagram.nodeTemplateMap.add(\"End\", nodeTemplate.endGraph());\n    myDiagram.nodeTemplateMap.add(\"Comment\", nodeTemplate.commentGraph());\n\n    myDiagram.groupTemplate = nodeTemplate.groupGraph();\n\n    // replace the default Link template in the linkTemplateMap\n    myDiagram.linkTemplate = functionDfd.linkTemplate();\n\n    // temporary links used by LinkingTool and RelinkingTool are also orthogonal:\n    myDiagram.toolManager.linkingTool.temporaryLink.routing = go.Link.Orthogonal;\n    myDiagram.toolManager.relinkingTool.temporaryLink.routing = go.Link.Orthogonal;\n\n    // initialize the Palette that is on the left side of the page\n\n    let myPalette = $(go.Palette, \"palette\", // must name or refer to the DIV HTML element\n      {\n        layout: $(go.GridLayout, { alignment: go.GridLayout.Location }),\n        nodeTemplateMap: myDiagram.nodeTemplateMap, // share the templates used by myDiagram\n        model: new go.GraphLinksModel(dataModels.modelsData(), dataModels.modelsLinks())\n      });\n\n    myPalette.layout = $(go.GridLayout,\n      { wrappingColumn: 3, wrappingWidth: 300, isViewportSized: true });\n\n  }\n\n\n  componentDidMount() {\n    //console.log('componentDidMount')\n    this.renderCanvas();\n  }\n\n\n  componentWillUpdate(prevProps) {\n    /*console.log(JSON.stringify(prevProps, null, 2))\n  if (this.props.data !== prevProps.data) {\n     console.log('Updating 2');\n     const model = this.state.myModel;\n     const diagram = this.state.myDiagram;\n     model.nodeDataArray = this.props.data;\n     diagram.model = model;\n     this.setState({ myModel: model, myDiagram: diagram });\n   }*/\n  }\n  onClickChange() {\n    console.log(myDiagram.model.toJson());\n  }\n\n  render() {\n    return (\n      <div className='container-fluid'>\n        <div className='row'>\n          <div className='col-md-3' id='palette' style={{ 'backgroundColor': '#373737' }}></div>\n          <div className='col-md-9 row'>\n            <div id='blockWhite' ></div>\n            <div ref=\"goJsDiv\" id='goJsDiv' className='col-md-12' style={{ 'width': '500px', 'height': '700px', 'backgroundColor': '#373737' }}>\n            </div>\n          </div>\n        </div>\n        <div className='row'>\n          <button className='btn btn-primary' onClick={this.onClickChange}>Save</button>\n        </div>\n      </div>\n    )\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}