{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _gojs = _interopRequireDefault(require(\"gojs\"));\n\nconst $ = _gojs.default.GraphObject.make;\n\nfunction linkTemplate() {\n  let template = $(_gojs.default.Link, // the whole link panel\n  {\n    routing: _gojs.default.Link.AvoidsNodes,\n    curve: _gojs.default.Link.JumpOver,\n    corner: 5,\n    toShortLength: 4,\n    relinkableFrom: true,\n    relinkableTo: true,\n    reshapable: true,\n    resegmentable: true,\n    selectionAdorned: false\n  }, new _gojs.default.Binding(\"points\").makeTwoWay(), $(_gojs.default.Shape, // the highlight shape, normally transparent\n  {\n    isPanelMain: true,\n    strokeWidth: 8,\n    stroke: \"transparent\",\n    name: \"HIGHLIGHT\"\n  }), $(_gojs.default.Shape, // the link path shape\n  {\n    isPanelMain: true,\n    stroke: \"gray\",\n    strokeWidth: 2\n  }, new _gojs.default.Binding(\"stroke\", \"isSelected\", function (sel) {\n    return sel ? \"dodgerblue\" : \"gray\";\n  }).ofObject()), $(_gojs.default.Shape, // the arrowhead\n  {\n    toArrow: \"standard\",\n    strokeWidth: 0,\n    fill: \"gray\"\n  }), $(_gojs.default.Panel, \"Auto\", // the link label, normally not visible\n  {\n    visible: false,\n    name: \"LABEL\",\n    segmentIndex: 2,\n    segmentFraction: 0.5\n  }, new _gojs.default.Binding(\"visible\", \"visible\").makeTwoWay(), $(_gojs.default.Shape, \"RoundedRectangle\", // the label shape\n  {\n    fill: \"#F8F8F8\",\n    strokeWidth: 0\n  }), $(_gojs.default.TextBlock, \"Yes\", // the label\n  {\n    textAlign: \"center\",\n    font: \"10pt helvetica, arial, sans-serif\",\n    stroke: \"#333333\",\n    editable: true\n  }, new _gojs.default.Binding(\"text\").makeTwoWay())));\n  return template;\n}\n\nmodule.exports = {\n  linkTemplate\n};","map":{"version":3,"sources":["C:/Users/LENOVO/Documents/teoria/Views/pages/Components/functionsDfd.js"],"names":["$","go","GraphObject","make","linkTemplate","template","Link","routing","AvoidsNodes","curve","JumpOver","corner","toShortLength","relinkableFrom","relinkableTo","reshapable","resegmentable","selectionAdorned","Binding","makeTwoWay","Shape","isPanelMain","strokeWidth","stroke","name","sel","ofObject","toArrow","fill","Panel","visible","segmentIndex","segmentFraction","TextBlock","textAlign","font","editable","module","exports"],"mappings":";;;;AAAA;;AACA,MAAMA,CAAC,GAAGC,cAAGC,WAAH,CAAeC,IAAzB;;AAEA,SAASC,YAAT,GAAwB;AACpB,MAAIC,QAAQ,GAAGL,CAAC,CAACC,cAAGK,IAAJ,EAAU;AACtB;AACIC,IAAAA,OAAO,EAAEN,cAAGK,IAAH,CAAQE,WADrB;AAEIC,IAAAA,KAAK,EAAER,cAAGK,IAAH,CAAQI,QAFnB;AAGIC,IAAAA,MAAM,EAAE,CAHZ;AAIIC,IAAAA,aAAa,EAAE,CAJnB;AAKIC,IAAAA,cAAc,EAAE,IALpB;AAK0BC,IAAAA,YAAY,EAAE,IALxC;AAMIC,IAAAA,UAAU,EAAE,IANhB;AAOIC,IAAAA,aAAa,EAAE,IAPnB;AAQIC,IAAAA,gBAAgB,EAAE;AARtB,GADY,EAWZ,IAAIhB,cAAGiB,OAAP,CAAe,QAAf,EAAyBC,UAAzB,EAXY,EAYZnB,CAAC,CAACC,cAAGmB,KAAJ,EAAW;AACR;AACIC,IAAAA,WAAW,EAAE,IADjB;AAEIC,IAAAA,WAAW,EAAE,CAFjB;AAGIC,IAAAA,MAAM,EAAE,aAHZ;AAKIC,IAAAA,IAAI,EAAE;AALV,GADH,CAZW,EAoBZxB,CAAC,CAACC,cAAGmB,KAAJ,EAAW;AACR;AACIC,IAAAA,WAAW,EAAE,IADjB;AAEIE,IAAAA,MAAM,EAAE,MAFZ;AAIID,IAAAA,WAAW,EAAE;AAJjB,GADH,EAOG,IAAIrB,cAAGiB,OAAP,CAAe,QAAf,EAAyB,YAAzB,EAAuC,UAAUO,GAAV,EAAe;AAClD,WAAOA,GAAG,GAAG,YAAH,GAAkB,MAA5B;AACH,GAFD,EAEGC,QAFH,EAPH,CApBW,EA8BZ1B,CAAC,CAACC,cAAGmB,KAAJ,EAAW;AACR;AACIO,IAAAA,OAAO,EAAE,UADb;AAEIL,IAAAA,WAAW,EAAE,CAFjB;AAIIM,IAAAA,IAAI,EAAE;AAJV,GADH,CA9BW,EAqCZ5B,CAAC,CAACC,cAAG4B,KAAJ,EAAW,MAAX,EAAmB;AAChB;AACIC,IAAAA,OAAO,EAAE,KADb;AAEIN,IAAAA,IAAI,EAAE,OAFV;AAGIO,IAAAA,YAAY,EAAE,CAHlB;AAIIC,IAAAA,eAAe,EAAE;AAJrB,GADH,EAOG,IAAI/B,cAAGiB,OAAP,CAAe,SAAf,EAA0B,SAA1B,EAAqCC,UAArC,EAPH,EAQGnB,CAAC,CAACC,cAAGmB,KAAJ,EAAW,kBAAX,EAA+B;AAC5B;AACIQ,IAAAA,IAAI,EAAE,SADV;AAEIN,IAAAA,WAAW,EAAE;AAFjB,GADH,CARJ,EAaGtB,CAAC,CAACC,cAAGgC,SAAJ,EAAe,KAAf,EAAsB;AACnB;AACIC,IAAAA,SAAS,EAAE,QADf;AAEIC,IAAAA,IAAI,EAAE,mCAFV;AAGIZ,IAAAA,MAAM,EAAE,SAHZ;AAIIa,IAAAA,QAAQ,EAAE;AAJd,GADH,EAOG,IAAInC,cAAGiB,OAAP,CAAe,MAAf,EAAuBC,UAAvB,EAPH,CAbJ,CArCW,CAAhB;AA4DA,SAAOd,QAAP;AACH;;AAEDgC,MAAM,CAACC,OAAP,GAAiB;AAAElC,EAAAA;AAAF,CAAjB","sourcesContent":["import go from 'gojs';\r\nconst $ = go.GraphObject.make;\r\n\r\nfunction linkTemplate() {\r\n    let template = $(go.Link, // the whole link panel\r\n        {\r\n            routing: go.Link.AvoidsNodes,\r\n            curve: go.Link.JumpOver,\r\n            corner: 5,\r\n            toShortLength: 4,\r\n            relinkableFrom: true, relinkableTo: true,\r\n            reshapable: true,\r\n            resegmentable: true,\r\n            selectionAdorned: false\r\n        },\r\n        new go.Binding(\"points\").makeTwoWay(),\r\n        $(go.Shape, // the highlight shape, normally transparent\r\n            {\r\n                isPanelMain: true,\r\n                strokeWidth: 8,\r\n                stroke: \"transparent\",\r\n\r\n                name: \"HIGHLIGHT\"\r\n            }),\r\n        $(go.Shape, // the link path shape\r\n            {\r\n                isPanelMain: true,\r\n                stroke: \"gray\",\r\n\r\n                strokeWidth: 2\r\n            },\r\n            new go.Binding(\"stroke\", \"isSelected\", function (sel) {\r\n                return sel ? \"dodgerblue\" : \"gray\";\r\n            }).ofObject()),\r\n        $(go.Shape, // the arrowhead\r\n            {\r\n                toArrow: \"standard\",\r\n                strokeWidth: 0,\r\n\r\n                fill: \"gray\"\r\n            }),\r\n        $(go.Panel, \"Auto\", // the link label, normally not visible\r\n            {\r\n                visible: false,\r\n                name: \"LABEL\",\r\n                segmentIndex: 2,\r\n                segmentFraction: 0.5\r\n            },\r\n            new go.Binding(\"visible\", \"visible\").makeTwoWay(),\r\n            $(go.Shape, \"RoundedRectangle\", // the label shape\r\n                {\r\n                    fill: \"#F8F8F8\",\r\n                    strokeWidth: 0\r\n                }),\r\n            $(go.TextBlock, \"Yes\", // the label\r\n                {\r\n                    textAlign: \"center\",\r\n                    font: \"10pt helvetica, arial, sans-serif\",\r\n                    stroke: \"#333333\",\r\n                    editable: true\r\n                },\r\n                new go.Binding(\"text\").makeTwoWay())\r\n        )\r\n    );\r\n    return template;\r\n}\r\n\r\nmodule.exports = { linkTemplate }"]},"metadata":{},"sourceType":"script"}