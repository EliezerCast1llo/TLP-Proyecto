{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _gojs = _interopRequireDefault(require(\"gojs\"));\n\nvar _functionsDfd = _interopRequireDefault(require(\"./functionsDfd\"));\n\nvar $ = _gojs[\"default\"].GraphObject.make; // the default category\n\nfunction defaultGraph() {\n  return $(_gojs[\"default\"].Node, \"Spot\", _functionsDfd[\"default\"].nodeStyle(), {\n    locationSpot: _gojs[\"default\"].Spot.Center\n  }, // the main object is a Panel that surrounds a TextBlock with a rectangular Shape\n  $(_gojs[\"default\"].Panel, \"Auto\", $(_gojs[\"default\"].Shape, \"Rectangle\", new _gojs[\"default\"].Binding(\"fill\", \"color\"), {\n    fill: \"#00A9C9\",\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true,\n    Size: new _gojs[\"default\"].Size(30, 30)\n  }), $(_gojs[\"default\"].TextBlock, _functionsDfd[\"default\"].textStyle(), {\n    margin: 5,\n    editable: true\n  }, new _gojs[\"default\"].Binding(\"text\").makeTwoWay())), // four named ports, one on each side:\n  _functionsDfd[\"default\"].makePort(\"T\", _gojs[\"default\"].Spot.Top, _gojs[\"default\"].Spot.TopSide, false, true), _functionsDfd[\"default\"].makePort(\"L\", _gojs[\"default\"].Spot.Left, _gojs[\"default\"].Spot.LeftSide, true, true), _functionsDfd[\"default\"].makePort(\"R\", _gojs[\"default\"].Spot.Right, _gojs[\"default\"].Spot.RightSide, true, true), _functionsDfd[\"default\"].makePort(\"B\", _gojs[\"default\"].Spot.Bottom, _gojs[\"default\"].Spot.BottomSide, true, false));\n}\n\nfunction conditionalGraph() {\n  return $(_gojs[\"default\"].Node, \"Spot\", _functionsDfd[\"default\"].nodeStyle(), {\n    locationSpot: _gojs[\"default\"].Spot.Center\n  }, // the main object is a Panel that surrounds a TextBlock with a rectangular Shape\n  $(_gojs[\"default\"].Panel, \"Auto\", $(_gojs[\"default\"].Shape, \"Diamond\", {\n    fill: \"#00A9C9\",\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }), $(_gojs[\"default\"].TextBlock, _functionsDfd[\"default\"].textStyle(), {\n    margin: 8,\n    editable: true\n  }, new _gojs[\"default\"].Binding(\"text\").makeTwoWay())), // four named ports, one on each side:\n  _functionsDfd[\"default\"].makePort(\"T\", _gojs[\"default\"].Spot.Top, _gojs[\"default\"].Spot.Top, false, true), _functionsDfd[\"default\"].makePort(\"L\", _gojs[\"default\"].Spot.Left, _gojs[\"default\"].Spot.Left, true, true), _functionsDfd[\"default\"].makePort(\"R\", _gojs[\"default\"].Spot.Right, _gojs[\"default\"].Spot.Right, true, true), _functionsDfd[\"default\"].makePort(\"B\", _gojs[\"default\"].Spot.Bottom, _gojs[\"default\"].Spot.Bottom, true, false));\n}\n\nfunction startGraph() {\n  return $(_gojs[\"default\"].Node, \"Spot\", _functionsDfd[\"default\"].nodeStyle(), {\n    locationSpot: _gojs[\"default\"].Spot.Center\n  }, $(_gojs[\"default\"].Panel, \"Auto\", $(_gojs[\"default\"].Shape, \"Circle\", new _gojs[\"default\"].Binding(\"fill\", \"color\"), {\n    minSize: new _gojs[\"default\"].Size(40, 40),\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }), $(_gojs[\"default\"].TextBlock, \"Start\", _functionsDfd[\"default\"].textStyle(), new _gojs[\"default\"].Binding(\"text\"))), _functionsDfd[\"default\"].makePort(\"B\", _gojs[\"default\"].Spot.Bottom, _gojs[\"default\"].Spot.Bottom, true, false));\n}\n\nfunction varGraph() {\n  return $(_gojs[\"default\"].Node, \"Spot\", _functionsDfd[\"default\"].nodeStyle(), {\n    locationSpot: _gojs[\"default\"].Spot.Center\n  }, $(_gojs[\"default\"].Panel, \"Auto\", $(_gojs[\"default\"].Shape, \"square\", new _gojs[\"default\"].Binding(\"fill\", \"color\"), {\n    minSize: new _gojs[\"default\"].Size(40, 40),\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }), $(_gojs[\"default\"].TextBlock, _functionsDfd[\"default\"].textStyle(), {\n    editable: true\n  }, new _gojs[\"default\"].Binding(\"text\"))), // three named ports, one on each side except the top, all output only:\n  _functionsDfd[\"default\"].makePort(\"T\", _gojs[\"default\"].Spot.Top, _gojs[\"default\"].Spot.TopSide, false, true), _functionsDfd[\"default\"].makePort(\"L\", _gojs[\"default\"].Spot.Left, _gojs[\"default\"].Spot.LeftSide, true, true), _functionsDfd[\"default\"].makePort(\"R\", _gojs[\"default\"].Spot.Right, _gojs[\"default\"].Spot.RightSide, true, true), _functionsDfd[\"default\"].makePort(\"B\", _gojs[\"default\"].Spot.Bottom, _gojs[\"default\"].Spot.BottomSide, true, false));\n}\n\nfunction ifGraph() {\n  return $(_gojs[\"default\"].Node, \"Spot\", _functionsDfd[\"default\"].nodeStyle(), {\n    locationSpot: _gojs[\"default\"].Spot.Center\n  }, $(_gojs[\"default\"].Panel, \"Auto\", $(_gojs[\"default\"].Shape, \"RightTriangle\", new _gojs[\"default\"].Binding(\"fill\", \"color\"), {\n    minSize: new _gojs[\"default\"].Size(80, 80),\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }), $(_gojs[\"default\"].TextBlock, _functionsDfd[\"default\"].textStyle(), {\n    editable: true\n  }, new _gojs[\"default\"].Binding(\"text\"))), // three named ports, one on each side except the top, all output only:\n  _functionsDfd[\"default\"].makePort(\"T\", _gojs[\"default\"].Spot.Top, _gojs[\"default\"].Spot.Top, false, true), _functionsDfd[\"default\"].makePort(\"L\", _gojs[\"default\"].Spot.Left, _gojs[\"default\"].Spot.Left, true, false), _functionsDfd[\"default\"].makePort(\"R\", _gojs[\"default\"].Spot.Right, _gojs[\"default\"].Spot.Right, true, false), _functionsDfd[\"default\"].makePort(\"B\", _gojs[\"default\"].Spot.Bottom, _gojs[\"default\"].Spot.Bottom, true, false));\n}\n\nfunction caseGraph() {\n  return $(_gojs[\"default\"].Node, \"Spot\", _functionsDfd[\"default\"].nodeStyle(), {\n    locationSpot: _gojs[\"default\"].Spot.Center\n  }, new _gojs[\"default\"].Binding(\"location\", \"loc\", _gojs[\"default\"].Point.parse), $(_gojs[\"default\"].Panel, \"Auto\", $(_gojs[\"default\"].Shape, \"RoundedRectangle\", new _gojs[\"default\"].Binding(\"fill\", \"color\"), {\n    fromSpot: _gojs[\"default\"].Spot.Bottom,\n    toSpot: _gojs[\"default\"].Spot.Top,\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }), $(_gojs[\"default\"].TextBlock, _functionsDfd[\"default\"].textStyle(), {\n    editable: true\n  }, new _gojs[\"default\"].Binding(\"text\"))), // three named ports, one on each side except the top, all output only:\n  _functionsDfd[\"default\"].makePort(\"T\", _gojs[\"default\"].Spot.Top, _gojs[\"default\"].Spot.Top, false, true), _functionsDfd[\"default\"].makePort(\"L\", _gojs[\"default\"].Spot.Left, _gojs[\"default\"].Spot.Left, true, false), _functionsDfd[\"default\"].makePort(\"R\", _gojs[\"default\"].Spot.Right, _gojs[\"default\"].Spot.Right, true, false), _functionsDfd[\"default\"].makePort(\"B\", _gojs[\"default\"].Spot.Bottom, _gojs[\"default\"].Spot.Bottom, true, false));\n}\n\nfunction switchGraph() {\n  return $(_gojs[\"default\"].Node, \"Spot\", _functionsDfd[\"default\"].nodeStyle(), {\n    locationSpot: _gojs[\"default\"].Spot.Center\n  }, $(_gojs[\"default\"].Panel, \"Auto\", $(_gojs[\"default\"].Shape, \"octagon\", new _gojs[\"default\"].Binding(\"fill\", \"color\"), {\n    toSpot: _gojs[\"default\"].Spot.Bottom,\n    minSize: new _gojs[\"default\"].Size(80, 80),\n    strokeWidth: 0\n  }), $(_gojs[\"default\"].TextBlock, _functionsDfd[\"default\"].textStyle(), {\n    editable: true\n  }, new _gojs[\"default\"].Binding(\"text\"))), _functionsDfd[\"default\"].makePort(\"B\", _gojs[\"default\"].Spot.Bottom, _gojs[\"default\"].Spot.Bottom, true, false));\n}\n\nfunction forGraph() {\n  return $(_gojs[\"default\"].Node, \"Spot\", {\n    locationSpot: _gojs[\"default\"].Spot.Center\n  }, $(_gojs[\"default\"].Shape, \"Rectangle\", {\n    fill: \"\",\n    minSize: new _gojs[\"default\"].Size(140, 40),\n    strokeWidth: 0\n  }), $(_gojs[\"default\"].Shape, \"TriangleLeft\", {\n    width: 20,\n    height: 40,\n    fill: \"black\",\n    alignment: _gojs[\"default\"].Spot.Left\n  }), $(_gojs[\"default\"].Shape, \"Rectangle\", {\n    width: 120,\n    height: 40,\n    fill: \"black\"\n  }), $(_gojs[\"default\"].Shape, \"TriangleRight\", {\n    width: 20,\n    height: 40,\n    fill: \"black\",\n    alignment: _gojs[\"default\"].Spot.Right\n  }), $(_gojs[\"default\"].TextBlock, _functionsDfd[\"default\"].textStyle(), {\n    text: \"Inicio\",\n    font: \"bold 8pt Helvetica, Arial, sans-serif\",\n    position: new _gojs[\"default\"].Point(0, 0)\n  }), $(_gojs[\"default\"].TextBlock, _functionsDfd[\"default\"].textStyle(), {\n    editable: true,\n    text: \"3\",\n    font: \"bold 8pt Helvetica, Arial, sans-serif\",\n    position: new _gojs[\"default\"].Point(200, 0)\n  }), _functionsDfd[\"default\"].makePort(\"B\", _gojs[\"default\"].Spot.Bottom, _gojs[\"default\"].Spot.Bottom, true, false));\n}\n\nfunction endGraph() {\n  return $(_gojs[\"default\"].Node, \"Spot\", _functionsDfd[\"default\"].nodeStyle(), $(_gojs[\"default\"].Panel, \"Auto\", $(_gojs[\"default\"].Shape, \"Circle\", {\n    minSize: new _gojs[\"default\"].Size(40, 40),\n    fill: \"#DC3C00\",\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }), $(_gojs[\"default\"].TextBlock, \"End\", _functionsDfd[\"default\"].textStyle(), new _gojs[\"default\"].Binding(\"text\"))), // three named ports, one on each side except the bottom, all input only:\n  _functionsDfd[\"default\"].makePort(\"T\", _gojs[\"default\"].Spot.Top, _gojs[\"default\"].Spot.Top, false, true), _functionsDfd[\"default\"].makePort(\"L\", _gojs[\"default\"].Spot.Left, _gojs[\"default\"].Spot.Left, false, true), _functionsDfd[\"default\"].makePort(\"R\", _gojs[\"default\"].Spot.Right, _gojs[\"default\"].Spot.Right, false, true));\n}\n\nfunction commentGraph() {\n  return $(_gojs[\"default\"].Node, \"Auto\", _functionsDfd[\"default\"].nodeStyle(), $(_gojs[\"default\"].Shape, \"File\", {\n    fill: \"#DEE0A3\",\n    strokeWidth: 0,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true\n  }), $(_gojs[\"default\"].TextBlock, _functionsDfd[\"default\"].textStyle(), {\n    margin: 5,\n    maxSize: new _gojs[\"default\"].Size(200, NaN),\n    wrap: _gojs[\"default\"].TextBlock.WrapFit,\n    textAlign: \"center\",\n    editable: true,\n    font: \"bold 12pt Helvetica, Arial, sans-serif\",\n    stroke: '#454545'\n  }, new _gojs[\"default\"].Binding(\"text\").makeTwoWay()) // no ports, because no links are allowed to connect with a comment\n  );\n}\n\nfunction groupGraph() {\n  return $(_gojs[\"default\"].Group, \"Auto\", {\n    resizable: true,\n    resizeObjectName: \"PH\"\n  }, $(_gojs[\"default\"].Panel, \"Auto\", $(_gojs[\"default\"].Shape, \"RoundedRectangle\", {\n    fill: \"rgba(128,128,128,0.33)\",\n    name: \"PH\"\n  }, new _gojs[\"default\"].Binding(\"desiredSize\", \"size\", _gojs[\"default\"].Size.parse).makeTwoWay(_gojs[\"default\"].Size.stringify)), $(_gojs[\"default\"].Placeholder, // represents the area of all member parts,\n  {\n    padding: 3\n  }), $(_gojs[\"default\"].TextBlock, {\n    alignment: _gojs[\"default\"].Spot.Right,\n    font: \"Bold 12pt Sans-Serif\"\n  }, new _gojs[\"default\"].Binding(\"text\"))), //three named ports, one on each side except the top, all output only:\n  _functionsDfd[\"default\"].makePort(\"T\", _gojs[\"default\"].Spot.Top, _gojs[\"default\"].Spot.Top, false, true), _functionsDfd[\"default\"].makePort(\"B\", _gojs[\"default\"].Spot.Bottom, _gojs[\"default\"].Spot.Bottom, true, false));\n}\n\nmodule.exports = {\n  defaultGraph: defaultGraph,\n  conditionalGraph: conditionalGraph,\n  startGraph: startGraph,\n  varGraph: varGraph,\n  ifGraph: ifGraph,\n  caseGraph: caseGraph,\n  switchGraph: switchGraph,\n  forGraph: forGraph,\n  endGraph: endGraph,\n  commentGraph: commentGraph,\n  groupGraph: groupGraph\n};","map":{"version":3,"sources":["C:/Users/LENOVO/Documents/teoria/Views/pages/Components/nodeTemplate.js"],"names":["$","go","GraphObject","make","defaultGraph","Node","functionDfd","nodeStyle","locationSpot","Spot","Center","Panel","Shape","Binding","fill","strokeWidth","portId","fromLinkable","toLinkable","Size","TextBlock","textStyle","margin","editable","makeTwoWay","makePort","Top","TopSide","Left","LeftSide","Right","RightSide","Bottom","BottomSide","conditionalGraph","startGraph","minSize","varGraph","ifGraph","caseGraph","Point","parse","fromSpot","toSpot","switchGraph","forGraph","width","height","alignment","text","font","position","endGraph","commentGraph","maxSize","NaN","wrap","WrapFit","textAlign","stroke","groupGraph","Group","resizable","resizeObjectName","name","stringify","Placeholder","padding","module","exports"],"mappings":"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","sourcesContent":["import go from 'gojs'\r\nimport functionDfd from './functionsDfd'\r\n\r\nconst $ = go.GraphObject.make;\r\n\r\n// the default category\r\nfunction defaultGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(), { locationSpot: go.Spot.Center },\r\n        // the main object is a Panel that surrounds a TextBlock with a rectangular Shape\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"Rectangle\", new go.Binding(\"fill\", \"color\"),\r\n                {\r\n                    fill: \"#00A9C9\",\r\n                    strokeWidth: 0,\r\n                    portId: \"\",\r\n                    fromLinkable: true,\r\n                    toLinkable: true,\r\n                    Size: new go.Size(30, 30)\r\n                },\r\n            ),\r\n            $(go.TextBlock, functionDfd.textStyle(), {\r\n                margin: 5,\r\n                editable: true\r\n            }, new go.Binding(\"text\").makeTwoWay())\r\n        ),\r\n        // four named ports, one on each side:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.TopSide, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.LeftSide, true, true),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.RightSide, true, true),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.BottomSide, true, false)\r\n    )\r\n}\r\n\r\nfunction conditionalGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(), { locationSpot: go.Spot.Center },\r\n        // the main object is a Panel that surrounds a TextBlock with a rectangular Shape\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"Diamond\",\r\n                {\r\n                    fill: \"#00A9C9\",\r\n                    strokeWidth: 0,\r\n                    portId: \"\",\r\n                    fromLinkable: true,\r\n                    toLinkable: true\r\n                }),\r\n            $(go.TextBlock, functionDfd.textStyle(), {\r\n                margin: 8,\r\n                editable: true\r\n            },\r\n                new go.Binding(\"text\").makeTwoWay())\r\n        ),\r\n        // four named ports, one on each side:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, true),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, true),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction startGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(), { locationSpot: go.Spot.Center },\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"Circle\",\r\n                new go.Binding(\"fill\", \"color\"),\r\n                {\r\n                    minSize: new go.Size(40, 40),\r\n                    strokeWidth: 0,\r\n                    portId: \"\",\r\n                    fromLinkable: true,\r\n                    toLinkable: true\r\n                }),\r\n            $(go.TextBlock, \"Start\", functionDfd.textStyle(),\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\n\r\nfunction varGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(), { locationSpot: go.Spot.Center },\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"square\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                minSize: new go.Size(40, 40),\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true,\r\n                toLinkable: true\r\n            }),\r\n            $(go.TextBlock, functionDfd.textStyle(), { editable: true },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        // three named ports, one on each side except the top, all output only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.TopSide, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.LeftSide, true, true),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.RightSide, true, true),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.BottomSide, true, false)\r\n    )\r\n}\r\n\r\nfunction ifGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(), { locationSpot: go.Spot.Center },\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"RightTriangle\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                minSize: new go.Size(80, 80),\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true,\r\n                toLinkable: true\r\n            }),\r\n            $(go.TextBlock, functionDfd.textStyle(), { editable: true },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        // three named ports, one on each side except the top, all output only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction caseGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(), { locationSpot: go.Spot.Center },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"RoundedRectangle\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                fromSpot: go.Spot.Bottom,\r\n                toSpot: go.Spot.Top,\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true, toLinkable: true\r\n            }),\r\n            $(go.TextBlock, functionDfd.textStyle(), { editable: true },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        // three named ports, one on each side except the top, all output only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction switchGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(), { locationSpot: go.Spot.Center },\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"octagon\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                toSpot: go.Spot.Bottom,\r\n                minSize: new go.Size(80, 80),\r\n                strokeWidth: 0\r\n            }),\r\n            $(go.TextBlock, functionDfd.textStyle(), { editable: true },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction forGraph() {\r\n    return $(go.Node, \"Spot\", { locationSpot: go.Spot.Center },\r\n        $(go.Shape, \"Rectangle\",\r\n            {\r\n                fill: \"\",\r\n                minSize: new go.Size(140, 40),\r\n                strokeWidth: 0\r\n            }),\r\n        $(go.Shape, \"TriangleLeft\", { width: 20, height: 40, fill: \"black\", alignment: go.Spot.Left }),\r\n        $(go.Shape, \"Rectangle\", { width: 120, height: 40, fill: \"black\" }),\r\n        $(go.Shape, \"TriangleRight\", { width: 20, height: 40, fill: \"black\", alignment: go.Spot.Right }),\r\n        $(go.TextBlock, functionDfd.textStyle(), { text: \"Inicio\", font: \"bold 8pt Helvetica, Arial, sans-serif\", position: new go.Point(0, 0) }),\r\n        $(go.TextBlock, functionDfd.textStyle(), { editable: true, text: \"3\", font: \"bold 8pt Helvetica, Arial, sans-serif\", position: new go.Point(200, 0) }),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction endGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"Circle\", {\r\n                minSize: new go.Size(40, 40),\r\n                fill: \"#DC3C00\",\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true,\r\n                toLinkable: true\r\n            }),\r\n            $(go.TextBlock, \"End\", functionDfd.textStyle(),\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        // three named ports, one on each side except the bottom, all input only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, false, true),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, false, true)\r\n    )\r\n}\r\n\r\nfunction commentGraph() {\r\n    return $(go.Node, \"Auto\", functionDfd.nodeStyle(),\r\n        $(go.Shape, \"File\", {\r\n            fill: \"#DEE0A3\",\r\n            strokeWidth: 0,\r\n            portId: \"\",\r\n            fromLinkable: true,\r\n            toLinkable: true\r\n        }),\r\n        $(go.TextBlock, functionDfd.textStyle(), {\r\n            margin: 5,\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            textAlign: \"center\",\r\n            editable: true,\r\n            font: \"bold 12pt Helvetica, Arial, sans-serif\",\r\n            stroke: '#454545'\r\n        },\r\n            new go.Binding(\"text\").makeTwoWay())\r\n        // no ports, because no links are allowed to connect with a comment\r\n    )\r\n}\r\n\r\nfunction groupGraph() {\r\n    return $(go.Group, \"Auto\", {\r\n        resizable: true,\r\n        resizeObjectName: \"PH\"\r\n    },\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"RoundedRectangle\",\r\n                {\r\n                    fill: \"rgba(128,128,128,0.33)\",\r\n                    name: \"PH\",\r\n                },\r\n                new go.Binding(\"desiredSize\", \"size\", go.Size.parse).makeTwoWay(go.Size.stringify)),\r\n            $(go.Placeholder,    // represents the area of all member parts,\r\n                { padding: 3 }),\r\n            $(go.TextBlock, { alignment: go.Spot.Right, font: \"Bold 12pt Sans-Serif\" },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n\r\n        //three named ports, one on each side except the top, all output only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    defaultGraph,\r\n    conditionalGraph,\r\n    startGraph,\r\n    varGraph,\r\n    ifGraph,\r\n    caseGraph,\r\n    switchGraph,\r\n    forGraph,\r\n    endGraph,\r\n    commentGraph,\r\n    groupGraph\r\n}"]},"metadata":{},"sourceType":"script"}