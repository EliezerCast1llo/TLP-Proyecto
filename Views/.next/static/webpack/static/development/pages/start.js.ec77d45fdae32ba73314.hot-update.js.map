{"version":3,"file":"static/webpack/static\\development\\pages\\start.js.ec77d45fdae32ba73314.hot-update.js","sources":["webpack:///./pages/Components/nodeTemplate.js"],"sourcesContent":["import go from 'gojs'\r\nimport functionDfd from './functionsDfd'\r\n\r\nconst $ = go.GraphObject.make;\r\n\r\n// the default category\r\nfunction defaultGraph() {\r\n    return $(go.Node, \"Table\", functionDfd.nodeStyle(),\r\n        // the main object is a Panel that surrounds a TextBlock with a rectangular Shape\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"Rectangle\", new go.Binding(\"fill\", \"color\"),\r\n                {\r\n                    fill: \"#00A9C9\",\r\n                    strokeWidth: 0,\r\n                    portId: \"\",\r\n                    fromLinkable: true, toLinkable: true\r\n                },\r\n                new go.Binding(\"figure\", \"figure\")),\r\n            $(go.TextBlock, functionDfd.textStyle(), {\r\n                margin: 8,\r\n                maxSize: new go.Size(160, NaN),\r\n                wrap: go.TextBlock.WrapFit,\r\n                editable: true\r\n            },\r\n                new go.Binding(\"text\").makeTwoWay())\r\n        ),\r\n        // four named ports, one on each side:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.TopSide, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.LeftSide, true, true),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.RightSide, true, true),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.BottomSide, true, false)\r\n    )\r\n}\r\n\r\nfunction conditionalGraph() {\r\n    return $(go.Node, \"Table\", functionDfd.nodeStyle(),\r\n        // the main object is a Panel that surrounds a TextBlock with a rectangular Shape\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"Diamond\", {\r\n                fill: \"#00A9C9\",\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true, toLinkable: true\r\n            },\r\n                new go.Binding(\"figure\", \"figure\")),\r\n            $(go.TextBlock, functionDfd.textStyle(), {\r\n                margin: 8,\r\n                maxSize: new go.Size(160, NaN),\r\n                wrap: go.TextBlock.WrapFit,\r\n                editable: true\r\n            },\r\n                new go.Binding(\"text\").makeTwoWay())\r\n        ),\r\n        // four named ports, one on each side:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, true),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, true),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction startGraph() {\r\n    return $(go.Node, \"Table\", functionDfd.nodeStyle(),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"Circle\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                minSize: new go.Size(40, 40),\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true, toLinkable: true\r\n            }),\r\n            $(go.TextBlock, \"Start\", functionDfd.textStyle(),\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        // three named ports, one on each side except the top, all output only:\r\n        /* this.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false),\r\n         this.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false),*/\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\n\r\nfunction varGraph() {\r\n    return $(go.Node, \"Table\", functionDfd.nodeStyle(),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"square\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                minSize: new go.Size(40, 40),\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true, toLinkable: true\r\n            }),\r\n            $(go.TextBlock, functionDfd.textStyle(), { editable: true },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        // three named ports, one on each side except the top, all output only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.TopSide, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.LeftSide, true, true),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.RightSide, true, true),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.BottomSide, true, false)\r\n    )\r\n}\r\n\r\nfunction ifGraph() {\r\n    return $(go.Node, \"Table\", functionDfd.nodeStyle(),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"RightTriangle\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                // angle: 65,\r\n                // geometryString: \"F M140 0 L70 70 0 50z\",\r\n                minSize: new go.Size(80, 80),\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true, toLinkable: true\r\n            }),\r\n            $(go.TextBlock, functionDfd.textStyle(), { editable: true },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        // three named ports, one on each side except the top, all output only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction caseGraph() {\r\n    return $(go.Node, \"Table\", functionDfd.nodeStyle(), new go.Binding(\"location\", \"loc\", go.Point.parse),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"RoundedRectangle\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                // angle: 65,\r\n                // geometryString: \"F M140 0 L70 70 0 50z\",\r\n                //minSize: new go.Size(80, 80),\r\n                fromSpot: go.Spot.Bottom, toSpot: go.Spot.Top,\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true, toLinkable: true\r\n            }),\r\n            $(go.TextBlock, functionDfd.textStyle(), { editable: true },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        // three named ports, one on each side except the top, all output only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\nmodule.exports = {\r\n    defaultGraph,\r\n    conditionalGraph,\r\n    startGraph,\r\n    varGraph,\r\n    ifGraph,\r\n    caseGraph\r\n}"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAAA;AAJA;AAQA;AACA;AACA;AACA;AAJA;AASA;AAKA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAJA;AAQA;AACA;AACA;AACA;AAJA;AASA;AAKA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAJA;AACA;AASA;;AAEA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAJA;AAMA;AAAA;AAIA;AAKA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AANA;AAQA;AAAA;AAIA;AAKA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAPA;AASA;AAAA;AAIA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;;;A","sourceRoot":""}