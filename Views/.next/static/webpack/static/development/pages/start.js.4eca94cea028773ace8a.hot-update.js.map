{"version":3,"file":"static/webpack/static\\development\\pages\\start.js.4eca94cea028773ace8a.hot-update.js","sources":["webpack:///./pages/Components/nodeTemplate.js"],"sourcesContent":["import go from 'gojs'\r\nimport functionDfd from './functionsDfd'\r\n\r\nconst $ = go.GraphObject.make;\r\n\r\n// the default category\r\nfunction defaultGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(), { locationSpot: go.Spot.Center },\r\n        // the main object is a Panel that surrounds a TextBlock with a rectangular Shape\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"Rectangle\", new go.Binding(\"fill\", \"color\"),\r\n                {\r\n                    fill: \"#00A9C9\",\r\n                    strokeWidth: 0,\r\n                    portId: \"\",\r\n                    fromLinkable: true,\r\n                    toLinkable: true\r\n                },\r\n            ),\r\n            $(go.TextBlock, functionDfd.textStyle(), {\r\n                margin: 5,\r\n                editable: true\r\n            }, new go.Binding(\"text\").makeTwoWay())\r\n        ),\r\n        // four named ports, one on each side:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.TopSide, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.LeftSide, true, true),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.RightSide, true, true),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.BottomSide, true, false)\r\n    )\r\n}\r\n\r\nfunction conditionalGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(), { locationSpot: go.Spot.Center },\r\n        // the main object is a Panel that surrounds a TextBlock with a rectangular Shape\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"Diamond\",\r\n                {\r\n                    fill: \"#00A9C9\",\r\n                    strokeWidth: 0,\r\n                    portId: \"\",\r\n                    fromLinkable: true,\r\n                    toLinkable: true\r\n                }),\r\n            $(go.TextBlock, functionDfd.textStyle(), {\r\n                margin: 8,\r\n                editable: true\r\n            },\r\n                new go.Binding(\"text\").makeTwoWay())\r\n        ),\r\n        // four named ports, one on each side:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, true),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, true),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction startGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(), { locationSpot: go.Spot.Center },\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"Circle\",\r\n                new go.Binding(\"fill\", \"color\"),\r\n                {\r\n                    minSize: new go.Size(40, 40),\r\n                    strokeWidth: 0,\r\n                    portId: \"\",\r\n                    fromLinkable: true,\r\n                    toLinkable: true\r\n                }),\r\n            $(go.TextBlock, \"Start\", functionDfd.textStyle(),\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\n\r\nfunction varGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(), { locationSpot: go.Spot.Center },\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"square\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                minSize: new go.Size(40, 40),\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true,\r\n                toLinkable: true\r\n            }),\r\n            $(go.TextBlock, functionDfd.textStyle(), { editable: true },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        // three named ports, one on each side except the top, all output only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.TopSide, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.LeftSide, true, true),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.RightSide, true, true),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.BottomSide, true, false)\r\n    )\r\n}\r\n\r\nfunction ifGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(), { locationSpot: go.Spot.Center },\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"RightTriangle\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                minSize: new go.Size(80, 80),\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true,\r\n                toLinkable: true\r\n            }),\r\n            $(go.TextBlock, functionDfd.textStyle(), { editable: true },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        // three named ports, one on each side except the top, all output only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction caseGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(), { locationSpot: go.Spot.Center },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"RoundedRectangle\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                fromSpot: go.Spot.Bottom,\r\n                toSpot: go.Spot.Top,\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true, toLinkable: true\r\n            }),\r\n            $(go.TextBlock, functionDfd.textStyle(), { editable: true },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        // three named ports, one on each side except the top, all output only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, true, false),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, true, false),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction switchGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(), { locationSpot: go.Spot.Center },\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"octagon\",\r\n                new go.Binding(\"fill\", \"color\"), {\r\n                toSpot: go.Spot.Bottom,\r\n                minSize: new go.Size(80, 80),\r\n                strokeWidth: 0\r\n            }),\r\n            $(go.TextBlock, functionDfd.textStyle(), { editable: true },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction forGraph() {\r\n    return $(go.Node, \"Spot\", { locationSpot: go.Spot.Center },\r\n        $(go.Shape, \"Rectangle\",\r\n            {\r\n                fill: \"\",\r\n                minSize: new go.Size(140, 40),\r\n                strokeWidth: 0\r\n            }),\r\n        $(go.Shape, \"TriangleLeft\", { width: 20, height: 40, fill: \"black\", alignment: go.Spot.Left }),\r\n        $(go.Shape, \"Rectangle\", { width: 120, height: 40, fill: \"black\" }),\r\n        $(go.Shape, \"TriangleRight\", { width: 20, height: 40, fill: \"black\", alignment: go.Spot.Right }),\r\n        $(go.TextBlock, functionDfd.textStyle(), { row: 1, text: \"Inicio\", font: \"bold 8pt Helvetica, Arial, sans-serif\" }),\r\n        $(go.TextBlock, functionDfd.textStyle(), { column: 2, editable: true, text: \"3\", font: \"bold 8pt Helvetica, Arial, sans-serif\" }),\r\n        \r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\nfunction endGraph() {\r\n    return $(go.Node, \"Spot\", functionDfd.nodeStyle(),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"Circle\", {\r\n                minSize: new go.Size(40, 40),\r\n                fill: \"#DC3C00\",\r\n                strokeWidth: 0,\r\n                portId: \"\",\r\n                fromLinkable: true,\r\n                toLinkable: true\r\n            }),\r\n            $(go.TextBlock, \"End\", functionDfd.textStyle(),\r\n                new go.Binding(\"text\"))\r\n        ),\r\n        // three named ports, one on each side except the bottom, all input only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"L\", go.Spot.Left, go.Spot.Left, false, true),\r\n        functionDfd.makePort(\"R\", go.Spot.Right, go.Spot.Right, false, true)\r\n    )\r\n}\r\n\r\nfunction commentGraph() {\r\n    return $(go.Node, \"Auto\", functionDfd.nodeStyle(),\r\n        $(go.Shape, \"File\", {\r\n            fill: \"#DEE0A3\",\r\n            strokeWidth: 0,\r\n            portId: \"\",\r\n            fromLinkable: true,\r\n            toLinkable: true\r\n        }),\r\n        $(go.TextBlock, functionDfd.textStyle(), {\r\n            margin: 5,\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            textAlign: \"center\",\r\n            editable: true,\r\n            font: \"bold 12pt Helvetica, Arial, sans-serif\",\r\n            stroke: '#454545'\r\n        },\r\n            new go.Binding(\"text\").makeTwoWay())\r\n        // no ports, because no links are allowed to connect with a comment\r\n    )\r\n}\r\n\r\nfunction groupGraph() {\r\n    return $(go.Group, \"Auto\", {\r\n        resizable: true,\r\n        resizeObjectName: \"PH\"\r\n    },\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"RoundedRectangle\",\r\n                {\r\n                    fill: \"rgba(128,128,128,0.33)\",\r\n                    name: \"PH\",\r\n                },\r\n                new go.Binding(\"desiredSize\", \"size\", go.Size.parse).makeTwoWay(go.Size.stringify)),\r\n            $(go.Placeholder,    // represents the area of all member parts,\r\n                { padding: 3 }),\r\n            $(go.TextBlock, { alignment: go.Spot.Right, font: \"Bold 12pt Sans-Serif\" },\r\n                new go.Binding(\"text\"))\r\n        ),\r\n\r\n        //three named ports, one on each side except the top, all output only:\r\n        functionDfd.makePort(\"T\", go.Spot.Top, go.Spot.Top, false, true),\r\n        functionDfd.makePort(\"B\", go.Spot.Bottom, go.Spot.Bottom, true, false)\r\n    )\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    defaultGraph,\r\n    conditionalGraph,\r\n    startGraph,\r\n    varGraph,\r\n    ifGraph,\r\n    caseGraph,\r\n    switchGraph,\r\n    forGraph,\r\n    endGraph,\r\n    commentGraph,\r\n    groupGraph\r\n}"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AAFA;AAMA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AAFA;AAOA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AAYA;AACA;AAEA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAIA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAIA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAAA;AALA;AAOA;AAAA;AAIA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAKA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAYA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AARA;AAoBA;AACA;AACA;AACA;AACA;AACA;AAFA;AAOA;AACA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AAKA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;;;;A","sourceRoot":""}